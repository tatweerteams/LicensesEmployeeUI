{"ast":null,"code":"import _objectSpread from \"D:/repo Tatweer/tatweerteams/CheckbooksOrderingUI/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\n// import { EventBus } from \"../../../eventBus.js\";\nimport { mapActions } from \"vuex\";\nimport { createHelpers } from \"vuex-map-fields\";\nvar _createHelpers = createHelpers({\n    getterType: \"getDataFields\",\n    mutationType: \"updateDataField\"\n  }),\n  mapFields = _createHelpers.mapFields,\n  mapMultiRowFields = _createHelpers.mapMultiRowFields;\nimport { validationInput } from \"../../../models/validationInput.js\";\nimport * as enums from \"../../../models/enum.js\";\nexport default {\n  name: \"insert-OrderRequestItem\",\n  props: {\n    orderRequestIdProp: null\n  },\n  components: {},\n  data: function data() {\n    return {\n      dialog: false,\n      valid: false,\n      validationInput: validationInput,\n      enumModel: enums,\n      // accounts: [],\n      headers: [{\n        text: \"رقم الحساب\",\n        value: \"accountNo\",\n        sortable: false,\n        align: \"center\"\n      }, {\n        text: \"إسم صاحب الحساب\",\n        value: \"accountName\",\n        sortable: false,\n        align: \"center\"\n      }, {\n        text: \"طلب في اليوم\",\n        value: \"individualRequestAccountDay\",\n        sortable: false,\n        align: \"center\"\n      }, {\n        text: \"عدد الدفاتر في اليوم\",\n        value: \"requestQuantity\",\n        sortable: false,\n        align: \"center\"\n      }, {\n        text: \"الكمية\",\n        value: \"countChekBook\",\n        sortable: false,\n        align: \"center\",\n        width: 180\n      }, {\n        text: \"إضافــة\",\n        value: \"action\",\n        sortable: false,\n        align: \"center\"\n      }],\n      loadingInsert: false,\n      isInsertData: false,\n      searchNameOrNumber: null,\n      filterData: {\n        orderRequestId: null,\n        accounNoOrName: null,\n        pageNo: 1,\n        pageSize: 30\n      },\n      page: 1,\n      pageSize: 1\n    };\n  },\n  computed: _objectSpread(_objectSpread({\n    formTitle: function formTitle() {\n      return \"إضافة حساب للطلبية\";\n    }\n  }, mapFields(\"insertAccountOrderItemStore\", {\n    pageCount: \"pageCount\"\n  })), mapMultiRowFields(\"insertAccountOrderItemStore\", {\n    accounts: \"accountWithOutOrderItem\"\n  })),\n  watch: {\n    orderRequestIdProp: {\n      handler: function handler(data) {\n        this.filterData.orderRequestId = data;\n      },\n      immediate: true\n    },\n    searchNameOrNumber: function searchNameOrNumber(data) {\n      this.filterData.accounNoOrName = data;\n    }\n  },\n  methods: _objectSpread(_objectSpread({}, mapActions({\n    GetAccountWithOutOrderItem: \"insertAccountOrderItemStore/GetAccountWithOutOrderItem\",\n    InsertOrderItemRequest: \"insertAccountOrderItemStore/InsertOrderItemRequest\"\n  })), {}, {\n    openDialog: function openDialog() {\n      this.dialog = true;\n      this.getAccounts();\n    },\n    IndividualRequestAccountDayToText: function IndividualRequestAccountDayToText(IndividualRequestAccountDay) {\n      var messge = \"طلب غير محدد\";\n      switch (IndividualRequestAccountDay) {\n        case true:\n          messge = \"طلب غير محدد\";\n          break;\n        case false:\n          messge = \"طلب مرة في اليوم\";\n          break;\n        default:\n          break;\n      }\n      return messge;\n    },\n    getAccounts: function getAccounts() {\n      var _this = this;\n      this.filterData.pageNo = this.page;\n      this.$store.dispatch(\"loading\", true);\n      this.GetAccountWithOutOrderItem(this.filterData).then(function () {\n        _this.$store.dispatch(\"loading\", false);\n        _this.pageSize = _this.pageCount;\n      }).catch(function (error) {\n        _this.$store.dispatch(\"loading\", false);\n        _this.notify(\"\".concat(error), \"#1d262d\");\n      });\n    },\n    isNumber: function isNumber(evt) {\n      if (evt.keyCode == 8) return true;\n      var result = this.checkIsNumber(evt.key);\n      if (!result) {\n        evt.preventDefault();\n      } else {\n        return true;\n      }\n    },\n    checkIsNumber: function checkIsNumber(number) {\n      return /^[0-9]*$/.test(number);\n    },\n    close: function close() {\n      setTimeout(function () {}, 300);\n\n      // if(this.isInsertData)\n      // {\n      //   console.log('d')\n      //   EventBus.$emit(\"refreshDataOrderItem\");\n      // }\n      this.dialog = false;\n      this.page = 1;\n      this.isInsertData = false;\n    },\n    insertAccountItem: function insertAccountItem(item) {\n      var _this2 = this;\n      if (!item.countChekBook) return;\n      if (item.requestQuantity != null && parseInt(item.countChekBook) > parseInt(item.requestQuantity)) {\n        var message = \"لايمكن إجتياز الحد الأعلي لعدد الدفاتر في اليوم \";\n        this.notify(\"\".concat(message), \"#1d262d\");\n        return;\n      }\n      var orderItem = {\n        accountId: item.accountId,\n        accountNo: item.accountNo,\n        accountName: item.accountName,\n        countChekBook: item.countChekBook,\n        orderRequestId: this.filterData.orderRequestId\n      };\n      this.isInsertData = true; // check IsInsertData And Refeach DataGrid\n      this.loadingInsert = true;\n      this.InsertOrderItemRequest(orderItem).then(function (res) {\n        item.isInsert = true;\n        _this2.loadingInsert = false;\n        _this2.$emit(\"refresh-data\");\n        _this2.notify(\"\".concat(res), \"#1d262d\");\n      }).catch(function (error) {\n        _this2.$store.dispatch(\"loading\", false);\n        _this2.notify(\"\".concat(error), \"#1d262d\");\n        _this2.loadingInsert = false;\n      });\n    },\n    resetValidation: function resetValidation() {\n      var _this$$refs$formOrder;\n      (_this$$refs$formOrder = this.$refs.formOrderRequest) === null || _this$$refs$formOrder === void 0 ? void 0 : _this$$refs$formOrder.reset();\n    },\n    onPaginationClick: function onPaginationClick(page) {\n      this.page = page;\n      this.getAccounts();\n    },\n    minusQuentity: function minusQuentity(item) {\n      if (item.isInsert) return;\n      var quentity = parseInt(item.countChekBook) - 1;\n      if (quentity < 1) return;\n      item.countChekBook = quentity;\n    },\n    addQuentity: function addQuentity(item) {\n      if (item.isInsert) return;\n      var quentity = parseInt(item.countChekBook) + 1;\n      if (item.requestQuantity != null && quentity > parseInt(item.requestQuantity)) return;\n      item.countChekBook = quentity;\n    },\n    notify: function notify(text, color) {\n      this.$store.commit(\"showMessage\", {\n        text: text,\n        color: color\n      });\n    }\n  })\n};","map":{"version":3,"mappings":";;;AA2JA;AACA;AAEA;AACA;IACAA;IACAC;EACA;EAHAC;EAAAC;AAKA;AACA;AACA;EACAC;EACAC;IACAC;EACA;EACAC;EAEAC;IAAA;MACAC;MACAC;MACAC;MACAC;MACA;MACAC,UACA;QACAC;QACAC;QACAC;QACAC;MACA,GACA;QACAH;QACAC;QACAC;QACAC;MACA,GACA;QACAH;QACAC;QACAC;QACAC;MACA,GACA;QACAH;QACAC;QACAC;QACAC;MACA,GACA;QACAH;QACAC;QACAC;QACAC;QACAC;MACA,GACA;QACAJ;QACAC;QACAC;QACAC;MACA,EACA;MAEAE;MACAC;MAEAC;MACAC;QACAC;QACAC;QACAC;QACAC;MACA;MAEAC;MACAD;IACA;EAAA;EAEAE;IACAC;MACA;IACA;EAAA,GACA3B;IACA4B;EACA,KACA3B;IACA4B;EACA,GACA;EAEAC;IACA1B;MACA2B;QACA;MACA;MACAC;IACA;IACAb;MACA;IACA;EACA;EACAc,yCACAC;IACAC,4BACA;IACAC,wBACA;EACA;IACAC;MACA;MACA;IACA;IAEAC;MACA;MACA;QACA;UACAC;UACA;QACA;UACAA;UACA;QACA;UACA;MAAA;MAEA;IACA;IAEAC;MAAA;MACA;MACA;MACA,iDACAC;QACA;QACA;MACA,GACAC;QACA;QACA;MACA;IACA;IAEAC;MACA;MAEA;MACA;QACAC;MACA;QACA;MACA;IACA;IACAC;MACA;IACA;IAEAC;MACAC;;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACA;IAEAC;MAAA;MACA;MAEA,IACAC,gCACAC,+DACA;QACA;QACA;QACA;MACA;MAEA;QACAC;QACAC;QACAC;QACAC;QACAjC;MACA;MACA;MACA;MAEA,uCACAoB;QACAQ;QACA;QACA;QACA;MACA,GACAP;QACA;QACA;QACA;MACA;IACA;IAEAa;MAAA;MACA;IACA;IAEAC;MACA;MACA;IACA;IAEAC;MACA;MAEA;MAEA;MACAR;IACA;IACAS;MACA;MAEA;MAEA,IACAT,gCACAU,2CAEA;MAEAV;IACA;IAEAW;MACA;QAAAhD;QAAAiD;MAAA;IACA;EAAA;AAEA","names":["getterType","mutationType","mapFields","mapMultiRowFields","name","props","orderRequestIdProp","components","data","dialog","valid","validationInput","enumModel","headers","text","value","sortable","align","width","loadingInsert","isInsertData","searchNameOrNumber","filterData","orderRequestId","accounNoOrName","pageNo","pageSize","page","computed","formTitle","pageCount","accounts","watch","handler","immediate","methods","mapActions","GetAccountWithOutOrderItem","InsertOrderItemRequest","openDialog","IndividualRequestAccountDayToText","messge","getAccounts","then","catch","isNumber","evt","checkIsNumber","close","setTimeout","insertAccountItem","item","parseInt","accountId","accountNo","accountName","countChekBook","resetValidation","onPaginationClick","minusQuentity","addQuentity","quentity","notify","color"],"sourceRoot":"src/views/OrderRequestItem/components","sources":["insertOrderItemComponent.vue"],"sourcesContent":["<template>\r\n  <v-dialog\r\n    v-model=\"dialog\"\r\n    max-width=\"1100px\"\r\n    persistent\r\n    :overlay-opacity=\"1\"\r\n    overlay-color=\"#081D38\"\r\n    scrollable\r\n  >\r\n    <template v-slot:activator=\"{ on }\">\r\n      <template>\r\n        <v-btn\r\n          color=\"#536DFE\"\r\n          class=\"white--text\"\r\n          @click=\"openDialog\"\r\n          v-on=\"on\"\r\n          elevation=\"5\"\r\n        >\r\n          <v-icon class=\"ml-2\">mdi-plus-circle</v-icon\r\n          ><span>إضافة حساب للقائمة</span>\r\n        </v-btn>\r\n      </template>\r\n    </template>\r\n    <v-card>\r\n      <v-card-title>\r\n        <span class=\"headline\">{{ formTitle }}</span>\r\n        <v-spacer />\r\n        <v-btn class=\"mr-2\" @click=\"close\" outlined color=\"error\">\r\n          <v-icon style=\"font-size: 19px\" dark>clear</v-icon>\r\n        </v-btn>\r\n      </v-card-title>\r\n\r\n      <v-divider></v-divider>\r\n\r\n      <v-card-text>\r\n        <v-container>\r\n          <v-row>\r\n            <v-col cols=\"12\" md=\"4\">\r\n              <v-text-field\r\n                prepend-icon=\"mdi-ticket-confirmation\"\r\n                v-model=\"searchNameOrNumber\"\r\n                dense\r\n                label=\"بحث عن طريق رقم الحساب أو الإسم\"\r\n                maxLength=\"50\"\r\n                @keyup=\"getAccounts\"\r\n              ></v-text-field>\r\n            </v-col>\r\n          </v-row>\r\n          <v-data-table\r\n            :headers=\"headers\"\r\n            :disable-pagination=\"true\"\r\n            :items=\"accounts\"\r\n            hide-default-footer\r\n            class=\"elevation-5 pa-5\"\r\n          >\r\n            <template v-slot:[`item.individualRequestAccountDay`]=\"{ item }\">\r\n              <v-chip small color=\"#E91D62\" text-color=\"white\">\r\n                {{\r\n                  IndividualRequestAccountDayToText(\r\n                    item.individualRequestAccountDay\r\n                  )\r\n                }}\r\n              </v-chip>\r\n            </template>\r\n\r\n            <template v-slot:[`item.requestQuantity`]=\"{ item }\">\r\n              <v-chip\r\n                v-if=\"item.requestQuantity == null\"\r\n                small\r\n                color=\"#E91D62\"\r\n                text-color=\"white\"\r\n              >\r\n                طلب غير محدد\r\n              </v-chip>\r\n              <v-chip v-else small color=\"#081D38\" text-color=\"white\">\r\n                {{ item.requestQuantity }}\r\n              </v-chip>\r\n            </template>\r\n\r\n            <template v-slot:[`item.countChekBook`]=\"{ item }\">\r\n              <v-text-field\r\n                v-model.number=\"item.countChekBook\"\r\n                dense\r\n                maxLength=\"2\"\r\n                append-outer-icon=\"mdi-minus-circle\"\r\n                hide-details\r\n                :rules=\"[\r\n                  validationInput.numberOnly,\r\n                  validationInput.numberNotZero,\r\n                ]\"\r\n                @keydown=\"isNumber\"\r\n                prepend-icon=\"mdi-plus-circle\"\r\n                :readonly=\"item.isInsert\"\r\n                @click:append-outer=\"minusQuentity(item)\"\r\n                @click:prepend=\"addQuentity(item)\"\r\n              ></v-text-field>\r\n            </template>\r\n\r\n            <template v-slot:[`item.action`]=\"{ item }\">\r\n              <v-tooltip bottom v-if=\"!item.isInsert\">\r\n                <template v-slot:activator=\"{ on, attrs }\">\r\n                  <v-btn\r\n                    x-small\r\n                    fab\r\n                    v-bind=\"attrs\"\r\n                    v-on=\"on\"\r\n                    color=\"#081D38\"\r\n                    @click=\"insertAccountItem(item)\"\r\n                    :loading=\"loadingInsert\"\r\n                    :disabled=\"loadingInsert\"\r\n                  >\r\n                    <v-icon size=\"30\" color=\"#fff\">mdi-plus-circle</v-icon>\r\n                  </v-btn>\r\n                </template>\r\n                <span>إضافة للطلبية</span>\r\n              </v-tooltip>\r\n\r\n              <v-tooltip bottom v-else>\r\n                <template v-slot:activator=\"{ on, attrs }\">\r\n                  <v-icon size=\"30\" v-bind=\"attrs\" v-on=\"on\" color=\"#081D38\"\r\n                    >mdi-check-bold</v-icon\r\n                  >\r\n                </template>\r\n                <span>تم إضافة للطلبية</span>\r\n              </v-tooltip>\r\n            </template>\r\n          </v-data-table>\r\n          <template class=\"mt-5\">\r\n            <div class=\"text-center mt-3\">\r\n              <v-pagination\r\n                v-model=\"page\"\r\n                :length=\"pageSize\"\r\n                circle\r\n                color=\"#081D38\"\r\n                @input=\"onPaginationClick\"\r\n                :total-visible=\"7\"\r\n              ></v-pagination>\r\n            </div>\r\n          </template>\r\n        </v-container>\r\n      </v-card-text>\r\n\r\n      <!-- <v-card-actions>\r\n        <div style=\"width: 100%;text-align: center;\">\r\n          <v-btn class=\"mx-2 white--text\" @click=\"close\" color=\"#E91D62\">\r\n            <v-icon dark>clear</v-icon>\r\n            <span>إلغاء</span>\r\n          </v-btn>\r\n        </div>\r\n      </v-card-actions> -->\r\n    </v-card>\r\n  </v-dialog>\r\n</template>\r\n\r\n<script>\r\n// import { EventBus } from \"../../../eventBus.js\";\r\nimport { mapActions } from \"vuex\";\r\n\r\nimport { createHelpers } from \"vuex-map-fields\";\r\nconst { mapFields, mapMultiRowFields } = createHelpers({\r\n  getterType: \"getDataFields\",\r\n  mutationType: \"updateDataField\",\r\n});\r\n\r\nimport { validationInput } from \"../../../models/validationInput.js\";\r\nimport * as enums from \"../../../models/enum.js\";\r\nexport default {\r\n  name: \"insert-OrderRequestItem\",\r\n  props: {\r\n    orderRequestIdProp: null,\r\n  },\r\n  components: {},\r\n\r\n  data: () => ({\r\n    dialog: false,\r\n    valid: false,\r\n    validationInput: validationInput,\r\n    enumModel: enums,\r\n    // accounts: [],\r\n    headers: [\r\n      {\r\n        text: \"رقم الحساب\",\r\n        value: \"accountNo\",\r\n        sortable: false,\r\n        align: \"center\",\r\n      },\r\n      {\r\n        text: \"إسم صاحب الحساب\",\r\n        value: \"accountName\",\r\n        sortable: false,\r\n        align: \"center\",\r\n      },\r\n      {\r\n        text: \"طلب في اليوم\",\r\n        value: \"individualRequestAccountDay\",\r\n        sortable: false,\r\n        align: \"center\",\r\n      },\r\n      {\r\n        text: \"عدد الدفاتر في اليوم\",\r\n        value: \"requestQuantity\",\r\n        sortable: false,\r\n        align: \"center\",\r\n      },\r\n      {\r\n        text: \"الكمية\",\r\n        value: \"countChekBook\",\r\n        sortable: false,\r\n        align: \"center\",\r\n        width: 180,\r\n      },\r\n      {\r\n        text: \"إضافــة\",\r\n        value: \"action\",\r\n        sortable: false,\r\n        align: \"center\",\r\n      },\r\n    ],\r\n\r\n    loadingInsert: false,\r\n    isInsertData: false,\r\n\r\n    searchNameOrNumber: null,\r\n    filterData: {\r\n      orderRequestId: null,\r\n      accounNoOrName: null,\r\n      pageNo: 1,\r\n      pageSize: 30,\r\n    },\r\n\r\n    page: 1,\r\n    pageSize: 1,\r\n  }),\r\n\r\n  computed: {\r\n    formTitle() {\r\n      return \"إضافة حساب للطلبية\";\r\n    },\r\n    ...mapFields(\"insertAccountOrderItemStore\", {\r\n      pageCount: \"pageCount\",\r\n    }),\r\n    ...mapMultiRowFields(\"insertAccountOrderItemStore\", {\r\n      accounts: \"accountWithOutOrderItem\",\r\n    }),\r\n  },\r\n\r\n  watch: {\r\n    orderRequestIdProp: {\r\n      handler(data) {\r\n        this.filterData.orderRequestId = data;\r\n      },\r\n      immediate: true,\r\n    },\r\n    searchNameOrNumber(data) {\r\n      this.filterData.accounNoOrName = data;\r\n    },\r\n  },\r\n  methods: {\r\n    ...mapActions({\r\n      GetAccountWithOutOrderItem:\r\n        \"insertAccountOrderItemStore/GetAccountWithOutOrderItem\",\r\n      InsertOrderItemRequest:\r\n        \"insertAccountOrderItemStore/InsertOrderItemRequest\",\r\n    }),\r\n    openDialog() {\r\n      this.dialog = true;\r\n      this.getAccounts();\r\n    },\r\n\r\n    IndividualRequestAccountDayToText(IndividualRequestAccountDay) {\r\n      let messge = \"طلب غير محدد\";\r\n      switch (IndividualRequestAccountDay) {\r\n        case true:\r\n          messge = \"طلب غير محدد\";\r\n          break;\r\n        case false:\r\n          messge = \"طلب مرة في اليوم\";\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      return messge;\r\n    },\r\n\r\n    getAccounts() {\r\n      this.filterData.pageNo = this.page;\r\n      this.$store.dispatch(\"loading\", true);\r\n      this.GetAccountWithOutOrderItem(this.filterData)\r\n        .then(() => {\r\n          this.$store.dispatch(\"loading\", false);\r\n          this.pageSize = this.pageCount;\r\n        })\r\n        .catch((error) => {\r\n          this.$store.dispatch(\"loading\", false);\r\n          this.notify(`${error}`, \"#1d262d\");\r\n        });\r\n    },\r\n\r\n    isNumber(evt) {\r\n      if (evt.keyCode == 8) return true;\r\n\r\n      var result = this.checkIsNumber(evt.key);\r\n      if (!result) {\r\n        evt.preventDefault();\r\n      } else {\r\n        return true;\r\n      }\r\n    },\r\n    checkIsNumber(number) {\r\n      return /^[0-9]*$/.test(number);\r\n    },\r\n\r\n    close() {\r\n      setTimeout(() => {}, 300);\r\n\r\n      // if(this.isInsertData)\r\n      // {\r\n      //   console.log('d')\r\n      //   EventBus.$emit(\"refreshDataOrderItem\");\r\n      // }\r\n      this.dialog = false;\r\n      this.page = 1;\r\n      this.isInsertData = false;\r\n    },\r\n\r\n    insertAccountItem(item) {\r\n      if (!item.countChekBook) return;\r\n\r\n      if (\r\n        item.requestQuantity != null &&\r\n        parseInt(item.countChekBook) > parseInt(item.requestQuantity)\r\n      ) {\r\n        let message = \"لايمكن إجتياز الحد الأعلي لعدد الدفاتر في اليوم \";\r\n        this.notify(`${message}`, \"#1d262d\");\r\n        return;\r\n      }\r\n\r\n      let orderItem = {\r\n        accountId: item.accountId,\r\n        accountNo: item.accountNo,\r\n        accountName: item.accountName,\r\n        countChekBook: item.countChekBook,\r\n        orderRequestId: this.filterData.orderRequestId,\r\n      };\r\n      this.isInsertData = true; // check IsInsertData And Refeach DataGrid\r\n      this.loadingInsert = true;\r\n\r\n      this.InsertOrderItemRequest(orderItem)\r\n        .then((res) => {\r\n          item.isInsert = true;\r\n          this.loadingInsert = false;\r\n          this.$emit(\"refresh-data\");\r\n          this.notify(`${res}`, \"#1d262d\");\r\n        })\r\n        .catch((error) => {\r\n          this.$store.dispatch(\"loading\", false);\r\n          this.notify(`${error}`, \"#1d262d\");\r\n          this.loadingInsert = false;\r\n        });\r\n    },\r\n\r\n    resetValidation() {\r\n      this.$refs.formOrderRequest?.reset();\r\n    },\r\n\r\n    onPaginationClick(page) {\r\n      this.page = page;\r\n      this.getAccounts();\r\n    },\r\n\r\n    minusQuentity(item) {\r\n      if (item.isInsert) return;\r\n\r\n      let quentity = parseInt(item.countChekBook) - 1;\r\n\r\n      if (quentity < 1) return;\r\n      item.countChekBook = quentity;\r\n    },\r\n    addQuentity(item) {\r\n      if (item.isInsert) return;\r\n\r\n      let quentity = parseInt(item.countChekBook) + 1;\r\n\r\n      if (\r\n        item.requestQuantity != null &&\r\n        quentity > parseInt(item.requestQuantity)\r\n      )\r\n        return;\r\n\r\n      item.countChekBook = quentity;\r\n    },\r\n\r\n    notify(text, color) {\r\n      this.$store.commit(\"showMessage\", { text: text, color: color });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.v-input input {\r\n  max-height: 32px;\r\n  text-align: center;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}