{"ast":null,"code":"import _objectWithoutProperties from \"D:/repo Tatweer/tatweerteams/CheckbooksOrderingUI/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _objectSpread from \"D:/repo Tatweer/tatweerteams/CheckbooksOrderingUI/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _excluded = [\"title\"];\nimport \"core-js/modules/es.array.flat.js\";\nimport \"core-js/modules/es.array.unscopables.flat.js\";\n// Styles\nimport \"../../../src/styles/components/_selection-controls.sass\";\nimport \"../../../src/components/VSwitch/VSwitch.sass\"; // Mixins\n\nimport Selectable from '../../mixins/selectable';\nimport VInput from '../VInput'; // Directives\n\nimport Touch from '../../directives/touch'; // Components\n\nimport { VFabTransition } from '../transitions';\nimport VProgressCircular from '../VProgressCircular/VProgressCircular'; // Helpers\n\nimport { keyCodes } from '../../util/helpers';\n/* @vue/component */\n\nexport default Selectable.extend({\n  name: 'v-switch',\n  directives: {\n    Touch: Touch\n  },\n  props: {\n    inset: Boolean,\n    loading: {\n      type: [Boolean, String],\n      default: false\n    },\n    flat: {\n      type: Boolean,\n      default: false\n    }\n  },\n  computed: {\n    classes: function classes() {\n      return _objectSpread(_objectSpread({}, VInput.options.computed.classes.call(this)), {}, {\n        'v-input--selection-controls v-input--switch': true,\n        'v-input--switch--flat': this.flat,\n        'v-input--switch--inset': this.inset\n      });\n    },\n    attrs: function attrs() {\n      return {\n        'aria-checked': String(this.isActive),\n        'aria-disabled': String(this.isDisabled),\n        role: 'switch'\n      };\n    },\n    // Do not return undefined if disabled,\n    // according to spec, should still show\n    // a color when disabled and active\n    validationState: function validationState() {\n      if (this.hasError && this.shouldValidate) return 'error';\n      if (this.hasSuccess) return 'success';\n      if (this.hasColor !== null) return this.computedColor;\n      return undefined;\n    },\n    switchData: function switchData() {\n      return this.setTextColor(this.loading ? undefined : this.validationState, {\n        class: this.themeClasses\n      });\n    }\n  },\n  methods: {\n    genDefaultSlot: function genDefaultSlot() {\n      return [this.genSwitch(), this.genLabel()];\n    },\n    genSwitch: function genSwitch() {\n      var _this$attrs$ = this.attrs$,\n        title = _this$attrs$.title,\n        switchAttrs = _objectWithoutProperties(_this$attrs$, _excluded);\n      return this.$createElement('div', {\n        staticClass: 'v-input--selection-controls__input'\n      }, [this.genInput('checkbox', _objectSpread(_objectSpread({}, this.attrs), switchAttrs)), this.genRipple(this.setTextColor(this.validationState, {\n        directives: [{\n          name: 'touch',\n          value: {\n            left: this.onSwipeLeft,\n            right: this.onSwipeRight\n          }\n        }]\n      })), this.$createElement('div', _objectSpread({\n        staticClass: 'v-input--switch__track'\n      }, this.switchData)), this.$createElement('div', _objectSpread({\n        staticClass: 'v-input--switch__thumb'\n      }, this.switchData), [this.genProgress()])]);\n    },\n    genProgress: function genProgress() {\n      return this.$createElement(VFabTransition, {}, [this.loading === false ? null : this.$slots.progress || this.$createElement(VProgressCircular, {\n        props: {\n          color: this.loading === true || this.loading === '' ? this.color || 'primary' : this.loading,\n          size: 16,\n          width: 2,\n          indeterminate: true\n        }\n      })]);\n    },\n    onSwipeLeft: function onSwipeLeft() {\n      if (this.isActive) this.onChange();\n    },\n    onSwipeRight: function onSwipeRight() {\n      if (!this.isActive) this.onChange();\n    },\n    onKeydown: function onKeydown(e) {\n      if (e.keyCode === keyCodes.left && this.isActive || e.keyCode === keyCodes.right && !this.isActive) this.onChange();\n    }\n  }\n});","map":{"version":3,"mappings":"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","names":["Selectable","VInput","Touch","VFabTransition","VProgressCircular","keyCodes","extend","name","directives","props","inset","Boolean","loading","type","String","default","flat","computed","classes","options","call","attrs","isActive","isDisabled","role","validationState","hasError","shouldValidate","hasSuccess","hasColor","computedColor","undefined","switchData","setTextColor","class","themeClasses","methods","genDefaultSlot","genSwitch","genLabel","attrs$","title","switchAttrs","$createElement","staticClass","genInput","genRipple","value","left","onSwipeLeft","right","onSwipeRight","genProgress","$slots","progress","color","size","width","indeterminate","onChange","onKeydown","e","keyCode"],"sourceRoot":"","sources":["../../../src/components/VSwitch/VSwitch.ts"],"sourcesContent":["// Styles\nimport '../../styles/components/_selection-controls.sass'\nimport './VSwitch.sass'\n\n// Mixins\nimport Selectable from '../../mixins/selectable'\nimport VInput from '../VInput'\n\n// Directives\nimport Touch from '../../directives/touch'\n\n// Components\nimport { VFabTransition } from '../transitions'\nimport VProgressCircular from '../VProgressCircular/VProgressCircular'\n\n// Helpers\nimport { keyCodes } from '../../util/helpers'\n\n// Types\nimport { VNode, VNodeData } from 'vue'\n\n/* @vue/component */\nexport default Selectable.extend({\n  name: 'v-switch',\n\n  directives: { Touch },\n\n  props: {\n    inset: Boolean,\n    loading: {\n      type: [Boolean, String],\n      default: false,\n    },\n    flat: {\n      type: Boolean,\n      default: false,\n    },\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VInput.options.computed.classes.call(this),\n        'v-input--selection-controls v-input--switch': true,\n        'v-input--switch--flat': this.flat,\n        'v-input--switch--inset': this.inset,\n      }\n    },\n    attrs (): object {\n      return {\n        'aria-checked': String(this.isActive),\n        'aria-disabled': String(this.isDisabled),\n        role: 'switch',\n      }\n    },\n    // Do not return undefined if disabled,\n    // according to spec, should still show\n    // a color when disabled and active\n    validationState (): string | undefined {\n      if (this.hasError && this.shouldValidate) return 'error'\n      if (this.hasSuccess) return 'success'\n      if (this.hasColor !== null) return this.computedColor\n      return undefined\n    },\n    switchData (): VNodeData {\n      return this.setTextColor(this.loading ? undefined : this.validationState, {\n        class: this.themeClasses,\n      })\n    },\n  },\n\n  methods: {\n    genDefaultSlot (): (VNode | null)[] {\n      return [\n        this.genSwitch(),\n        this.genLabel(),\n      ]\n    },\n    genSwitch (): VNode {\n      const { title, ...switchAttrs } = this.attrs$\n\n      return this.$createElement('div', {\n        staticClass: 'v-input--selection-controls__input',\n      }, [\n        this.genInput('checkbox', {\n          ...this.attrs,\n          ...switchAttrs,\n        }),\n        this.genRipple(this.setTextColor(this.validationState, {\n          directives: [{\n            name: 'touch',\n            value: {\n              left: this.onSwipeLeft,\n              right: this.onSwipeRight,\n            },\n          }],\n        })),\n        this.$createElement('div', {\n          staticClass: 'v-input--switch__track',\n          ...this.switchData,\n        }),\n        this.$createElement('div', {\n          staticClass: 'v-input--switch__thumb',\n          ...this.switchData,\n        }, [this.genProgress()]),\n      ])\n    },\n    genProgress (): VNode {\n      return this.$createElement(VFabTransition, {}, [\n        this.loading === false\n          ? null\n          : this.$slots.progress || this.$createElement(VProgressCircular, {\n            props: {\n              color: (this.loading === true || this.loading === '')\n                ? (this.color || 'primary')\n                : this.loading,\n              size: 16,\n              width: 2,\n              indeterminate: true,\n            },\n          }),\n      ])\n    },\n    onSwipeLeft () {\n      if (this.isActive) this.onChange()\n    },\n    onSwipeRight () {\n      if (!this.isActive) this.onChange()\n    },\n    onKeydown (e: KeyboardEvent) {\n      if (\n        (e.keyCode === keyCodes.left && this.isActive) ||\n        (e.keyCode === keyCodes.right && !this.isActive)\n      ) this.onChange()\n    },\n  },\n})\n"]},"metadata":{},"sourceType":"module"}