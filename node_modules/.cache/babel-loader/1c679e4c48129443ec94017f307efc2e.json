{"ast":null,"code":"import _objectSpread from \"D:/repo Tatweer/tatweerteams/CheckbooksOrderingUI/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport { mapActions } from \"vuex\";\nimport { EventBus } from \"../../../eventBus\";\nimport { createHelpers } from \"vuex-map-fields\";\nvar _createHelpers = createHelpers({\n    getterType: \"getDataFields\",\n    mutationType: \"updateDataField\"\n  }),\n  mapFields = _createHelpers.mapFields;\nimport * as enums from \"../../../models/enum.js\";\nimport { aesEncrypt } from \"../../../models/secretData.js\";\nimport SearchComponent from \"../Components/SearchOrderRequestComponent.vue\";\nimport InsertOrUpdateComponent from \"../Components/InsertOrUpdateComponent.vue\";\nimport deleteComponent from \"../Components/deleteOrderRequestComponent.vue\";\n\n// import BranchWorkTimeComponent from \"../Components/BranchWorkTimeComponent.vue\";\n\nexport default {\n  name: \"LayoutsDemosBaselineFlipped\",\n  props: {\n    source: String\n  },\n  components: {\n    SearchComponent: SearchComponent,\n    InsertOrUpdateComponent: InsertOrUpdateComponent,\n    deleteComponent: deleteComponent\n    // BranchWorkTimeComponent,\n  },\n\n  data: function data() {\n    return {\n      userPermasstion: [],\n      headers: [{\n        text: \"رقم الإشاري\",\n        value: \"identityNumber\",\n        sortable: false,\n        align: \"center\"\n      }, {\n        text: \"الفرع\",\n        value: \"branchName\",\n        sortable: false,\n        align: \"center\"\n      }, {\n        text: \"تاريخ الطلب\",\n        value: \"requestDate\",\n        sortable: false,\n        align: \"center\"\n      }, {\n        text: \"نوع الطلب\",\n        value: \"orderRequestType\",\n        sortable: false,\n        align: \"center\"\n      }, {\n        text: \"عدد الحسابات\",\n        value: \"accountCount\",\n        sortable: false,\n        align: \"center\"\n      }, {\n        text: \"حالة الطلب\",\n        value: \"orderRequestState\",\n        sortable: false,\n        align: \"center\"\n      }, {\n        text: \"الإجراءات\",\n        value: \"action\",\n        sortable: false,\n        align: \"center\"\n      }],\n      page: 1,\n      pageSize: 1,\n      filterData: {\n        branchId: null,\n        branchRegionId: null,\n        identityNo: \"\",\n        requestState: null,\n        orderRequestType: null,\n        fromDate: null,\n        toDate: null,\n        pageNo: 1,\n        pageSize: 30\n      },\n      updateItem: null,\n      itemDelete: null\n    };\n  },\n  created: function created() {\n    var _this = this;\n    this.initialize();\n    EventBus.$on(\"refreshData\", function () {\n      _this.initialize();\n    });\n    EventBus.$on(\"closeDialogUpdateOrderRequest\", function () {\n      _this.updateItem = null;\n    });\n    EventBus.$on(\"closeDialogDeleteOrderRequest\", function () {\n      _this.itemDelete = null;\n    });\n  },\n  watch: {},\n  computed: _objectSpread({}, mapFields(\"orderRequestStore\", {\n    grids: \"grids\"\n  })),\n  methods: _objectSpread(_objectSpread({}, mapActions({\n    GetOrderRequests: \"orderRequestStore/GetOrderRequests\"\n  })), {}, {\n    changeColorOrderRequestType: function changeColorOrderRequestType(orderRequestType) {\n      switch (orderRequestType) {\n        case enums.OrderRequestType.Individual:\n          return \"indigo\";\n        case enums.OrderRequestType.Companies:\n          return \"green\";\n        case enums.OrderRequestType.Certified:\n          return \"orange\";\n        default:\n          break;\n      }\n    },\n    OrderRequestTypeToText: function OrderRequestTypeToText(orderRequestType) {\n      switch (orderRequestType) {\n        case enums.OrderRequestType.Individual:\n          return \"أفــراد\";\n        case enums.OrderRequestType.Companies:\n          return \"شركــات\";\n        case enums.OrderRequestType.Certified:\n          return \"مصدقة\";\n        default:\n          break;\n      }\n    },\n    orderRequestStateToText: function orderRequestStateToText(orderRequestState) {\n      switch (orderRequestState) {\n        case enums.OrderRequestState.Process:\n          return \"تحت الإدخال\";\n        case enums.OrderRequestState.Pinding:\n          return \"تم الطلب\";\n        case enums.OrderRequestState.GeneretedCode:\n          return \"جاري إصدار رقم إشاري\";\n        case enums.OrderRequestState.SendRequest:\n          return \"تم إرسال مركز الطباعة\";\n        default:\n          break;\n      }\n    },\n    searchData: function searchData(filter) {\n      this.page = 1;\n      this.filterData = filter;\n      this.initialize();\n    },\n    hasPermassion: function hasPermassion(crrentUser) {\n      this.userPermasstion = this.$store.getters[\"auth/getRole\"];\n      var result = this.userPermasstion.some(function (item) {\n        return crrentUser.includes(item);\n      });\n      return result;\n    },\n    initialize: function initialize() {\n      var _this2 = this;\n      try {\n        this.$store.dispatch(\"loading\", true);\n        this.GetOrderRequests(this.filterData).then(function () {\n          _this2.$store.dispatch(\"loading\", false);\n        }).catch(function (error) {\n          _this2.notify(\"\".concat(error), \"#1d262d\");\n          _this2.$store.dispatch(\"loading\", false);\n        });\n      } catch (error) {\n        this.$store.dispatch(\"loading\", false);\n        this.notify(error, \"#1d262d\");\n      }\n    },\n    deleteOrderRequest: function deleteOrderRequest(item) {\n      this.itemDelete = item;\n    },\n    SendRequest: function SendRequest(item) {\n      console.log(item);\n    },\n    editItem: function editItem(item) {\n      this.updateItem = item;\n    },\n    showOrderRequestItem: function showOrderRequestItem(item) {\n      var keyId = aesEncrypt(item.id);\n      this.$router.push({\n        name: \"OrderRequestItem\",\n        params: {\n          id: keyId\n        }\n      });\n    },\n    onPaginationClick: function onPaginationClick(page) {\n      this.page = page;\n      this.initialize();\n    },\n    notify: function notify(text, color) {\n      this.$store.commit(\"showMessage\", {\n        text: text,\n        color: color\n      });\n    }\n  })\n};","map":{"version":3,"mappings":";;;;;AAyGA;AACA;AACA;AACA;IACAA;IACAC;EACA;EAHAC;AAKA;AACA;AAEA;AACA;AACA;;AAEA;;AAEA;EACAC;EACAC;IACAC;EACA;EACAC;IACAC;IACAC;IACAC;IACA;EACA;;EAEAC;IAAA;MACAC;MACAC,UACA;QACAC;QACAC;QACAC;QACAC;MACA,GAEA;QACAH;QACAC;QACAC;QACAC;MACA,GAEA;QACAH;QACAC;QACAC;QACAC;MACA,GAEA;QACAH;QACAC;QACAC;QACAC;MACA,GAEA;QACAH;QACAC;QACAC;QACAC;MACA,GAEA;QACAH;QACAC;QACAC;QACAC;MACA,GAEA;QACAH;QACAC;QACAC;QACAC;MACA,EACA;MAEAC;MACAC;MAEAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAT;MACA;MAEAU;MACAC;IACA;EAAA;EAEAC;IAAA;IACA;IAEAC;MACA;IACA;IACAA;MACA;IACA;IAEAA;MACA;IACA;EACA;EAEAC;EAEAC,4BACA/B;IACAgC;EACA,GACA;EAEAC,yCACAC;IACAC;EACA;IAEAC;MACA;QACA;UACA;QACA;UACA;QACA;UACA;QACA;UACA;MAAA;IAEA;IAEAC;MACA;QACA;UACA;QACA;UACA;QACA;UACA;QACA;UACA;MAAA;IAEA;IACAC;MACA;QACA;UACA;QACA;UACA;QACA;UACA;QACA;UACA;QAEA;UACA;MAAA;IAEA;IACAC;MACA;MACA;MACA;IACA;IAEAC;MACA;MACA;QAAA,OACAC;MAAA,EACA;MACA;IACA;IAEAC;MAAA;MACA;QACA;QACA,uCACAC;UACA;QACA,GACAC;UACA;UACA;QACA;MACA;QACA;QACA;MACA;IACA;IAEAC;MACA;IACA;IAEAC;MACAC;IACA;IAEAC;MACA;IACA;IAEAC;MACA;MACA;QAAAhD;QAAAiD;UAAAC;QAAA;MAAA;IACA;IAEAC;MACA;MACA;IACA;IAEAC;MACA;QAAA1C;QAAA2C;MAAA;IACA;EAAA;AAEA","names":["getterType","mutationType","mapFields","name","props","source","components","SearchComponent","InsertOrUpdateComponent","deleteComponent","data","userPermasstion","headers","text","value","sortable","align","page","pageSize","filterData","branchId","branchRegionId","identityNo","requestState","orderRequestType","fromDate","toDate","pageNo","updateItem","itemDelete","created","EventBus","watch","computed","grids","methods","mapActions","GetOrderRequests","changeColorOrderRequestType","OrderRequestTypeToText","orderRequestStateToText","searchData","hasPermassion","crrentUser","initialize","then","catch","deleteOrderRequest","SendRequest","console","editItem","showOrderRequestItem","params","id","onPaginationClick","notify","color"],"sourceRoot":"src/views/OrderRequest/pages","sources":["Index.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <template v-if=\"itemDelete\">\r\n      <deleteComponent :deleteItemProp=\"itemDelete\"></deleteComponent>\r\n    </template>\r\n    <v-card\r\n      min-height=\"40rem\"\r\n      color=\"transparent\"\r\n      elevation=\"0\"\r\n      height=\"auto\"\r\n      style=\"padding:30px; \"\r\n    >\r\n      <SearchComponent @search-data=\"searchData\"></SearchComponent>\r\n      <v-data-table\r\n        :headers=\"headers\"\r\n        :disable-pagination=\"true\"\r\n        :items=\"grids\"\r\n        hide-default-footer\r\n        class=\"elevation-5 pa-5\"\r\n      >\r\n        <template v-slot:top>\r\n          <v-toolbar flat color=\"white\">\r\n            <v-toolbar-title\r\n              ><v-icon>mdi-newspaper-plus</v-icon> إدارة طلبات دفاتر\r\n            </v-toolbar-title>\r\n            <v-divider class=\"mx-4\" inset vertical></v-divider>\r\n            <v-spacer />\r\n\r\n            <InsertOrUpdateComponent\r\n              :updateItemProp=\"updateItem\"\r\n            ></InsertOrUpdateComponent>\r\n          </v-toolbar>\r\n        </template>\r\n\r\n        <template v-slot:[`item.identityNumber`]=\"{ item }\">\r\n          <v-chip\r\n            small\r\n            :color=\"item.identityNumber ? '' : '#E91D62'\"\r\n            text-color=\"white\"\r\n          >\r\n            <span v-if=\"item.identityNumber\">{{ identityNumber }}</span>\r\n            <span v-else>لايوجد رقم إشاري</span>\r\n          </v-chip>\r\n        </template>\r\n\r\n        <template v-slot:[`item.orderRequestType`]=\"{ item }\">\r\n          <v-chip\r\n            small\r\n            :color=\"changeColorOrderRequestType(item.orderRequestType)\"\r\n            text-color=\"white\"\r\n          >\r\n            {{ OrderRequestTypeToText(item.orderRequestType) }}\r\n          </v-chip>\r\n        </template>\r\n\r\n        <template v-slot:[`item.orderRequestState`]=\"{ item }\">\r\n          <v-chip small color=\"#E91D62\" text-color=\"white\">\r\n            {{ orderRequestStateToText(item.orderRequestState) }}\r\n          </v-chip>\r\n        </template>\r\n\r\n        <template v-slot:[`item.action`]=\"{ item }\">\r\n          <v-btn x-small fab color=\"#536DFE\" @click=\"editItem(item)\">\r\n            <v-icon color=\"#fff\">mdi-text-box-edit</v-icon>\r\n          </v-btn>\r\n          <v-btn\r\n            class=\"mx-2\"\r\n            x-small\r\n            fab\r\n            color=\"#536DFE\"\r\n            @click=\"showOrderRequestItem(item)\"\r\n          >\r\n            <v-icon color=\"#fff\">mdi-format-list-bulleted</v-icon>\r\n          </v-btn>\r\n          <!-- <v-btn x-small fab color=\"#536DFE\" @click=\"SendRequest(item)\">\r\n            <v-icon color=\"#fff\">mdi-calendar-clock</v-icon>\r\n          </v-btn> -->\r\n          <v-btn x-small fab color=\"#E91D62\" @click=\"deleteOrderRequest(item)\">\r\n            <v-icon color=\"#fff\">mdi-delete</v-icon>\r\n          </v-btn>\r\n        </template>\r\n\r\n        <template v-slot:no-data>\r\n          <v-btn color=\"#081D38\" class=\"white--text\" @click=\"initialize\"\r\n            >عرض البيانات</v-btn\r\n          >\r\n        </template>\r\n      </v-data-table>\r\n\r\n      <template class=\"mt-5\">\r\n        <div class=\"text-center mt-3\">\r\n          <v-pagination\r\n            v-model=\"page\"\r\n            :length=\"pageSize\"\r\n            circle\r\n            color=\"#081D38\"\r\n            @input=\"onPaginationClick\"\r\n          ></v-pagination>\r\n        </div>\r\n      </template>\r\n    </v-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapActions } from \"vuex\";\r\nimport { EventBus } from \"../../../eventBus\";\r\nimport { createHelpers } from \"vuex-map-fields\";\r\nconst { mapFields } = createHelpers({\r\n  getterType: \"getDataFields\",\r\n  mutationType: \"updateDataField\",\r\n});\r\n\r\nimport * as enums from \"../../../models/enum.js\";\r\nimport {aesEncrypt} from \"../../../models/secretData.js\"\r\n\r\nimport SearchComponent from \"../Components/SearchOrderRequestComponent.vue\";\r\nimport InsertOrUpdateComponent from \"../Components/InsertOrUpdateComponent.vue\";\r\nimport deleteComponent from \"../Components/deleteOrderRequestComponent.vue\";\r\n\r\n// import BranchWorkTimeComponent from \"../Components/BranchWorkTimeComponent.vue\";\r\n\r\nexport default {\r\n  name: \"LayoutsDemosBaselineFlipped\",\r\n  props: {\r\n    source: String,\r\n  },\r\n  components: {\r\n    SearchComponent,\r\n    InsertOrUpdateComponent,\r\n    deleteComponent,\r\n    // BranchWorkTimeComponent,\r\n  },\r\n\r\n  data: () => ({\r\n    userPermasstion: [],\r\n    headers: [\r\n      {\r\n        text: \"رقم الإشاري\",\r\n        value: \"identityNumber\",\r\n        sortable: false,\r\n        align: \"center\",\r\n      },\r\n\r\n      {\r\n        text: \"الفرع\",\r\n        value: \"branchName\",\r\n        sortable: false,\r\n        align: \"center\",\r\n      },\r\n\r\n      {\r\n        text: \"تاريخ الطلب\",\r\n        value: \"requestDate\",\r\n        sortable: false,\r\n        align: \"center\",\r\n      },\r\n\r\n      {\r\n        text: \"نوع الطلب\",\r\n        value: \"orderRequestType\",\r\n        sortable: false,\r\n        align: \"center\",\r\n      },\r\n\r\n      {\r\n        text: \"عدد الحسابات\",\r\n        value: \"accountCount\",\r\n        sortable: false,\r\n        align: \"center\",\r\n      },\r\n\r\n      {\r\n        text: \"حالة الطلب\",\r\n        value: \"orderRequestState\",\r\n        sortable: false,\r\n        align: \"center\",\r\n      },\r\n\r\n      {\r\n        text: \"الإجراءات\",\r\n        value: \"action\",\r\n        sortable: false,\r\n        align: \"center\",\r\n      },\r\n    ],\r\n\r\n    page: 1,\r\n    pageSize: 1,\r\n\r\n    filterData: {\r\n      branchId: null,\r\n      branchRegionId: null,\r\n      identityNo: \"\",\r\n      requestState: null,\r\n      orderRequestType: null,\r\n      fromDate: null,\r\n      toDate: null,\r\n      pageNo: 1,\r\n      pageSize: 30,\r\n    },\r\n\r\n    updateItem: null,\r\n    itemDelete: null,\r\n  }),\r\n\r\n  created() {\r\n    this.initialize();\r\n\r\n    EventBus.$on(\"refreshData\", () => {\r\n      this.initialize();\r\n    });\r\n    EventBus.$on(\"closeDialogUpdateOrderRequest\", () => {\r\n      this.updateItem = null;\r\n    });\r\n\r\n    EventBus.$on(\"closeDialogDeleteOrderRequest\", () => {\r\n      this.itemDelete = null;\r\n    });\r\n  },\r\n\r\n  watch: {},\r\n\r\n  computed: {\r\n    ...mapFields(\"orderRequestStore\", {\r\n      grids: \"grids\",\r\n    }),\r\n  },\r\n\r\n  methods: {\r\n    ...mapActions({\r\n      GetOrderRequests: \"orderRequestStore/GetOrderRequests\",\r\n    }),\r\n\r\n    changeColorOrderRequestType(orderRequestType) {\r\n      switch (orderRequestType) {\r\n        case enums.OrderRequestType.Individual:\r\n          return \"indigo\";\r\n        case enums.OrderRequestType.Companies:\r\n          return \"green\";\r\n        case enums.OrderRequestType.Certified:\r\n          return \"orange\";\r\n        default:\r\n          break;\r\n      }\r\n    },\r\n\r\n    OrderRequestTypeToText(orderRequestType) {\r\n      switch (orderRequestType) {\r\n        case enums.OrderRequestType.Individual:\r\n          return \"أفــراد\";\r\n        case enums.OrderRequestType.Companies:\r\n          return \"شركــات\";\r\n        case enums.OrderRequestType.Certified:\r\n          return \"مصدقة\";\r\n        default:\r\n          break;\r\n      }\r\n    },\r\n    orderRequestStateToText(orderRequestState) {\r\n      switch (orderRequestState) {\r\n        case enums.OrderRequestState.Process:\r\n          return \"تحت الإدخال\";\r\n        case enums.OrderRequestState.Pinding:\r\n          return \"تم الطلب\";\r\n        case enums.OrderRequestState.GeneretedCode:\r\n          return \"جاري إصدار رقم إشاري\";\r\n        case enums.OrderRequestState.SendRequest:\r\n          return \"تم إرسال مركز الطباعة\";\r\n\r\n        default:\r\n          break;\r\n      }\r\n    },\r\n    searchData(filter) {\r\n      this.page = 1;\r\n      this.filterData = filter;\r\n      this.initialize();\r\n    },\r\n\r\n    hasPermassion(crrentUser) {\r\n      this.userPermasstion = this.$store.getters[\"auth/getRole\"];\r\n      var result = this.userPermasstion.some((item) =>\r\n        crrentUser.includes(item)\r\n      );\r\n      return result;\r\n    },\r\n\r\n    initialize() {\r\n      try {\r\n        this.$store.dispatch(\"loading\", true);\r\n        this.GetOrderRequests(this.filterData)\r\n          .then(() => {\r\n            this.$store.dispatch(\"loading\", false);\r\n          })\r\n          .catch((error) => {\r\n            this.notify(`${error}`, \"#1d262d\");\r\n            this.$store.dispatch(\"loading\", false);\r\n          });\r\n      } catch (error) {\r\n        this.$store.dispatch(\"loading\", false);\r\n        this.notify(error, \"#1d262d\");\r\n      }\r\n    },\r\n\r\n    deleteOrderRequest(item) {\r\n      this.itemDelete = item;\r\n    },\r\n\r\n    SendRequest(item) {\r\n      console.log(item);\r\n    },\r\n\r\n    editItem(item) {\r\n      this.updateItem = item;\r\n    },\r\n\r\n    showOrderRequestItem(item) {\r\n      let keyId= aesEncrypt(item.id)\r\n      this.$router.push({ name: \"OrderRequestItem\", params: { id: keyId } });\r\n    },\r\n\r\n    onPaginationClick(page) {\r\n      this.page = page;\r\n      this.initialize();\r\n    },\r\n\r\n    notify(text, color) {\r\n      this.$store.commit(\"showMessage\", { text: text, color: color });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* delete and edit icon disable color */\r\n.theme--dark.v-icon--disabled {\r\n  color: rgba(221, 59, 59, 0.5) !important;\r\n}\r\n\r\n/* Activate icon disable color */\r\n.theme--light.v-icon--disabled {\r\n  color: rgba(221, 59, 59, 0.5) !important;\r\n}</style\r\n>>\r\n"]},"metadata":{},"sourceType":"module"}