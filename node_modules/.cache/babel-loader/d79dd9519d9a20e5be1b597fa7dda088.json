{"ast":null,"code":"import _objectSpread from \"D:/repo Tatweer/tatweerteams/CheckbooksOrderingUI/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport { mapActions } from \"vuex\";\nimport { createHelpers } from \"vuex-map-fields\";\nvar _createHelpers = createHelpers({\n    getterType: \"getDataFields\",\n    mutationType: \"updateDataField\"\n  }),\n  mapFields = _createHelpers.mapFields;\nimport { aesEncrypt } from \"../../../models/secretData.js\";\nimport { OrderRequestTypeToTextPublic, OrderRequestStateToTextPublic, ChangeColorOrderRequestTypePublic, OrderRequestStateColorPublic } from \"../../../models/mothedPublic.js\";\nimport SearchComponent from \"../../OrderRequest/Components/SearchOrderRequestComponent.vue\";\nexport default {\n  name: \"LayoutsDemosBaselineFlipped\",\n  props: {\n    source: String\n  },\n  components: {\n    SearchComponent: SearchComponent\n  },\n  data: function data() {\n    return {\n      userPermasstion: [],\n      headers: [{\n        text: \"رقم الإشاري\",\n        value: \"identityNumber\",\n        sortable: false,\n        align: \"center\"\n      }, {\n        text: \"الفرع\",\n        value: \"branchName\",\n        sortable: false,\n        align: \"center\"\n      }, {\n        text: \"تاريخ الطلب\",\n        value: \"requestDate\",\n        sortable: false,\n        align: \"center\"\n      }, {\n        text: \"نوع الطلب\",\n        value: \"orderRequestType\",\n        sortable: false,\n        align: \"center\"\n      }, {\n        text: \"عدد الحسابات\",\n        value: \"accountCount\",\n        sortable: false,\n        align: \"center\"\n      }, {\n        text: \"حالة الطلب\",\n        value: \"orderRequestState\",\n        sortable: false,\n        align: \"center\"\n      }, {\n        text: \"عرض القائمة\",\n        value: \"action\",\n        sortable: false,\n        align: \"center\"\n      }, {\n        text: \"عرض سبب الرفض\",\n        value: \"action\",\n        sortable: false,\n        align: \"center\"\n      }],\n      page: 1,\n      pageSize: 1,\n      filterData: {\n        branchId: null,\n        branchRegionId: null,\n        identityNo: \"\",\n        requestState: null,\n        orderRequestType: null,\n        fromDate: null,\n        toDate: null,\n        pageNo: 1,\n        pageSize: 30\n      }\n    };\n  },\n  created: function created() {\n    this.initialize();\n  },\n  watch: {},\n  computed: _objectSpread({}, mapFields(\"orderRequestRejectStore\", {\n    grids: \"grids\",\n    pageCount: \"pageCount\"\n  })),\n  methods: _objectSpread(_objectSpread({}, mapActions({\n    GetOrderRequestReject: \"orderRequestRejectStore/GetOrderRequestReject\"\n  })), {}, {\n    changeColorOrderRequestType: function changeColorOrderRequestType(orderRequestType) {\n      return ChangeColorOrderRequestTypePublic(orderRequestType);\n    },\n    orderRequestStateColor: function orderRequestStateColor(orderRequestState) {\n      return OrderRequestStateColorPublic(orderRequestState);\n    },\n    OrderRequestTypeToText: function OrderRequestTypeToText(orderRequestType) {\n      return OrderRequestTypeToTextPublic(orderRequestType);\n    },\n    orderRequestStateToText: function orderRequestStateToText(orderRequestState) {\n      return OrderRequestStateToTextPublic(orderRequestState);\n    },\n    searchData: function searchData(filter) {\n      this.page = 1;\n      this.filterData = filter;\n      this.initialize();\n    },\n    hasPermassion: function hasPermassion(crrentUser) {\n      this.userPermasstion = this.$store.getters[\"auth/getRole\"];\n      var result = this.userPermasstion.some(function (item) {\n        return crrentUser.includes(item);\n      });\n      return result;\n    },\n    initialize: function initialize() {\n      var _this = this;\n      try {\n        this.$store.dispatch(\"loading\", true);\n        this.GetOrderRequestReject(this.filterData).then(function () {\n          _this.$store.dispatch(\"loading\", false);\n          _this.pageSize = _this.pageCount;\n        }).catch(function (error) {\n          _this.notify(\"\".concat(error), \"#1d262d\");\n          _this.$store.dispatch(\"loading\", false);\n        });\n      } catch (error) {\n        this.$store.dispatch(\"loading\", false);\n        this.notify(error, \"#1d262d\");\n      }\n    },\n    showOrderRequestItem: function showOrderRequestItem(item) {\n      var keyId = aesEncrypt(item.id);\n      this.$router.push({\n        name: \"OrderRequestPindingItem\",\n        params: {\n          id: keyId\n        }\n      });\n    },\n    onPaginationClick: function onPaginationClick(page) {\n      this.page = page;\n      this.initialize();\n    },\n    notify: function notify(text, color) {\n      this.$store.commit(\"showMessage\", {\n        text: text,\n        color: color\n      });\n    }\n  })\n};","map":{"version":3,"mappings":";;;;;AA+FA;AACA;AACA;IACAA;IACAC;EACA;EAHAC;AAKA;AACA,SACAC,8BACAC,+BACAC,mCACAC,oCACA;AAEA;AAEA;EACAC;EACAC;IACAC;EACA;EACAC;IACAC;EACA;EAEAC;IAAA;MACAC;MACAC,UACA;QACAC;QACAC;QACAC;QACAC;MACA,GAEA;QACAH;QACAC;QACAC;QACAC;MACA,GAEA;QACAH;QACAC;QACAC;QACAC;MACA,GAEA;QACAH;QACAC;QACAC;QACAC;MACA,GAEA;QACAH;QACAC;QACAC;QACAC;MACA,GAEA;QACAH;QACAC;QACAC;QACAC;MACA,GAEA;QACAH;QACAC;QACAC;QACAC;MACA,GACA;QACAH;QACAC;QACAC;QACAC;MACA,EACA;MAEAC;MACAC;MAEAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAT;MACA;IACA;EAAA;EAEAU;IACA;EACA;EAEAC;EAEAC,4BACA9B;IACA+B;IACAC;EACA,GACA;EAEAC,yCACAC;IACAC;EACA;IAEAC;MACA;IACA;IAEAC;MACA;IACA;IAEAC;MACA;IACA;IAEAC;MACA;IACA;IAEAC;MACA;MACA;MACA;IACA;IAEAC;MACA;MACA;QAAA,OACAC;MAAA,EACA;MACA;IACA;IAEAC;MAAA;MACA;QACA;QACA,4CACAC;UACA;UACA;QACA,GACAC;UACA;UACA;QACA;MACA;QACA;QACA;MACA;IACA;IAEAC;MACA;MACA;QACAzC;QACA0C;UAAAC;QAAA;MACA;IACA;IAEAC;MACA;MACA;IACA;IAEAC;MACA;QAAArC;QAAAsC;MAAA;IACA;EAAA;AAEA","names":["getterType","mutationType","mapFields","OrderRequestTypeToTextPublic","OrderRequestStateToTextPublic","ChangeColorOrderRequestTypePublic","OrderRequestStateColorPublic","name","props","source","components","SearchComponent","data","userPermasstion","headers","text","value","sortable","align","page","pageSize","filterData","branchId","branchRegionId","identityNo","requestState","orderRequestType","fromDate","toDate","pageNo","created","watch","computed","grids","pageCount","methods","mapActions","GetOrderRequestReject","changeColorOrderRequestType","orderRequestStateColor","OrderRequestTypeToText","orderRequestStateToText","searchData","hasPermassion","crrentUser","initialize","then","catch","showOrderRequestItem","params","id","onPaginationClick","notify","color"],"sourceRoot":"src/views/orderRequestReject/pages","sources":["index.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <v-card\r\n      min-height=\"40rem\"\r\n      color=\"transparent\"\r\n      elevation=\"0\"\r\n      height=\"auto\"\r\n      style=\"padding:30px; \"\r\n    >\r\n      <SearchComponent\r\n        :otherProcess=\"true\"\r\n        @search-data=\"searchData\"\r\n      ></SearchComponent>\r\n      <v-data-table\r\n        :headers=\"headers\"\r\n        :disable-pagination=\"true\"\r\n        :items=\"grids\"\r\n        hide-default-footer\r\n        class=\"elevation-5 pa-5\"\r\n      >\r\n        <template v-slot:top>\r\n          <v-toolbar flat color=\"white\">\r\n            <v-toolbar-title\r\n              ><v-icon>mdi-newspaper-plus</v-icon> قائمة الطلبات المرفوضة\r\n            </v-toolbar-title>\r\n            <v-divider class=\"mx-4\" inset vertical></v-divider>\r\n            <v-spacer />\r\n          </v-toolbar>\r\n        </template>\r\n\r\n        <template v-slot:[`item.identityNumber`]=\"{ item }\">\r\n          <v-chip\r\n            small\r\n            :color=\"orderRequestStateColor(item.orderRequestState)\"\r\n            text-color=\"white\"\r\n          >\r\n            <span v-if=\"item.identityNumber\">{{ item.identityNumber }}</span>\r\n            <span v-else>لايوجد رقم إشاري</span>\r\n          </v-chip>\r\n        </template>\r\n\r\n        <template v-slot:[`item.orderRequestType`]=\"{ item }\">\r\n          <v-chip\r\n            small\r\n            :color=\"changeColorOrderRequestType(item.orderRequestType)\"\r\n            text-color=\"white\"\r\n          >\r\n            {{ OrderRequestTypeToText(item.orderRequestType) }}\r\n          </v-chip>\r\n        </template>\r\n\r\n        <template v-slot:[`item.orderRequestState`]=\"{ item }\">\r\n          <v-chip\r\n            small\r\n            :color=\"orderRequestStateColor(item.orderRequestState)\"\r\n            text-color=\"white\"\r\n          >\r\n            {{ orderRequestStateToText(item.orderRequestState) }}\r\n          </v-chip>\r\n        </template>\r\n\r\n        <template v-slot:[`item.action`]=\"{ item }\">\r\n          <v-btn\r\n            x-small\r\n            fab\r\n            color=\"#536DFE\"\r\n            @click=\"showOrderRequestItem(item)\"\r\n          >\r\n            <v-icon color=\"#fff\">mdi-format-list-bulleted</v-icon>\r\n          </v-btn>\r\n        </template>\r\n\r\n        <template v-slot:no-data>\r\n          <v-btn color=\"#081D38\" class=\"white--text\" @click=\"initialize\"\r\n            >عرض البيانات</v-btn\r\n          >\r\n        </template>\r\n      </v-data-table>\r\n\r\n      <template class=\"mt-5\">\r\n        <div class=\"text-center mt-3\">\r\n          <v-pagination\r\n            v-model=\"page\"\r\n            :length=\"pageSize\"\r\n            circle\r\n            color=\"#081D38\"\r\n            @input=\"onPaginationClick\"\r\n          ></v-pagination>\r\n        </div>\r\n      </template>\r\n    </v-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapActions } from \"vuex\";\r\nimport { createHelpers } from \"vuex-map-fields\";\r\nconst { mapFields } = createHelpers({\r\n  getterType: \"getDataFields\",\r\n  mutationType: \"updateDataField\",\r\n});\r\n\r\nimport { aesEncrypt } from \"../../../models/secretData.js\";\r\nimport {\r\n  OrderRequestTypeToTextPublic,\r\n  OrderRequestStateToTextPublic,\r\n  ChangeColorOrderRequestTypePublic,\r\n  OrderRequestStateColorPublic,\r\n} from \"../../../models/mothedPublic.js\";\r\n\r\nimport SearchComponent from \"../../OrderRequest/Components/SearchOrderRequestComponent.vue\";\r\n\r\nexport default {\r\n  name: \"LayoutsDemosBaselineFlipped\",\r\n  props: {\r\n    source: String,\r\n  },\r\n  components: {\r\n    SearchComponent,\r\n  },\r\n\r\n  data: () => ({\r\n    userPermasstion: [],\r\n    headers: [\r\n      {\r\n        text: \"رقم الإشاري\",\r\n        value: \"identityNumber\",\r\n        sortable: false,\r\n        align: \"center\",\r\n      },\r\n\r\n      {\r\n        text: \"الفرع\",\r\n        value: \"branchName\",\r\n        sortable: false,\r\n        align: \"center\",\r\n      },\r\n\r\n      {\r\n        text: \"تاريخ الطلب\",\r\n        value: \"requestDate\",\r\n        sortable: false,\r\n        align: \"center\",\r\n      },\r\n\r\n      {\r\n        text: \"نوع الطلب\",\r\n        value: \"orderRequestType\",\r\n        sortable: false,\r\n        align: \"center\",\r\n      },\r\n\r\n      {\r\n        text: \"عدد الحسابات\",\r\n        value: \"accountCount\",\r\n        sortable: false,\r\n        align: \"center\",\r\n      },\r\n\r\n      {\r\n        text: \"حالة الطلب\",\r\n        value: \"orderRequestState\",\r\n        sortable: false,\r\n        align: \"center\",\r\n      },\r\n\r\n      {\r\n        text: \"عرض القائمة\",\r\n        value: \"action\",\r\n        sortable: false,\r\n        align: \"center\",\r\n      },\r\n      {\r\n        text: \"عرض سبب الرفض\",\r\n        value: \"action\",\r\n        sortable: false,\r\n        align: \"center\",\r\n      },\r\n    ],\r\n\r\n    page: 1,\r\n    pageSize: 1,\r\n\r\n    filterData: {\r\n      branchId: null,\r\n      branchRegionId: null,\r\n      identityNo: \"\",\r\n      requestState: null,\r\n      orderRequestType: null,\r\n      fromDate: null,\r\n      toDate: null,\r\n      pageNo: 1,\r\n      pageSize: 30,\r\n    },\r\n  }),\r\n\r\n  created() {\r\n    this.initialize();\r\n  },\r\n\r\n  watch: {},\r\n\r\n  computed: {\r\n    ...mapFields(\"orderRequestRejectStore\", {\r\n      grids: \"grids\",\r\n      pageCount: \"pageCount\",\r\n    }),\r\n  },\r\n\r\n  methods: {\r\n    ...mapActions({\r\n      GetOrderRequestReject: \"orderRequestRejectStore/GetOrderRequestReject\",\r\n    }),\r\n\r\n    changeColorOrderRequestType(orderRequestType) {\r\n      return ChangeColorOrderRequestTypePublic(orderRequestType);\r\n    },\r\n\r\n    orderRequestStateColor(orderRequestState) {\r\n      return OrderRequestStateColorPublic(orderRequestState);\r\n    },\r\n\r\n    OrderRequestTypeToText(orderRequestType) {\r\n      return OrderRequestTypeToTextPublic(orderRequestType);\r\n    },\r\n\r\n    orderRequestStateToText(orderRequestState) {\r\n      return OrderRequestStateToTextPublic(orderRequestState);\r\n    },\r\n\r\n    searchData(filter) {\r\n      this.page = 1;\r\n      this.filterData = filter;\r\n      this.initialize();\r\n    },\r\n\r\n    hasPermassion(crrentUser) {\r\n      this.userPermasstion = this.$store.getters[\"auth/getRole\"];\r\n      var result = this.userPermasstion.some((item) =>\r\n        crrentUser.includes(item)\r\n      );\r\n      return result;\r\n    },\r\n\r\n    initialize() {\r\n      try {\r\n        this.$store.dispatch(\"loading\", true);\r\n        this.GetOrderRequestReject(this.filterData)\r\n          .then(() => {\r\n            this.$store.dispatch(\"loading\", false);\r\n            this.pageSize = this.pageCount;\r\n          })\r\n          .catch((error) => {\r\n            this.notify(`${error}`, \"#1d262d\");\r\n            this.$store.dispatch(\"loading\", false);\r\n          });\r\n      } catch (error) {\r\n        this.$store.dispatch(\"loading\", false);\r\n        this.notify(error, \"#1d262d\");\r\n      }\r\n    },\r\n\r\n    showOrderRequestItem(item) {\r\n      let keyId = aesEncrypt(item.id);\r\n      this.$router.push({\r\n        name: \"OrderRequestPindingItem\",\r\n        params: { id: keyId },\r\n      });\r\n    },\r\n\r\n    onPaginationClick(page) {\r\n      this.page = page;\r\n      this.initialize();\r\n    },\r\n\r\n    notify(text, color) {\r\n      this.$store.commit(\"showMessage\", { text: text, color: color });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* delete and edit icon disable color */\r\n.theme--dark.v-icon--disabled {\r\n  color: rgba(221, 59, 59, 0.5) !important;\r\n}\r\n\r\n/* Activate icon disable color */\r\n.theme--light.v-icon--disabled {\r\n  color: rgba(221, 59, 59, 0.5) !important;\r\n}</style\r\n>>\r\n"]},"metadata":{},"sourceType":"module"}