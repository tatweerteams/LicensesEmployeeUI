{"ast":null,"code":"import _objectSpread from \"D:/repo Tatweer/tatweerteams/CheckbooksOrderingUI/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport { EventBus } from \"../../../eventBus.js\";\nimport ShowBankRegionComponent from \"../Components/ShowDataBankRegionComponent.vue\";\nimport { mapActions } from \"vuex\";\nimport { createHelpers } from \"vuex-map-fields\";\nvar _createHelpers = createHelpers({\n    getterType: \"getDataFields\",\n    mutationType: \"updateDataField\"\n  }),\n  mapFields = _createHelpers.mapFields;\nexport default {\n  name: \"insert-Or-Update\",\n  props: {\n    selectedItemProp: {},\n    dialogProp: {}\n  },\n  components: {\n    ShowBankRegionComponent: ShowBankRegionComponent\n  },\n  data: function data() {\n    return {\n      dialog: false,\n      valid: false,\n      isLoading: false,\n      regionRules: [function (v) {\n        return !!v || \"الرجاء اختيار منطقة\";\n      }],\n      selectedRegion: null,\n      searchRegion: null,\n      filterDataRegion: {\n        regionName: null,\n        bankId: null\n      },\n      insertItem: {\n        bankId: null,\n        regionId: null\n      },\n      insertItemDefualt: {\n        bankId: null,\n        regionId: null\n      }\n    };\n  },\n  created: function created() {\n    var _this = this;\n    EventBus.$on(\"refreshRegions\", function () {\n      _this.close();\n    });\n  },\n  computed: _objectSpread(_objectSpread(_objectSpread({}, mapFields(\"regionStore\", {\n    regions: \"regionUnSelectBank\"\n  })), mapFields(\"bankRegionStore\", {\n    bankRegions: \"bankRegions\"\n  })), {}, {\n    formTitle: function formTitle() {\n      var _this$selectedItemPro;\n      return \"\\u0625\\u0639\\u062F\\u0627\\u062F\\u0627\\u062A \\u0627\\u0644\\u0645\\u0646\\u0627\\u0637\\u0642 \".concat((_this$selectedItemPro = this.selectedItemProp) === null || _this$selectedItemPro === void 0 ? void 0 : _this$selectedItemPro.name);\n    }\n  }),\n  watch: {\n    dialogProp: {\n      handler: function handler(data) {\n        this.dialog = data;\n      },\n      immediate: true\n    },\n    selectedItemProp: {\n      handler: function handler(data) {\n        if (data) this.editSelected(data);\n      },\n      immediate: true\n    }\n    // searchRegion(data) {\n    //   this.filterDataRegion.regionName = data;\n    // },\n  },\n\n  methods: _objectSpread(_objectSpread({}, mapActions({\n    GetRegionStore: \"regionStore/GetRegionsUnSelected\",\n    GetBankRegionStore: \"bankRegionStore/GetBankRegions\",\n    InsertBankRegionStore: \"bankRegionStore/InsertBankRegion\"\n  })), {}, {\n    clearData: function clearData() {\n      this.selectedRegion = null;\n      this.searchRegion = null;\n      this.filterDataRegion.regionName = null;\n      this.insertItem.regionId = null;\n      this.resetValidation();\n    },\n    getRegions: function getRegions() {\n      var _this2 = this;\n      this.GetRegionStore(this.filterDataRegion).then(function () {}).catch(function (error) {\n        _this2.notify(\"\".concat(error), \"#1d262d\");\n      });\n    },\n    getBankRegions: function getBankRegions() {\n      var _this3 = this;\n      this.isLoading = true;\n      this.GetBankRegionStore(this.filterDataRegion).then(function () {\n        _this3.isLoading = false;\n      }).catch(function (error) {\n        _this3.notify(\"\".concat(error), \"#1d262d\");\n        _this3.isLoading = false;\n      });\n    },\n    editSelected: function editSelected(item) {\n      this.filterDataRegion.bankId = item.bankId;\n      this.insertItem.bankId = item.bankId;\n      this.reafershData();\n      this.dialog = true;\n    },\n    reafershData: function reafershData() {\n      this.getBankRegions();\n      this.getRegions();\n    },\n    close: function close() {\n      var _this4 = this;\n      this.dialog = false;\n      setTimeout(function () {\n        _this4.clearData();\n      }, 300);\n      EventBus.$emit(\"closeDialogBankRegion\");\n    },\n    save: function save() {\n      this.insertBankRegion();\n    },\n    insertBankRegion: function insertBankRegion() {\n      var _this5 = this;\n      this.insertItem.regionId = this.selectedRegion ? this.selectedRegion.regionId : null;\n      this.$store.dispatch(\"loading\", true);\n      this.InsertBankRegionStore(this.insertItem).then(function () {\n        _this5.clearData();\n        _this5.reafershData();\n        _this5.$store.dispatch(\"loading\", false);\n      }).catch(function (error) {\n        _this5.notify(\"\".concat(error), \"#1d262d\");\n        _this5.$store.dispatch(\"loading\", false);\n      });\n    },\n    resetValidation: function resetValidation() {\n      var _this$$refs$formBank;\n      (_this$$refs$formBank = this.$refs.formBank) === null || _this$$refs$formBank === void 0 ? void 0 : _this$$refs$formBank.reset();\n    },\n    notify: function notify(text, color) {\n      this.$store.commit(\"showMessage\", {\n        text: text,\n        color: color\n      });\n    }\n  })\n};","map":{"version":3,"mappings":";;AA6EA;AACA;AACA;AACA;AACA;IACAA;IACAC;EACA;EAHAC;AAIA;EACAC;EACAC;IACAC;IACAC;EACA;EACAC;IACAC;EACA;EAEAC;IAAA;MACAC;MACAC;MACAC;MACAC;QAAA;MAAA;MAEAC;MACAC;MACAC;QACAC;QACAC;MACA;MAEAC;QACAD;QACAE;MACA;MACAC;QACAH;QACAE;MACA;IACA;EAAA;EAEAE;IAAA;IACAC;MACA;IACA;EAEA;EAEAC,wDACAtB;IACAuB;EACA,KACAvB;IACAwB;EACA;IACAC;MAAA;MACA;IACA;EAAA,EACA;EAEAC;IACAtB;MACAuB;QACA;MACA;MACAC;IACA;IAEAzB;MACAwB;QACA;MACA;MACAC;IACA;IACA;IACA;IACA;EACA;;EACAC,yCACAC;IACAC;IACAC;IACAC;EACA;IAEAC;MACA;MACA;MACA;MACA;MACA;IACA;IAEAC;MAAA;MACA,2CACAC,qBACAC;QACA;MACA;IACA;IACAC;MAAA;MACA;MACA,+CACAF;QACA;MACA,GACAC;QACA;QACA;MACA;IACA;IAEAE;MACA;MACA;MACA;MACA;IACA;IAEAC;MACA;MACA;IACA;IAEAC;MAAA;MACA;MACAC;QACA;MACA;MAEArB;IACA;IAEAsB;MACA;IACA;IAEAC;MAAA;MACA,iDACA,+BACA;MAEA;MACA,4CACAR;QACA;QACA;QACA;MACA,GACAC;QACA;QACA;MACA;IACA;IAEAQ;MAAA;MACA;IACA;IAEAC;MACA;QAAAC;QAAAC;MAAA;IACA;EAAA;AAEA","names":["getterType","mutationType","mapFields","name","props","selectedItemProp","dialogProp","components","ShowBankRegionComponent","data","dialog","valid","isLoading","regionRules","selectedRegion","searchRegion","filterDataRegion","regionName","bankId","insertItem","regionId","insertItemDefualt","created","EventBus","computed","regions","bankRegions","formTitle","watch","handler","immediate","methods","mapActions","GetRegionStore","GetBankRegionStore","InsertBankRegionStore","clearData","getRegions","then","catch","getBankRegions","editSelected","reafershData","close","setTimeout","save","insertBankRegion","resetValidation","notify","text","color"],"sourceRoot":"src/views/Bank/Components","sources":["BankRegionComponent.vue"],"sourcesContent":["<template>\r\n  <v-dialog v-model=\"dialog\" max-width=\"600px\" persistent>\r\n    <v-card>\r\n      <v-card-title>\r\n        <span class=\"headline\">{{ formTitle }}</span>\r\n      </v-card-title>\r\n\r\n      <v-divider></v-divider>\r\n\r\n      <v-card-text>\r\n        <v-container>\r\n          <v-form ref=\"formBank\" v-model=\"valid\">\r\n            <v-row dense>\r\n              <v-col cols=\"12\" dense>\r\n                <v-select\r\n                  v-model=\"selectedRegion\"\r\n                  :items=\"regions\"\r\n                  label=\"اختر المنطقة\"\r\n                  placeholder=\"إختر منطقة للمصرف\"\r\n                  :rules=\"regionRules\"\r\n                  required\r\n                  item-text=\"regionName\"\r\n                  item-value=\"regionId\"\r\n                  single-line\r\n                  :search-input.sync=\"searchRegion\"\r\n                  @keyup=\"getRegions\"\r\n                  dense\r\n                  clearable\r\n                  chips\r\n                  return-object\r\n                  persistent-hint\r\n                ></v-select>\r\n              </v-col>\r\n              <v-col dense cols=\"12\" class=\"text-center justify-center\">\r\n                <v-btn\r\n                  @click=\"save\"\r\n                  :disabled=\"!valid\"\r\n                  color=\"#536DFE\"\r\n                  class=\"white--text px-15 \"\r\n                >\r\n                  <v-icon style=\"font-size: 19px; color:#fff\">save</v-icon>\r\n                  <span>إضافة</span>\r\n                </v-btn>\r\n              </v-col>\r\n            </v-row>\r\n          </v-form>\r\n        </v-container>\r\n\r\n        <v-container>\r\n          <template v-if=\"isLoading\">\r\n            <v-row>\r\n              <v-col cols=\"12\" class=\"justify-center text-center\">\r\n                <v-progress-circular color=\"blue\" indeterminate>\r\n                </v-progress-circular>\r\n                <span class=\"mx-5\">الرجاء الانتظار</span>\r\n              </v-col>\r\n            </v-row>\r\n          </template>\r\n          <template v-else>\r\n            <ShowBankRegionComponent></ShowBankRegionComponent>\r\n          </template>\r\n        </v-container>\r\n      </v-card-text>\r\n\r\n      <v-card-actions>\r\n        <div style=\"width: 100%;text-align: center;\">\r\n          <v-btn class=\"mx-2 px-10 white--text\"  @click=\"close\" color=\"#E91D62\">\r\n            <v-icon style=\"font-size: 19px;\" dark>clear</v-icon>\r\n            <span>إلغاء</span>\r\n          </v-btn>\r\n        </div>\r\n      </v-card-actions>\r\n    </v-card>\r\n  </v-dialog>\r\n</template>\r\n\r\n<script>\r\nimport { EventBus } from \"../../../eventBus.js\";\r\nimport ShowBankRegionComponent from \"../Components/ShowDataBankRegionComponent.vue\";\r\nimport { mapActions } from \"vuex\";\r\nimport { createHelpers } from \"vuex-map-fields\";\r\nconst { mapFields } = createHelpers({\r\n  getterType: \"getDataFields\",\r\n  mutationType: \"updateDataField\",\r\n});\r\nexport default {\r\n  name: \"insert-Or-Update\",\r\n  props: {\r\n    selectedItemProp: {},\r\n    dialogProp: {},\r\n  },\r\n  components: {\r\n    ShowBankRegionComponent,\r\n  },\r\n\r\n  data: () => ({\r\n    dialog: false,\r\n    valid: false,\r\n    isLoading: false,\r\n    regionRules: [(v) => !!v || \"الرجاء اختيار منطقة\"],\r\n\r\n    selectedRegion: null,\r\n    searchRegion: null,\r\n    filterDataRegion: {\r\n      regionName: null,\r\n      bankId: null,\r\n    },\r\n\r\n    insertItem: {\r\n      bankId: null,\r\n      regionId: null,\r\n    },\r\n    insertItemDefualt: {\r\n      bankId: null,\r\n      regionId: null,\r\n    },\r\n  }),\r\n\r\n  created() {\r\n    EventBus.$on(\"refreshRegions\", () => {\r\n      this.close();\r\n    });\r\n\r\n  },\r\n\r\n  computed: {\r\n    ...mapFields(\"regionStore\", {\r\n      regions: \"regionUnSelectBank\",\r\n    }),\r\n    ...mapFields(\"bankRegionStore\", {\r\n      bankRegions: \"bankRegions\",\r\n    }),\r\n    formTitle() {\r\n      return `إعدادات المناطق ${this.selectedItemProp?.name}`;\r\n    },\r\n  },\r\n\r\n  watch: {\r\n    dialogProp: {\r\n      handler(data) {\r\n        this.dialog = data;\r\n      },\r\n      immediate: true,\r\n    },\r\n\r\n    selectedItemProp: {\r\n      handler(data) {\r\n        if (data) this.editSelected(data);\r\n      },\r\n      immediate: true,\r\n    },\r\n    // searchRegion(data) {\r\n    //   this.filterDataRegion.regionName = data;\r\n    // },\r\n  },\r\n  methods: {\r\n    ...mapActions({\r\n      GetRegionStore: \"regionStore/GetRegionsUnSelected\",\r\n      GetBankRegionStore: \"bankRegionStore/GetBankRegions\",\r\n      InsertBankRegionStore: \"bankRegionStore/InsertBankRegion\",\r\n    }),\r\n\r\n    clearData() {\r\n      this.selectedRegion = null;\r\n      this.searchRegion = null;\r\n      this.filterDataRegion.regionName = null;\r\n      this.insertItem.regionId = null;\r\n      this.resetValidation();\r\n    },\r\n\r\n    getRegions() {\r\n      this.GetRegionStore(this.filterDataRegion)\r\n        .then(() => {})\r\n        .catch((error) => {\r\n          this.notify(`${error}`, \"#1d262d\");\r\n        });\r\n    },\r\n    getBankRegions() {\r\n      this.isLoading = true;\r\n      this.GetBankRegionStore(this.filterDataRegion)\r\n        .then(() => {\r\n          this.isLoading = false;\r\n        })\r\n        .catch((error) => {\r\n          this.notify(`${error}`, \"#1d262d\");\r\n          this.isLoading = false;\r\n        });\r\n    },\r\n\r\n    editSelected(item) {\r\n      this.filterDataRegion.bankId = item.bankId;\r\n      this.insertItem.bankId = item.bankId;\r\n      this.reafershData();\r\n      this.dialog = true;\r\n    },\r\n\r\n    reafershData() {\r\n      this.getBankRegions();\r\n      this.getRegions();\r\n    },\r\n\r\n    close() {\r\n      this.dialog = false;\r\n      setTimeout(() => {\r\n        this.clearData();\r\n      }, 300);\r\n\r\n      EventBus.$emit(\"closeDialogBankRegion\");\r\n    },\r\n\r\n    save() {\r\n      this.insertBankRegion();\r\n    },\r\n\r\n    insertBankRegion() {\r\n      this.insertItem.regionId = this.selectedRegion\r\n        ? this.selectedRegion.regionId\r\n        : null;\r\n\r\n      this.$store.dispatch(\"loading\", true);\r\n      this.InsertBankRegionStore(this.insertItem)\r\n        .then(() => {\r\n          this.clearData();\r\n          this.reafershData();\r\n          this.$store.dispatch(\"loading\", false);\r\n        })\r\n        .catch((error) => {\r\n          this.notify(`${error}`, \"#1d262d\");\r\n          this.$store.dispatch(\"loading\", false);\r\n        });\r\n    },\r\n\r\n    resetValidation() {\r\n      this.$refs.formBank?.reset();\r\n    },\r\n\r\n    notify(text, color) {\r\n      this.$store.commit(\"showMessage\", { text: text, color: color });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style></style>\r\n"]},"metadata":{},"sourceType":"module"}