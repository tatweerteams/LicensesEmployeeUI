{"ast":null,"code":"import _objectSpread from \"D:/repo Tatweer/tatweerteams/CheckbooksOrderingUI/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport { EventBus } from \"../../../eventBus.js\";\nimport { mapActions } from \"vuex\";\nimport { createHelpers } from \"vuex-map-fields\";\nvar _createHelpers = createHelpers({\n    getterType: \"getDataFields\",\n    mutationType: \"updateDataField\"\n  }),\n  mapFields = _createHelpers.mapFields;\n// import EmptyComponent from \"../../SharedComponents/EmptyComponent.vue\";\nexport default {\n  name: \"branch-setting\",\n  props: {\n    itemBranchWorkTimeProp: {}\n  },\n  components: {\n    // EmptyComponent,\n  },\n  data: function data() {\n    return {\n      dialog: false,\n      valid: false,\n      isLoading: true,\n      filterBranchWorkTime: {\n        branchId: null\n      }\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapFields(\"branchStore\", {\n    isEmpty: \"isEmpty\",\n    branchNo: \"editedItem.branchNo\",\n    name: \"editedItem.name\",\n    branchWorkTimes: \"branchWorkTimes\"\n  })), {}, {\n    titleDialog: function titleDialog() {\n      return \" \\u062A\\u0648\\u0642\\u064A\\u062A \\u0639\\u0645\\u0644 \\u0627\\u0644\\u0641\\u0631\\u0639 ( \".concat(this.name, \" ) \\u0627\\u0644\\u0631\\u0642\\u0645 ( \").concat(this.branchNo, \" )\");\n    }\n  }),\n  watch: {\n    itemBranchWorkTimeProp: {\n      handler: function handler(data) {\n        if (data) this.editSelected(data);\n      },\n      immediate: true\n    }\n  },\n  methods: _objectSpread(_objectSpread({}, mapActions({\n    //   ClearDataItemStore: \"branchStore/ClearDataItem\",\n    //   SetDataUpdateStore: \"branchStore/SetDataUpdate\",\n    //   GetBranchSetting: \"branchStore/GetBranchSetting\",\n    //   UpdateBranchSetting: \"branchStore/UpdateBranchSetting\",\n  })), {}, {\n    editSelected: function editSelected(item) {\n      this.filterBranchWorkTime.branchId = item.id;\n      this.dialog = true;\n      //   this.getBranchSetting();\n    },\n    // getBranchSetting() {\n    //   try {\n    //     this.isLoading = true;\n    //     this.GetBranchSetting(this.filterBranchWorkTime)\n    //       .then(() => {\n    //         this.isLoading = false;\n    //       })\n    //       .catch((error) => {\n    //         this.notify(`${error}`, \"#1d262d\");\n    //         this.isLoading = false;\n    //       });\n    //   } catch (error) {\n    //     this.isLoading = false;\n    //     this.notify(error, \"#1d262d\");\n    //   }\n    // },\n    close: function close() {\n      var _this = this;\n      this.dialog = false;\n      setTimeout(function () {\n        // this.ClearDataItemStore();\n        _this.isLoading = true;\n      }, 300);\n      this.resetValidation();\n      EventBus.$emit(\"closeDialogBranchWorkTime\");\n    },\n    save: function save() {\n      //   this.$store.dispatch(\"loading\", true);\n      //   this.UpdateBranchSetting()\n      //     .then((res) => {\n      //       this.notify(`${res}`, \"#1d262d\");\n      //       EventBus.$emit(\"refreshData\");\n      //       this.close();\n      //     })\n      //     .catch((error) => {\n      //       this.notify(`${error}`, \"#1d262d\");\n      //       this.$store.dispatch(\"loading\", false);\n      //     });\n    },\n    resetValidation: function resetValidation() {\n      var _this$$refs$formBranc;\n      (_this$$refs$formBranc = this.$refs.formBranchSetting) === null || _this$$refs$formBranc === void 0 ? void 0 : _this$$refs$formBranc.reset();\n    },\n    notify: function notify(text, color) {\n      this.$store.commit(\"showMessage\", {\n        text: text,\n        color: color\n      });\n    }\n  })\n};","map":{"version":3,"mappings":";;;AA+DA;AACA;AACA;AACA;IACAA;IACAC;EACA;EAHAC;AAIA;AACA;EACAC;EACAC;IACAC;EACA;EACAC;IACA;EACA;EAEAC;IAAA;MACAC;MACAC;MAEAC;MAEAC;QACAC;MACA;IACA;EAAA;EAEAC,0CACAX;IACAY;IACAC;IACAZ;IACAa;EACA;IAEAC;MACA;IACA;EAAA,EACA;EAEAC;IACAb;MACAc;QACA;MACA;MACAC;IACA;EACA;EACAC,yCACAC;IACA;IACA;IACA;IACA;EACA;IAEAC;MACA;MACA;MACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEAC;MAAA;MACA;MACAC;QACA;QACA;MACA;MACA;MACAC;IACA;IAEAC;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACA;IAEAC;MAAA;MACA;IACA;IAEAC;MACA;QAAAC;QAAAC;MAAA;IACA;EAAA;AAEA","names":["getterType","mutationType","mapFields","name","props","itemBranchWorkTimeProp","components","data","dialog","valid","isLoading","filterBranchWorkTime","branchId","computed","isEmpty","branchNo","branchWorkTimes","titleDialog","watch","handler","immediate","methods","mapActions","editSelected","close","setTimeout","EventBus","save","resetValidation","notify","text","color"],"sourceRoot":"src/views/Branch/Components","sources":["BranchWorkTimeComponent.vue"],"sourcesContent":["<template>\r\n  <v-dialog v-model=\"dialog\" max-width=\"1000px\" persistent>\r\n    <v-card>\r\n      <v-card-title>\r\n        <span class=\"headline\">{{ titleDialog }}</span>\r\n      </v-card-title>\r\n\r\n      <v-divider></v-divider>\r\n\r\n      <v-card-text>\r\n        <v-container>\r\n          <v-form ref=\"formBranchSetting\" v-model=\"valid\">\r\n            <!-- <template v-if=\"isLoading\">\r\n              <v-row>\r\n                <v-col cols=\"12\" class=\"text-center\">\r\n                  <v-progress-circular\r\n                    indeterminate\r\n                    size=\"25\"\r\n                    width=\"2\"\r\n                    color=\"#536DFE\"\r\n                  >\r\n                  </v-progress-circular>\r\n                  جاري جلب الإعدادات\r\n                </v-col>\r\n              </v-row>\r\n            </template> -->\r\n            <!-- <template v-else-if=\"isEmpty\">\r\n              <EmptyComponent\r\n                message=\"لايوجد إعدادات للفرع\"\r\n                iconProp=\"mdi-cog-off-outline\"\r\n              ></EmptyComponent>\r\n            </template> -->\r\n            <!-- v-else -->\r\n            <template >\r\n                <h1>work Time</h1>\r\n              <!-- <BranchSettingComponent></BranchSettingComponent> -->\r\n            </template>\r\n          </v-form>\r\n        </v-container>\r\n      </v-card-text>\r\n\r\n      <v-card-actions>\r\n        <div style=\"width: 100%;text-align: center;\">\r\n          <v-btn\r\n            @click=\"save\"\r\n            class=\"mx-2 white--text\"\r\n            :disabled=\"!valid || isLoading || isEmpty\"\r\n            color=\"#536DFE\"\r\n          >\r\n            <v-icon>save</v-icon>\r\n            <span>حفظ الإعدادات</span>\r\n          </v-btn>\r\n          <v-btn class=\"mx-2 white--text\" @click=\"close\" color=\"#E91D62\">\r\n            <v-icon dark>clear</v-icon>\r\n            <span>إلغاء</span>\r\n          </v-btn>\r\n        </div>\r\n      </v-card-actions>\r\n    </v-card>\r\n  </v-dialog>\r\n</template>\r\n\r\n<script>\r\nimport { EventBus } from \"../../../eventBus.js\";\r\nimport { mapActions } from \"vuex\";\r\nimport { createHelpers } from \"vuex-map-fields\";\r\nconst { mapFields } = createHelpers({\r\n  getterType: \"getDataFields\",\r\n  mutationType: \"updateDataField\",\r\n});\r\n// import EmptyComponent from \"../../SharedComponents/EmptyComponent.vue\";\r\nexport default {\r\n  name: \"branch-setting\",\r\n  props: {\r\n    itemBranchWorkTimeProp: {},\r\n  },\r\n  components: {\r\n    // EmptyComponent,\r\n  },\r\n\r\n  data: () => ({\r\n    dialog: false,\r\n    valid: false,\r\n\r\n    isLoading: true,\r\n\r\n    filterBranchWorkTime: {\r\n        branchId: null,\r\n    },\r\n  }),\r\n\r\n  computed: {\r\n    ...mapFields(\"branchStore\", {\r\n      isEmpty: \"isEmpty\",\r\n      branchNo: \"editedItem.branchNo\",\r\n      name: \"editedItem.name\",\r\n      branchWorkTimes:\"branchWorkTimes\"\r\n    }),\r\n\r\n    titleDialog() {\r\n      return ` توقيت عمل الفرع ( ${this.name} ) الرقم ( ${this.branchNo} )`;\r\n    },\r\n  },\r\n\r\n  watch: {\r\n    itemBranchWorkTimeProp: {\r\n      handler(data) {\r\n        if (data) this.editSelected(data);\r\n      },\r\n      immediate: true,\r\n    },\r\n  },\r\n  methods: {\r\n    ...mapActions({\r\n    //   ClearDataItemStore: \"branchStore/ClearDataItem\",\r\n      //   SetDataUpdateStore: \"branchStore/SetDataUpdate\",\r\n    //   GetBranchSetting: \"branchStore/GetBranchSetting\",\r\n    //   UpdateBranchSetting: \"branchStore/UpdateBranchSetting\",\r\n    }),\r\n\r\n    editSelected(item) {\r\n      this.filterBranchWorkTime.branchId = item.id;\r\n      this.dialog = true;\r\n    //   this.getBranchSetting();\r\n    },\r\n\r\n    // getBranchSetting() {\r\n    //   try {\r\n    //     this.isLoading = true;\r\n    //     this.GetBranchSetting(this.filterBranchWorkTime)\r\n    //       .then(() => {\r\n    //         this.isLoading = false;\r\n    //       })\r\n    //       .catch((error) => {\r\n    //         this.notify(`${error}`, \"#1d262d\");\r\n    //         this.isLoading = false;\r\n    //       });\r\n    //   } catch (error) {\r\n    //     this.isLoading = false;\r\n    //     this.notify(error, \"#1d262d\");\r\n    //   }\r\n    // },\r\n\r\n    close() {\r\n      this.dialog = false;\r\n      setTimeout(() => {\r\n        // this.ClearDataItemStore();\r\n        this.isLoading = true;\r\n      }, 300);\r\n      this.resetValidation();\r\n      EventBus.$emit(\"closeDialogBranchWorkTime\");\r\n    },\r\n\r\n    save() {\r\n    //   this.$store.dispatch(\"loading\", true);\r\n    //   this.UpdateBranchSetting()\r\n    //     .then((res) => {\r\n    //       this.notify(`${res}`, \"#1d262d\");\r\n    //       EventBus.$emit(\"refreshData\");\r\n    //       this.close();\r\n    //     })\r\n    //     .catch((error) => {\r\n    //       this.notify(`${error}`, \"#1d262d\");\r\n    //       this.$store.dispatch(\"loading\", false);\r\n    //     });\r\n    },\r\n\r\n    resetValidation() {\r\n      this.$refs.formBranchSetting?.reset();\r\n    },\r\n\r\n    notify(text, color) {\r\n      this.$store.commit(\"showMessage\", { text: text, color: color });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style></style>\r\n"]},"metadata":{},"sourceType":"module"}