{"ast":null,"code":"import \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport * as enums from \"./enum.js\";\nexport function OrderRequestTypeToTextPublic(orderRequestType) {\n  var message = \"\";\n  switch (orderRequestType) {\n    case enums.OrderRequestType.Individual:\n      message = \"أفــراد\";\n      break;\n    case enums.OrderRequestType.Companies:\n      message = \"شركــات\";\n      break;\n    case enums.OrderRequestType.Certified:\n      message = \"مصدقة\";\n      break;\n    default:\n      break;\n  }\n  return message;\n}\nexport function OrderItemStateToTextPublic(orderItemState) {\n  var _enums$OrderItemState;\n  return (_enums$OrderItemState = enums.OrderItemStateList.find(function (pred) {\n    return pred.id == orderItemState;\n  })) === null || _enums$OrderItemState === void 0 ? void 0 : _enums$OrderItemState.name;\n}\nexport function OrderRequestStateToTextPublic(orderRequestState) {\n  var _enums$OrderRequestSt;\n  return (_enums$OrderRequestSt = enums.OrderRequestStateList.find(function (pred) {\n    return pred.id == orderRequestState;\n  })) === null || _enums$OrderRequestSt === void 0 ? void 0 : _enums$OrderRequestSt.name;\n}\nexport function ChangeColorOrderRequestTypePublic(orderRequestType) {\n  var color = \"\";\n  switch (orderRequestType) {\n    case enums.OrderRequestType.Individual:\n      color = \"indigo\";\n      break;\n    case enums.OrderRequestType.Companies:\n      color = \"green\";\n      break;\n    case enums.OrderRequestType.Certified:\n      color = \"orange\";\n      break;\n    default:\n      break;\n  }\n  return color;\n}\nexport function ValidateAccountCountWithMinBranchCountPublic(item) {\n  return (item === null || item === void 0 ? void 0 : item.accountCount) < (item === null || item === void 0 ? void 0 : item.minOrderItemBranch);\n}\nexport function ValidateOrderRequestStatePublic(item) {\n  return (item === null || item === void 0 ? void 0 : item.orderRequestState) != enums.OrderRequestState.Process;\n}\nexport function OrderRequestStateColorPublic(orderRequestState) {\n  var color = \"\";\n  switch (orderRequestState) {\n    case enums.OrderRequestState.Process:\n      color = \"orange\";\n      break;\n    case enums.OrderRequestState.Pinding:\n      color = \"#E91D62\";\n      break;\n    case enums.OrderRequestState.GeneretedCode:\n      color = \"indigo\";\n      break;\n    case enums.OrderRequestState.SendRequestBranch:\n      color = \"green\";\n      break;\n    case enums.OrderRequestState.RejectRequest:\n      color = \"error\";\n      break;\n    case enums.OrderRequestState.PrintOutCenter:\n      color = \"indigo\";\n      break;\n    default:\n      break;\n  }\n  return color;\n}\nexport function UserTypeStateToTextPublic(userType) {\n  var _enums$UserTypeStateL;\n  return (_enums$UserTypeStateL = enums.UserTypeStateList.find(function (pred) {\n    return pred.id == userType;\n  })) === null || _enums$UserTypeStateL === void 0 ? void 0 : _enums$UserTypeStateL.name;\n}","map":{"version":3,"names":["enums","OrderRequestTypeToTextPublic","orderRequestType","message","OrderRequestType","Individual","Companies","Certified","OrderItemStateToTextPublic","orderItemState","OrderItemStateList","find","pred","id","name","OrderRequestStateToTextPublic","orderRequestState","OrderRequestStateList","ChangeColorOrderRequestTypePublic","color","ValidateAccountCountWithMinBranchCountPublic","item","accountCount","minOrderItemBranch","ValidateOrderRequestStatePublic","OrderRequestState","Process","OrderRequestStateColorPublic","Pinding","GeneretedCode","SendRequestBranch","RejectRequest","PrintOutCenter","UserTypeStateToTextPublic","userType","UserTypeStateList"],"sources":["D:/repo Tatweer/tatweerteams/CheckbooksOrderingUI/src/models/mothedPublic.js"],"sourcesContent":["import * as enums from \"./enum.js\";\r\n\r\nexport function OrderRequestTypeToTextPublic(orderRequestType) {\r\n  let message = \"\";\r\n  switch (orderRequestType) {\r\n    case enums.OrderRequestType.Individual:\r\n      message = \"أفــراد\";\r\n      break;\r\n    case enums.OrderRequestType.Companies:\r\n      message = \"شركــات\";\r\n      break;\r\n    case enums.OrderRequestType.Certified:\r\n      message = \"مصدقة\";\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n\r\n  return message;\r\n}\r\n\r\nexport function OrderItemStateToTextPublic(orderItemState) {\r\n  return enums.OrderItemStateList.find(pred=> pred.id==orderItemState)?.name;\r\n}\r\n\r\nexport function OrderRequestStateToTextPublic(orderRequestState) {\r\n  return enums.OrderRequestStateList.find(pred=> pred.id==orderRequestState)?.name;\r\n}\r\n\r\nexport function ChangeColorOrderRequestTypePublic(orderRequestType) {\r\n  let color = \"\";\r\n  switch (orderRequestType) {\r\n    case enums.OrderRequestType.Individual:\r\n      color = \"indigo\";\r\n      break;\r\n    case enums.OrderRequestType.Companies:\r\n      color = \"green\";\r\n      break;\r\n    case enums.OrderRequestType.Certified:\r\n      color = \"orange\";\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n  return color;\r\n}\r\n\r\nexport function ValidateAccountCountWithMinBranchCountPublic(item) {\r\n  return item?.accountCount < item?.minOrderItemBranch;\r\n}\r\n\r\nexport function ValidateOrderRequestStatePublic(item) {\r\n  return item?.orderRequestState != enums.OrderRequestState.Process;\r\n}\r\n\r\nexport function OrderRequestStateColorPublic(orderRequestState) {\r\n  let color = \"\";\r\n  switch (orderRequestState) {\r\n    case enums.OrderRequestState.Process:\r\n      color = \"orange\";\r\n      break;\r\n    case enums.OrderRequestState.Pinding:\r\n      color = \"#E91D62\";\r\n      break;\r\n    case enums.OrderRequestState.GeneretedCode:\r\n      color = \"indigo\";\r\n      break;\r\n    case enums.OrderRequestState.SendRequestBranch:\r\n      color = \"green\";\r\n      break;\r\n    case enums.OrderRequestState.RejectRequest:\r\n      color = \"error\";\r\n      break;\r\n    case enums.OrderRequestState.PrintOutCenter:\r\n      color = \"indigo\";\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n\r\n  return color;\r\n}\r\n\r\nexport function UserTypeStateToTextPublic(userType) {\r\n  return enums.UserTypeStateList.find(pred=> pred.id==userType)?.name;\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}