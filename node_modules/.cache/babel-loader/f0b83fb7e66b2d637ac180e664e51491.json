{"ast":null,"code":"import _objectSpread from \"D:/repo Tatweer/tatweerteams/CheckbooksOrderingUI/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport { mapActions } from \"vuex\";\nimport { createHelpers } from \"vuex-map-fields\";\nvar _createHelpers = createHelpers({\n    getterType: \"getDataFields\",\n    mutationType: \"updateDataField\"\n  }),\n  mapFields = _createHelpers.mapFields;\nimport { aesDencrypt } from \"../../../models/secretData.js\";\nimport { EventBus } from \"../../../eventBus.js\";\nimport { OrderItemState, OrderRequestState } from \"../../../models/enum.js\";\nimport { OrderRequestTypeToTextPublic, OrderItemStateToTextPublic } from \"../../../models/mothedPublic.js\";\nimport SerachComponent from \"../components/searchComponent.vue\";\nimport InsertOrderItemComponent from \"../components/insertOrderItemComponent.vue\";\nimport DeleteOrderItemComponent from \"../components/deleteOrderItemComponent.vue\";\nimport updateOrderItemComponent from \"../components/updateOrderItemComponent.vue\";\nexport default {\n  components: {\n    SerachComponent: SerachComponent,\n    InsertOrderItemComponent: InsertOrderItemComponent,\n    DeleteOrderItemComponent: DeleteOrderItemComponent,\n    updateOrderItemComponent: updateOrderItemComponent\n  },\n  created: function created() {\n    var _this = this;\n    this.filterData.orderRequestId = aesDencrypt(this.$route.params.id);\n    this.initialize();\n    EventBus.$on(\"closeDialogInsertOrderRequestItem\", function (isInsertData) {\n      if (isInsertData) _this.initialize();\n    });\n    EventBus.$on(\"closeDeleteDialogOrderItem\", function () {\n      _this.itemDelete = null;\n    });\n    EventBus.$on(\"closeDialogUpdateOrderItem\", function () {\n      _this.updateOrderItem = null;\n    });\n    EventBus.$on(\"refreshDataOrderItem\", function () {\n      _this.initialize();\n    });\n  },\n  data: function data() {\n    return {\n      headers: [{\n        text: \"رقم الحساب\",\n        value: \"accountNo\",\n        sortable: false,\n        align: \"center\"\n      }, {\n        text: \"إسم صاحب الحساب\",\n        value: \"accountName\",\n        sortable: false,\n        align: \"center\"\n      }, {\n        text: \"رقم التسلسل\",\n        value: \"serialFrom\",\n        sortable: false,\n        align: \"center\"\n      }, {\n        text: \"حالة الطـلب\",\n        value: \"state\",\n        sortable: false,\n        align: \"center\"\n      }, {\n        text: \"كمية الدفاتر\",\n        value: \"countChekBook\",\n        sortable: false,\n        align: \"center\"\n      }, {\n        text: \"الإجراءات\",\n        value: \"action\",\n        sortable: false,\n        align: \"center\"\n      }],\n      page: 1,\n      pageSize: 1,\n      filterData: {\n        orderRequestId: null,\n        accounNoOrName: null,\n        serialFrom: null,\n        quentity: null,\n        orderItemState: null,\n        pageNo: 1,\n        pageSize: 30\n      },\n      itemDelete: null,\n      updateOrderItem: null\n    };\n  },\n  computed: _objectSpread(_objectSpread({}, mapFields(\"orderItemStore\", {\n    grids: \"orderItems\",\n    orderRequest: \"orderRequest\",\n    pageCount: \"pageCount\"\n  })), {}, {\n    titleOrder: function titleOrder() {\n      var _this$orderRequest, _this$orderRequest$br, _this$orderRequest2;\n      return \"\\u0628\\u064A\\u0627\\u0646\\u0627\\u062A \\u0627\\u0644\\u0637\\u0644\\u0628\\u064A\\u0629  \".concat(OrderRequestTypeToTextPublic((_this$orderRequest = this.orderRequest) === null || _this$orderRequest === void 0 ? void 0 : _this$orderRequest.orderRequestType), \" \").concat((_this$orderRequest$br = (_this$orderRequest2 = this.orderRequest) === null || _this$orderRequest2 === void 0 ? void 0 : _this$orderRequest2.branchName) !== null && _this$orderRequest$br !== void 0 ? _this$orderRequest$br : \"\");\n    },\n    checkCanInsertAccount: function checkCanInsertAccount() {\n      var _this$orderRequest3;\n      return ((_this$orderRequest3 = this.orderRequest) === null || _this$orderRequest3 === void 0 ? void 0 : _this$orderRequest3.orderRequestState) == OrderRequestState.Process;\n    }\n  }),\n  methods: _objectSpread(_objectSpread({\n    backPage: function backPage() {\n      this.$router.back();\n    }\n  }, mapActions({\n    GetOrderItems: \"orderItemStore/GetOrderItems\"\n  })), {}, {\n    initialize: function initialize() {\n      var _this2 = this;\n      try {\n        this.$store.dispatch(\"loading\", true);\n        this.GetOrderItems(this.filterData).then(function () {\n          _this2.$store.dispatch(\"loading\", false);\n          _this2.pageSize = _this2.pageCount;\n        }).catch(function (error) {\n          _this2.$store.dispatch(\"loading\", false);\n          _this2.notify(\"\".concat(error), \"#1d262d\");\n        });\n      } catch (error) {\n        this.$store.dispatch(\"loading\", false);\n        this.notify(error, \"#1d262d\");\n      }\n    },\n    searchData: function searchData(filter) {\n      this.page = 1;\n      this.filterData.accounNoOrName = filter.accounNoOrName;\n      this.filterData.serialFrom = filter.serialFrom;\n      this.filterData.quentity = filter.quentity;\n      this.filterData.requestState = filter.requestState;\n      this.filterData.pageNo = filter.pageNo;\n      this.filterData.pageSize = filter.pageSize;\n      this.initialize();\n    },\n    onPaginationClick: function onPaginationClick(page) {\n      this.page = page;\n      this.initialize();\n    },\n    orderItemStateToText: function orderItemStateToText(item) {\n      switch (item) {\n        case OrderItemState.Success:\n          return \"تم طلب\";\n        case OrderItemState.IsSuspended:\n          return \"حساب مجمد\";\n        default:\n          break;\n      }\n    },\n    deleteOrderItem: function deleteOrderItem(item) {\n      this.itemDelete = item;\n    },\n    editOrderItem: function editOrderItem(item) {\n      this.updateOrderItem = item;\n    },\n    notify: function notify(text, color) {\n      this.$store.commit(\"showMessage\", {\n        text: text,\n        color: color\n      });\n    }\n  }),\n  watch: {}\n};","map":{"version":3,"mappings":";;AA8HA;AACA;AACA;IACAA;IACAC;EACA;EAHAC;AAKA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;EACAC;IACAC;IACAC;IACAC;IACAC;EACA;EAEAC;IAAA;IACA;IACA;IAEAC;MACA;IACA;IAEAA;MACA;IACA;IAEAA;MACA;IACA;IAEAA;MACA;IACA;EACA;EAEAC;IAAA;MACAC,UACA;QACAC;QACAC;QACAC;QACAC;MACA,GAEA;QACAH;QACAC;QACAC;QACAC;MACA,GAEA;QACAH;QACAC;QACAC;QACAC;MACA,GAEA;QACAH;QACAC;QACAC;QACAC;MACA,GACA;QACAH;QACAC;QACAC;QACAC;MACA,GACA;QACAH;QACAC;QACAC;QACAC;MACA,EACA;MAEAC;MACAC;MAEAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAP;MACA;MAEAQ;MACAC;IACA;EAAA;EAEAC,0CACAzB;IACA0B;IACAC;IACAC;EACA;IAEAC;MAAA;MACA;IACA;IAEAC;MAAA;MACA;IACA;EAAA,EACA;EAEAC;IACAC;MACA;IACA;EAAA,GAEAC;IACAC;EACA;IAEAC;MAAA;MACA;QACA;QACA,oCACAC;UACA;UACA;QACA,GACAC;UACA;UACA;QACA;MACA;QACA;QACA;MACA;IACA;IAEAC;MACA;MAEA;MACA;MACA;MACA;MACA;MACA;MAEA;IACA;IAEAC;MACA;MACA;IACA;IAEAC;MACA;QACA;UACA;QACA;UACA;QACA;UACA;MAAA;IAEA;IAIAC;MACA;IACA;IAEAC;MACA;IACA;IAEAC;MACA;QAAAjC;QAAAkC;MAAA;IACA;EAAA,EACA;EAEAC;AACA","names":["getterType","mutationType","mapFields","components","SerachComponent","InsertOrderItemComponent","DeleteOrderItemComponent","updateOrderItemComponent","created","EventBus","data","headers","text","value","sortable","align","page","pageSize","filterData","orderRequestId","accounNoOrName","serialFrom","quentity","orderItemState","pageNo","itemDelete","updateOrderItem","computed","grids","orderRequest","pageCount","titleOrder","checkCanInsertAccount","methods","backPage","mapActions","GetOrderItems","initialize","then","catch","searchData","onPaginationClick","orderItemStateToText","deleteOrderItem","editOrderItem","notify","color","watch"],"sourceRoot":"src/views/OrderRequestItem/pages","sources":["index.vue"],"sourcesContent":["<template>\r\n  <!-- <div>\r\n    <h1>{{ test }}</h1>\r\n    <v-btn\r\n      @click=\"backPage\"\r\n      color=\"#03213d\"\r\n      class=\"white--text mb-10\"\r\n      elevation=\"5\"\r\n    >\r\n      Back\r\n    </v-btn>\r\n  </div> -->\r\n\r\n  <div>\r\n    <template v-if=\"itemDelete\">\r\n      <DeleteOrderItemComponent\r\n        :deleteItemProp=\"itemDelete\"\r\n      ></DeleteOrderItemComponent>\r\n    </template>\r\n    <template v-if=\"updateOrderItem\">\r\n      <updateOrderItemComponent\r\n        :updateItemProp=\"updateOrderItem\"\r\n      ></updateOrderItemComponent>\r\n    </template>\r\n    <v-card\r\n      min-height=\"40rem\"\r\n      color=\"transparent\"\r\n      elevation=\"0\"\r\n      height=\"auto\"\r\n      style=\"padding:30px; \"\r\n    >\r\n      <SerachComponent @search-data=\"searchData\"></SerachComponent>\r\n      <v-data-table\r\n        :headers=\"headers\"\r\n        :disable-pagination=\"true\"\r\n        :items=\"grids\"\r\n        hide-default-footer\r\n        class=\"elevation-5 pa-5\"\r\n      >\r\n        <template v-slot:top>\r\n          <v-toolbar flat color=\"white\">\r\n            <v-toolbar-title\r\n              ><v-icon>mdi-newspaper-plus</v-icon> {{ titleOrder }}\r\n            </v-toolbar-title>\r\n            <v-divider class=\"mx-4\" inset vertical></v-divider>\r\n            <v-spacer />\r\n\r\n            <InsertOrderItemComponent\r\n              v-if=\"checkCanInsertAccount\"\r\n              :orderRequestIdProp=\"filterData.orderRequestId\"\r\n            ></InsertOrderItemComponent>\r\n          </v-toolbar>\r\n        </template>\r\n\r\n        <template v-slot:[`item.serialFrom`]=\"{ item }\">\r\n          <v-chip\r\n            v-if=\"!item.serialFrom\"\r\n            small\r\n            color=\"#E91D62\"\r\n            text-color=\"white\"\r\n          >\r\n            لم يتم الإصدار\r\n          </v-chip>\r\n          <p v-else>\r\n            {{ item.serialFrom }}\r\n          </p>\r\n        </template>\r\n\r\n        <template v-slot:[`item.state`]=\"{ item }\">\r\n          <v-chip small color=\"#E91D62\" text-color=\"white\">\r\n            {{ orderItemStateToText(item.state) }}\r\n          </v-chip>\r\n        </template>\r\n\r\n        <template v-slot:[`item.countChekBook`]=\"{ item }\">\r\n          <v-chip small color=\"#081D38\" text-color=\"white\">\r\n            {{ item.countChekBook }}\r\n          </v-chip>\r\n        </template>\r\n\r\n        <template v-slot:[`item.action`]=\"{ item }\">\r\n          <v-btn\r\n            x-small\r\n            :disabled=\"!checkCanInsertAccount\"\r\n            class=\"mx-2\"\r\n            fab\r\n            color=\"#536DFE\"\r\n            @click=\"editOrderItem(item)\"\r\n          >\r\n            <v-icon color=\"#fff\">mdi-text-box-edit</v-icon>\r\n          </v-btn>\r\n\r\n          <v-btn\r\n            :disabled=\"!checkCanInsertAccount\"\r\n            x-small\r\n            fab\r\n            color=\"#E91D62\"\r\n            @click=\"deleteOrderItem(item)\"\r\n          >\r\n            <v-icon color=\"#fff\">mdi-delete</v-icon>\r\n          </v-btn>\r\n        </template>\r\n\r\n        <template v-slot:no-data>\r\n          <v-btn color=\"#081D38\" class=\"white--text\" @click=\"initialize\"\r\n            >عرض البيانات</v-btn\r\n          >\r\n        </template>\r\n      </v-data-table>\r\n\r\n      <template class=\"mt-5\">\r\n        <div class=\"text-center mt-3\">\r\n          <v-pagination\r\n            v-model=\"page\"\r\n            :length=\"pageSize\"\r\n            circle\r\n            color=\"#081D38\"\r\n            @input=\"onPaginationClick\"\r\n          ></v-pagination>\r\n        </div>\r\n      </template>\r\n    </v-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapActions } from \"vuex\";\r\nimport { createHelpers } from \"vuex-map-fields\";\r\nconst { mapFields } = createHelpers({\r\n  getterType: \"getDataFields\",\r\n  mutationType: \"updateDataField\",\r\n});\r\n\r\nimport { aesDencrypt } from \"../../../models/secretData.js\";\r\nimport { EventBus } from \"../../../eventBus.js\";\r\n\r\nimport { OrderItemState, OrderRequestState } from \"../../../models/enum.js\";\r\nimport {OrderRequestTypeToTextPublic,OrderItemStateToTextPublic} from \"../../../models/mothedPublic.js\";\r\n\r\nimport SerachComponent from \"../components/searchComponent.vue\";\r\nimport InsertOrderItemComponent from \"../components/insertOrderItemComponent.vue\";\r\nimport DeleteOrderItemComponent from \"../components/deleteOrderItemComponent.vue\";\r\nimport updateOrderItemComponent from \"../components/updateOrderItemComponent.vue\";\r\nexport default {\r\n  components: {\r\n    SerachComponent,\r\n    InsertOrderItemComponent,\r\n    DeleteOrderItemComponent,\r\n    updateOrderItemComponent,\r\n  },\r\n\r\n  created() {\r\n    this.filterData.orderRequestId = aesDencrypt(this.$route.params.id);\r\n    this.initialize();\r\n\r\n    EventBus.$on(\"closeDialogInsertOrderRequestItem\", (isInsertData) => {\r\n      if (isInsertData) this.initialize();\r\n    });\r\n\r\n    EventBus.$on(\"closeDeleteDialogOrderItem\", () => {\r\n      this.itemDelete = null;\r\n    });\r\n\r\n    EventBus.$on(\"closeDialogUpdateOrderItem\", () => {\r\n      this.updateOrderItem = null;\r\n    });\r\n\r\n    EventBus.$on(\"refreshDataOrderItem\", () => {\r\n      this.initialize();\r\n    });\r\n  },\r\n\r\n  data: () => ({\r\n    headers: [\r\n      {\r\n        text: \"رقم الحساب\",\r\n        value: \"accountNo\",\r\n        sortable: false,\r\n        align: \"center\",\r\n      },\r\n\r\n      {\r\n        text: \"إسم صاحب الحساب\",\r\n        value: \"accountName\",\r\n        sortable: false,\r\n        align: \"center\",\r\n      },\r\n\r\n      {\r\n        text: \"رقم التسلسل\",\r\n        value: \"serialFrom\",\r\n        sortable: false,\r\n        align: \"center\",\r\n      },\r\n\r\n      {\r\n        text: \"حالة الطـلب\",\r\n        value: \"state\",\r\n        sortable: false,\r\n        align: \"center\",\r\n      },\r\n      {\r\n        text: \"كمية الدفاتر\",\r\n        value: \"countChekBook\",\r\n        sortable: false,\r\n        align: \"center\",\r\n      },\r\n      {\r\n        text: \"الإجراءات\",\r\n        value: \"action\",\r\n        sortable: false,\r\n        align: \"center\",\r\n      },\r\n    ],\r\n\r\n    page: 1,\r\n    pageSize: 1,\r\n\r\n    filterData: {\r\n      orderRequestId: null,\r\n      accounNoOrName: null,\r\n      serialFrom: null,\r\n      quentity: null,\r\n      orderItemState: null,\r\n      pageNo: 1,\r\n      pageSize: 30,\r\n    },\r\n\r\n    itemDelete: null,\r\n    updateOrderItem: null,\r\n  }),\r\n\r\n  computed: {\r\n    ...mapFields(\"orderItemStore\", {\r\n      grids: \"orderItems\",\r\n      orderRequest: \"orderRequest\",\r\n      pageCount: \"pageCount\",\r\n    }),\r\n\r\n    titleOrder() {\r\n      return `بيانات الطلبية  ${OrderRequestTypeToTextPublic(this.orderRequest?.orderRequestType)} ${this.orderRequest?.branchName ?? \"\"}`;\r\n    },\r\n\r\n    checkCanInsertAccount() {\r\n      return this.orderRequest?.orderRequestState == OrderRequestState.Process;\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    backPage() {\r\n      this.$router.back();\r\n    },\r\n\r\n    ...mapActions({\r\n      GetOrderItems: \"orderItemStore/GetOrderItems\",\r\n    }),\r\n\r\n    initialize() {\r\n      try {\r\n        this.$store.dispatch(\"loading\", true);\r\n        this.GetOrderItems(this.filterData)\r\n          .then(() => {\r\n            this.$store.dispatch(\"loading\", false);\r\n            this.pageSize = this.pageCount;\r\n          })\r\n          .catch((error) => {\r\n            this.$store.dispatch(\"loading\", false);\r\n            this.notify(`${error}`, \"#1d262d\");\r\n          });\r\n      } catch (error) {\r\n        this.$store.dispatch(\"loading\", false);\r\n        this.notify(error, \"#1d262d\");\r\n      }\r\n    },\r\n\r\n    searchData(filter) {\r\n      this.page = 1;\r\n\r\n      this.filterData.accounNoOrName = filter.accounNoOrName;\r\n      this.filterData.serialFrom = filter.serialFrom;\r\n      this.filterData.quentity = filter.quentity;\r\n      this.filterData.requestState = filter.requestState;\r\n      this.filterData.pageNo = filter.pageNo;\r\n      this.filterData.pageSize = filter.pageSize;\r\n\r\n      this.initialize();\r\n    },\r\n\r\n    onPaginationClick(page) {\r\n      this.page = page;\r\n      this.initialize();\r\n    },\r\n\r\n    orderItemStateToText(item) {\r\n      switch (item) {\r\n        case OrderItemState.Success:\r\n          return \"تم طلب\";\r\n        case OrderItemState.IsSuspended:\r\n          return \"حساب مجمد\";\r\n        default:\r\n          break;\r\n      }\r\n    },\r\n\r\n    \r\n\r\n    deleteOrderItem(item) {\r\n      this.itemDelete = item;\r\n    },\r\n\r\n    editOrderItem(item) {\r\n      this.updateOrderItem = item;\r\n    },\r\n\r\n    notify(text, color) {\r\n      this.$store.commit(\"showMessage\", { text: text, color: color });\r\n    },\r\n  },\r\n\r\n  watch: {},\r\n};\r\n</script>\r\n\r\n<style></style>\r\n"]},"metadata":{},"sourceType":"module"}