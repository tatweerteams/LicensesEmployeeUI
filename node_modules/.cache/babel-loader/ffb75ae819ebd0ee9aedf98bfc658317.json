{"ast":null,"code":"import router from \"./index\";\nimport store from \"../store\";\nconst whiteList = [\"/login\"];\nrouter.beforeEach(async (to, from, next) => {\n  await store.dispatch(\"loading\", true);\n  let hasToken = await store.dispatch(\"auth/tryAutoLogin\").catch(() => {\n    return false;\n  });\n  if (hasToken) {\n    if (to.path === \"/login\") {\n      next({\n        path: \"/\"\n      });\n      await store.dispatch(\"loading\", false);\n    } else {\n      try {\n        next();\n      } catch (error) {\n        console.log(error);\n        store.dispatch(\"auth/logout\");\n        next(`/login?redirect=${to.path}`);\n        await store.dispatch(\"loading\", false);\n      }\n    }\n  } else {\n    if (whiteList.indexOf(to.path) !== -1) {\n      await store.dispatch(\"loading\", false);\n      next();\n    } else {\n      next(`/login?redirect=${to.path}`);\n      await store.dispatch(\"loading\", false);\n    }\n  }\n});\nrouter.afterEach(async () => {\n  await store.dispatch(\"loading\", false);\n});","map":{"version":3,"names":["router","store","whiteList","beforeEach","to","from","next","dispatch","hasToken","catch","path","error","console","log","indexOf","afterEach"],"sources":["D:/repo Tatweer/tatweerteams/CheckbooksOrderingUI/src/router/routerfilter.js"],"sourcesContent":["import router from \"./index\";\r\nimport store from \"../store\";\r\n\r\nconst whiteList = [\"/login\"];\r\n\r\nrouter.beforeEach(async (to, from, next) => {\r\n  await store.dispatch(\"loading\", true);\r\n\r\n  let hasToken = await store.dispatch(\"auth/tryAutoLogin\").catch(() => {\r\n    return false;\r\n  });\r\n\r\n  if (hasToken) {\r\n    if (to.path === \"/login\") {\r\n      next({ path: \"/\" });\r\n      await store.dispatch(\"loading\", false);\r\n    } else {\r\n      try {\r\n        next();\r\n      } catch (error) {\r\n        console.log(error);\r\n        store.dispatch(\"auth/logout\");\r\n        next(`/login?redirect=${to.path}`);\r\n        await store.dispatch(\"loading\", false);\r\n      }\r\n    }\r\n  } else {\r\n    if (whiteList.indexOf(to.path) !== -1) {\r\n      await store.dispatch(\"loading\", false);\r\n      next();\r\n    } else {\r\n      next(`/login?redirect=${to.path}`);\r\n      await store.dispatch(\"loading\", false);\r\n    }\r\n  }\r\n});\r\n\r\nrouter.afterEach(async () => {\r\n  await store.dispatch(\"loading\", false);\r\n});\r\n"],"mappings":"AAAA,OAAOA,MAAM,MAAM,SAAS;AAC5B,OAAOC,KAAK,MAAM,UAAU;AAE5B,MAAMC,SAAS,GAAG,CAAC,QAAQ,CAAC;AAE5BF,MAAM,CAACG,UAAU,CAAC,OAAOC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EAC1C,MAAML,KAAK,CAACM,QAAQ,CAAC,SAAS,EAAE,IAAI,CAAC;EAErC,IAAIC,QAAQ,GAAG,MAAMP,KAAK,CAACM,QAAQ,CAAC,mBAAmB,CAAC,CAACE,KAAK,CAAC,MAAM;IACnE,OAAO,KAAK;EACd,CAAC,CAAC;EAEF,IAAID,QAAQ,EAAE;IACZ,IAAIJ,EAAE,CAACM,IAAI,KAAK,QAAQ,EAAE;MACxBJ,IAAI,CAAC;QAAEI,IAAI,EAAE;MAAI,CAAC,CAAC;MACnB,MAAMT,KAAK,CAACM,QAAQ,CAAC,SAAS,EAAE,KAAK,CAAC;IACxC,CAAC,MAAM;MACL,IAAI;QACFD,IAAI,EAAE;MACR,CAAC,CAAC,OAAOK,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;QAClBV,KAAK,CAACM,QAAQ,CAAC,aAAa,CAAC;QAC7BD,IAAI,CAAE,mBAAkBF,EAAE,CAACM,IAAK,EAAC,CAAC;QAClC,MAAMT,KAAK,CAACM,QAAQ,CAAC,SAAS,EAAE,KAAK,CAAC;MACxC;IACF;EACF,CAAC,MAAM;IACL,IAAIL,SAAS,CAACY,OAAO,CAACV,EAAE,CAACM,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;MACrC,MAAMT,KAAK,CAACM,QAAQ,CAAC,SAAS,EAAE,KAAK,CAAC;MACtCD,IAAI,EAAE;IACR,CAAC,MAAM;MACLA,IAAI,CAAE,mBAAkBF,EAAE,CAACM,IAAK,EAAC,CAAC;MAClC,MAAMT,KAAK,CAACM,QAAQ,CAAC,SAAS,EAAE,KAAK,CAAC;IACxC;EACF;AACF,CAAC,CAAC;AAEFP,MAAM,CAACe,SAAS,CAAC,YAAY;EAC3B,MAAMd,KAAK,CAACM,QAAQ,CAAC,SAAS,EAAE,KAAK,CAAC;AACxC,CAAC,CAAC"},"metadata":{},"sourceType":"module"}