{"ast":null,"code":"import _toConsumableArray from \"D:/repo Tatweer/tatweerteams/CheckbooksOrderingUI/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _objectSpread from \"D:/repo Tatweer/tatweerteams/CheckbooksOrderingUI/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport { mapActions } from \"vuex\";\nimport * as enums from \"../../../models/enum.js\";\nimport { validationInput } from \"../../../models/validationInput.js\";\nimport { createHelpers } from \"vuex-map-fields\";\nvar _createHelpers = createHelpers({\n    getterType: \"getDataFields\",\n    mutationType: \"updateDataField\"\n  }),\n  mapFields = _createHelpers.mapFields;\nexport default {\n  name: \"Serach-compnent\",\n  props: {},\n  data: function data() {\n    return {\n      menu1: false,\n      menu2: false,\n      valid: false,\n      validationInput: validationInput,\n      filterData: {\n        nameOrNumber: null,\n        bankId: null,\n        pageNo: 1,\n        pageSize: 30\n      },\n      defaultFilterData: {\n        nameOrNumber: null,\n        bankId: null,\n        pageNo: 1,\n        pageSize: 30\n      },\n      enumModel: enums,\n      isSearchData: false,\n      isLoading: false,\n      selectedBank: null,\n      searchBank: null,\n      filterBankData: {\n        bankName: null\n      },\n      searchName: \"\"\n    };\n  },\n  watch: {\n    searchName: function searchName(val) {\n      this.filterData.nameOrNumber = val;\n    },\n    searchBank: function searchBank(val) {\n      if (this.isLoading) return;\n      this.filterBankData.bankName = val;\n    }\n  },\n  computed: _objectSpread({\n    filterIsSelected: function filterIsSelected() {\n      if (this.filterData.nameOrNumber || this.selectedBank) return true;else return false;\n    }\n  }, mapFields(\"bankStore\", {\n    banks: \"grids\"\n  })),\n  methods: _objectSpread(_objectSpread({}, mapActions({\n    GetBankStore: \"bankStore/GetBanks\"\n  })), {}, {\n    hasPermassion: function hasPermassion(crrentUser) {\n      this.userPermasstion = this.$store.getters[\"auth/getRole\"];\n      var result = this.userPermasstion.some(function (item) {\n        return crrentUser.includes(item);\n      });\n      return result;\n    },\n    searchData: function searchData() {\n      var _this$selectedBank$id, _this$selectedBank;\n      console.log(this.selectedBank);\n      this.filterData.bankId = (_this$selectedBank$id = (_this$selectedBank = this.selectedBank) === null || _this$selectedBank === void 0 ? void 0 : _this$selectedBank.id) !== null && _this$selectedBank$id !== void 0 ? _this$selectedBank$id : null;\n      this.isSearchData = true;\n      this.$emit(\"search-data\", this.filterData);\n    },\n    clearFilterData: function clearFilterData() {\n      this.clearData();\n      this.isSearchData = false;\n      this.$emit(\"search-data\", this.filterData);\n    },\n    clearData: function clearData() {\n      this.filterData = Object.assign({}, this.defaultFilterData);\n      this.clearBankData();\n    },\n    clearBankData: function clearBankData() {\n      this.isLoading = false;\n      this.banks = [];\n      this.selectedBank = null;\n      this.searchBank = null;\n      this.filterBankData.bankName = null;\n    },\n    getBanks: function getBanks() {\n      var _this = this;\n      try {\n        this.isLoading = true;\n        this.GetBankStore(this.filterBankData).then(function () {\n          _this.banks = _toConsumableArray(_this.$store.getters[\"bankStore/GET_ACTIVE_BANKS\"]);\n          _this.isLoading = false;\n        }).catch(function (error) {\n          _this.notify(\"\".concat(error), \"#1d262d\");\n          _this.isLoading = false;\n        });\n      } catch (error) {\n        this.isLoading = false;\n        this.notify(error, \"#1d262d\");\n      }\n    },\n    notify: function notify(text, color) {\n      this.$store.commit(\"showMessage\", {\n        text: text,\n        color: color\n      });\n    }\n  })\n};","map":{"version":3,"mappings":";;;;;AA6EA;AAEA;AACA;AAEA;AACA;IACAA;IACAC;EACA;EAHAC;AAKA;EACAC;EACAC,QACA;EACAC;IAAA;MACAC;MACAC;MACAC;MACAC;MAEAC;QACAC;QACAC;QACAC;QACAC;MACA;MAEAC;QACAJ;QACAC;QACAC;QACAC;MACA;MAEAE;MAEAC;MAEAC;MACAC;MACAC;MACAC;QACAC;MACA;MAEAC;IACA;EAAA;EAEAC;IACAD;MACA;IACA;IACAH;MACA;MAEA;IACA;EACA;EAEAK;IACAC;MACA,IACA,gCACA,mBAEA,iBACA;IACA;EAAA,GAEAxB;IACAyB;EACA,GACA;EACAC,yCACAC;IACAC;EACA;IACAC;MACA;MACA;QAAA,OACAC;MAAA,EACA;MACA;IACA;IAEAC;MAAA;MACAC;MACA;MAEA;MACA;IACA;IAEAC;MACA;MACA;MACA;IACA;IAEAC;MACA;MACA;IACA;IAEAC;MACA;MACA;MACA;MACA;MACA;IACA;IAEAC;MAAA;MACA;QACA;QACA,uCACAC;UACA;UACA;QACA,GACAC;UACA;UACA;QACA;MACA;QACA;QACA;MACA;IACA;IAEAC;MACA;QAAAC;QAAAC;MAAA;IACA;EAAA;AAEA","names":["getterType","mutationType","mapFields","name","props","data","menu1","menu2","valid","validationInput","filterData","nameOrNumber","bankId","pageNo","pageSize","defaultFilterData","enumModel","isSearchData","isLoading","selectedBank","searchBank","filterBankData","bankName","searchName","watch","computed","filterIsSelected","banks","methods","mapActions","GetBankStore","hasPermassion","crrentUser","searchData","console","clearFilterData","clearData","clearBankData","getBanks","then","catch","notify","text","color"],"sourceRoot":"src/views/reports/components","sources":["searchStatisticBranchComponent.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <v-card elevation=\"3\" height=\"auto\" class=\"px-5\">\r\n      <v-row>\r\n        <v-subheader>\r\n          <v-icon class=\"mx-2\">search</v-icon>\r\n          بحث عن فرع   \r\n        </v-subheader>\r\n      </v-row>\r\n      <v-form ref=\"formSearch\" v-model=\"valid\">\r\n        <v-row dense class=\"px-5\">\r\n          <v-col dense cols=\"12\" sm=\"6\" md=\"4\">\r\n            <v-text-field\r\n              v-model=\"searchName\"\r\n              label=\"رقم أو إسم الفرع\"\r\n              clearable\r\n              :rules=\"\r\n                searchName\r\n                  ? [\r\n                      validationInput.isEmpty,\r\n                      validationInput.numberAndArabic,\r\n                    ]\r\n                  : []\r\n              \"\r\n              dense\r\n              prepend-icon=\"mdi-numeric\"\r\n              persistent-hint\r\n            ></v-text-field>\r\n          </v-col>\r\n\r\n          <v-col cols=\"12\" sm=\"6\" md=\"4\" v-if=\"hasPermassion(['AdminSystem'])\">\r\n            <v-autocomplete\r\n              v-model=\"selectedBank\"\r\n              :items=\"banks\"\r\n              dense\r\n              :loading=\"isLoading\"\r\n              single-line\r\n              :search-input.sync=\"searchBank\"\r\n              @keyup=\"getBanks\"\r\n              item-text=\"name\"\r\n              item-value=\"bankId\"\r\n              label=\"اختر المصرف\"\r\n              placeholder=\"يجب إختيار المصرف\"\r\n              return-object\r\n              no-data-text=\"قم بالبحث عن اسم المصرف\"\r\n              clearable\r\n              :rules=\"[validationInput.selectedValidation]\"\r\n              required\r\n              prepend-icon=\"mdi-bank\"\r\n            ></v-autocomplete>\r\n          </v-col>\r\n\r\n          <v-col cols=\"12\" class=\"text-center mb-3\">\r\n            <v-btn\r\n              v-if=\"filterIsSelected\"\r\n              color=\"#081D38\"\r\n              class=\"white--text\"\r\n              @click=\"searchData\"\r\n              :disabled=\"!valid\"\r\n              >بــحــث</v-btn\r\n            >\r\n            <v-btn\r\n              v-if=\"isSearchData\"\r\n              color=\"red\"\r\n              class=\"white--text mx-3\"\r\n              @click=\"clearFilterData\"\r\n              :disabled=\"!valid\"\r\n              >إلغاء البحث</v-btn\r\n            >\r\n          </v-col>\r\n        </v-row>\r\n      </v-form>\r\n    </v-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapActions } from \"vuex\";\r\n\r\nimport * as enums from \"../../../models/enum.js\";\r\nimport { validationInput } from \"../../../models/validationInput.js\";\r\n\r\nimport { createHelpers } from \"vuex-map-fields\";\r\nconst { mapFields } = createHelpers({\r\n  getterType: \"getDataFields\",\r\n  mutationType: \"updateDataField\",\r\n});\r\n\r\nexport default {\r\n  name: \"Serach-compnent\",\r\n  props: {\r\n  },\r\n  data: () => ({\r\n    menu1: false,\r\n    menu2: false,\r\n    valid: false,\r\n    validationInput: validationInput,\r\n\r\n    filterData: {\r\n      nameOrNumber: null,\r\n      bankId: null,\r\n      pageNo: 1,\r\n      pageSize: 30,\r\n    },\r\n\r\n    defaultFilterData: {\r\n      nameOrNumber: null,\r\n      bankId: null,\r\n      pageNo: 1,\r\n      pageSize: 30,\r\n    },\r\n\r\n    enumModel: enums,\r\n\r\n    isSearchData: false,\r\n\r\n    isLoading: false,\r\n    selectedBank: null,\r\n    searchBank: null,\r\n    filterBankData: {\r\n      bankName: null,\r\n    },\r\n\r\n    searchName: \"\",\r\n  }),\r\n\r\n  watch: {\r\n    searchName(val) {\r\n      this.filterData.nameOrNumber = val;\r\n    },\r\n    searchBank(val) {\r\n      if (this.isLoading) return;\r\n\r\n      this.filterBankData.bankName = val;\r\n    },\r\n  },\r\n\r\n  computed: {\r\n    filterIsSelected() {\r\n      if (\r\n        this.filterData.nameOrNumber ||\r\n        this.selectedBank\r\n      )\r\n        return true;\r\n      else return false;\r\n    },\r\n\r\n    ...mapFields(\"bankStore\", {\r\n      banks: \"grids\",\r\n    }),\r\n  },\r\n  methods: {\r\n    ...mapActions({\r\n      GetBankStore: \"bankStore/GetBanks\",\r\n    }),\r\n    hasPermassion(crrentUser) {\r\n      this.userPermasstion = this.$store.getters[\"auth/getRole\"];\r\n      var result = this.userPermasstion.some((item) =>\r\n        crrentUser.includes(item)\r\n      );\r\n      return result;\r\n    },\r\n\r\n    searchData() {\r\n        console.log(this.selectedBank);\r\n      this.filterData.bankId = this.selectedBank?.id ?? null;\r\n\r\n      this.isSearchData = true;\r\n      this.$emit(\"search-data\", this.filterData);\r\n    },\r\n\r\n    clearFilterData() {\r\n      this.clearData();\r\n      this.isSearchData = false;\r\n      this.$emit(\"search-data\", this.filterData);\r\n    },\r\n\r\n    clearData() {\r\n      this.filterData = Object.assign({}, this.defaultFilterData);\r\n      this.clearBankData();\r\n    },\r\n\r\n    clearBankData() {\r\n      this.isLoading = false;\r\n      this.banks = [];\r\n      this.selectedBank = null;\r\n      this.searchBank = null;\r\n      this.filterBankData.bankName = null;\r\n    },\r\n\r\n    getBanks() {\r\n      try {\r\n        this.isLoading = true;\r\n        this.GetBankStore(this.filterBankData)\r\n          .then(() => {\r\n            this.banks = [...this.$store.getters[\"bankStore/GET_ACTIVE_BANKS\"]];\r\n            this.isLoading = false;\r\n          })\r\n          .catch((error) => {\r\n            this.notify(`${error}`, \"#1d262d\");\r\n            this.isLoading = false;\r\n          });\r\n      } catch (error) {\r\n        this.isLoading = false;\r\n        this.notify(error, \"#1d262d\");\r\n      }\r\n    },\r\n\r\n    notify(text, color) {\r\n      this.$store.commit(\"showMessage\", { text: text, color: color });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style></style>\r\n"]},"metadata":{},"sourceType":"module"}