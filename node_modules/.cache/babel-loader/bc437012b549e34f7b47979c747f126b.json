{"ast":null,"code":"import _objectSpread from \"D:/repo Tatweer/tatweerteams/CheckbooksOrderingUI/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.join.js\";\n// import { EventBus } from \"../../../eventBus.js\";\nimport { validationInput } from \"../../../models/validationInput.js\";\nimport { mapActions } from \"vuex\";\nimport { createHelpers } from \"vuex-map-fields\";\nvar _createHelpers = createHelpers({\n    getterType: \"getDataFields\",\n    mutationType: \"updateDataField\"\n  }),\n  mapFields = _createHelpers.mapFields;\nexport default {\n  props: {\n    rejectRequestItemProp: {}\n  },\n  name: \"reject-order-request\",\n  data: function data() {\n    return {\n      rejectDialog: false,\n      valid: false,\n      rejectItem: {\n        orderRequestId: null,\n        rejectNote: null\n      },\n      defaultItem: {\n        orderRequestId: null,\n        rejectNote: null\n      },\n      validationInput: validationInput,\n      searchReasonRefuse: null,\n      isLoading: false,\n      selectedReasonRefuses: [],\n      filterReasonRefuse: {\n        name: null\n      }\n    };\n  },\n  computed: _objectSpread({}, mapFields(\"reasonRefuseStore\", {\n    activeReasonRefuses: \"activeReasonRefuses\"\n  })),\n  watch: {\n    rejectRequestItemProp: {\n      handler: function handler(data) {\n        if (data) this.displayRejectDialog(data);\n      },\n      immediate: true\n    },\n    searchReasonRefuse: function searchReasonRefuse(val) {\n      if (this.isLoading) return;\n      this.filterReasonRefuse.name = val;\n    }\n  },\n  methods: _objectSpread(_objectSpread({}, mapActions({\n    RejectOrderRequest: \"orderRequestStore/RejectOrderRequest\",\n    GetActiveReasonRefusesStore: \"reasonRefuseStore/GetActiveReasonRefuses\"\n  })), {}, {\n    confirm: function confirm() {\n      var _this = this;\n      this.$store.dispatch(\"loading\", true);\n      try {\n        this.$store.dispatch(\"loading\", true);\n        this.RejectOrderRequest(this.rejectItem).then(function (res) {\n          _this.notify(\"\".concat(res), \"#1d262d\");\n          _this.$emit(\"refresh-data\");\n        }).catch(function (error) {\n          _this.notify(\"\".concat(error), \"#1d262d\");\n          _this.$store.dispatch(\"loading\", false);\n        });\n      } catch (error) {\n        this.$store.dispatch(\"loading\", false);\n        this.notify(error, \"#1d262d\");\n      }\n    },\n    getReasonRefuses: function getReasonRefuses() {\n      var _this2 = this;\n      try {\n        this.isLoading = true;\n        this.GetActiveReasonRefusesStore(this.filterReasonRefuse).then(function () {\n          _this2.isLoading = false;\n        }).catch(function (error) {\n          _this2.notify(\"\".concat(error), \"#1d262d\");\n          _this2.isLoading = false;\n        });\n      } catch (error) {\n        this.isLoading = false;\n        this.notify(error, \"#1d262d\");\n      }\n    },\n    displayRejectDialog: function displayRejectDialog(item) {\n      this.rejectItem.orderRequestId = item.orderRequestId;\n      this.rejectDialog = true;\n      this.getReasonRefuses();\n    },\n    closeRejectDialog: function closeRejectDialog() {\n      var r = this.selectedReasonRefuses.join('@');\n      console.log(r);\n      // this.rejectItem = Object.assign({}, this.defaultItem);\n      // this.rejectDialog = false;\n      // this.resetValidation();\n      // this.$emit(\"close-dialog\");\n    },\n    notify: function notify(text, color) {\n      this.$store.commit(\"showMessage\", {\n        text: text,\n        color: color\n      });\n    },\n    resetValidation: function resetValidation() {\n      var _this$$refs$formRejec;\n      (_this$$refs$formRejec = this.$refs.formRejectOrder) === null || _this$$refs$formRejec === void 0 ? void 0 : _this$$refs$formRejec.reset();\n    }\n  })\n};","map":{"version":3,"mappings":";;;AA4EA;AACA;AACA;AACA;AACA;IACAA;IACAC;EACA;EAHAC;AAIA;EACAC;IACAC;EACA;EACAC;EACAC;IAAA;MACAC;MACAC;MACAC;QACAC;QACAC;MACA;MACAC;QACAF;QACAC;MACA;MACAE;MAEAC;MACAC;MACAC;MACAC;QACAZ;MACA;IACA;EAAA;EAEAa,4BACAhB;IACAiB;EACA,GACA;EAEAC;IACAhB;MACAiB;QACA;MACA;MACAC;IACA;IACAR;MACA;MACA;IACA;EACA;EAEAS,yCACAC;IACAC;IACAC;EACA;IAEAC;MAAA;MACA;MACA;QACA;QACA,yCACAC;UACA;UACA;QACA,GACAC;UACA;UACA;QACA;MACA;QACA;QACA;MACA;IACA;IAEAC;MAAA;MACA;QACA;QACA,0DACAF;UACA;QACA,GACAC;UACA;UACA;QACA;MACA;QACA;QACA;MACA;IACA;IAEAE;MACA;MACA;MACA;IACA;IAEAC;MAEA;MACAC;MACA;MACA;MACA;MACA;IACA;IAEAC;MACA;QAAAC;QAAAC;MAAA;IACA;IACAC;MAAA;MACA;IACA;EAAA;AAEA","names":["getterType","mutationType","mapFields","props","rejectRequestItemProp","name","data","rejectDialog","valid","rejectItem","orderRequestId","rejectNote","defaultItem","validationInput","searchReasonRefuse","isLoading","selectedReasonRefuses","filterReasonRefuse","computed","activeReasonRefuses","watch","handler","immediate","methods","mapActions","RejectOrderRequest","GetActiveReasonRefusesStore","confirm","then","catch","getReasonRefuses","displayRejectDialog","closeRejectDialog","console","notify","text","color","resetValidation"],"sourceRoot":"src/views/orderRequestPinding/components","sources":["rejectOrderRequestComponent.vue"],"sourcesContent":["<template>\r\n  <v-dialog\r\n    v-model=\"rejectDialog\"\r\n    min-height=\"200px\"\r\n    max-width=\"500px\"\r\n    persistent\r\n  >\r\n    <v-card>\r\n      <v-card-title>\r\n        <span class=\"headline\">هل انت متأكد من رفض الطلب ؟</span>\r\n      </v-card-title>\r\n      <v-divider></v-divider>\r\n\r\n      <v-card-text>\r\n        <v-row class=\"mt-2\">\r\n          <v-col cols=\"12\">\r\n            <v-form ref=\"formRejectOrder\" v-model=\"valid\">\r\n              <v-autocomplete\r\n                v-model=\"selectedReasonRefuses\"\r\n                :items=\"activeReasonRefuses\"\r\n                dense\r\n                :loading=\"isLoading\"\r\n                :search-input.sync=\"searchReasonRefuse\"\r\n                @keyup=\"getReasonRefuses\"\r\n                item-text=\"name\"\r\n                item-value=\"name\"\r\n                label=\"اختر سبب الرفض\"\r\n                placeholder=\"يجب إختيار سبب الرفض\"\r\n                no-data-text=\"لايوجد بيانات\"\r\n                clearable\r\n                :rules=\"[validationInput.selectedListValidation]\"\r\n                required\r\n                multiple\r\n                prepend-icon=\"mdi-file-document-alert\"\r\n              >\r\n                <template v-slot:selection=\"{ item, index }\">\r\n                  <v-chip v-if=\"index <= 1\">\r\n                    <span>{{ item.name }}</span>\r\n                  </v-chip>\r\n                  <span v-if=\"index === 2\" class=\"grey--text text-caption\">\r\n                    (+{{ selectedReasonRefuses.length - 2 }} أخري)\r\n                  </span>\r\n                </template>\r\n              </v-autocomplete>\r\n            </v-form>\r\n          </v-col>\r\n           \r\n        </v-row>\r\n      </v-card-text>\r\n\r\n      <v-card-actions>\r\n        <div style=\"width: 100%;text-align: center; \">\r\n          <v-btn\r\n            @click=\"confirm\"\r\n            :disabled=\"!valid\"\r\n            class=\"white--text\"\r\n            color=\"#536DFE\"\r\n          >\r\n            <v-icon>save</v-icon>\r\n            <span>تأكيد</span>\r\n          </v-btn>\r\n          <v-btn\r\n            class=\"mr-2 white--text\"\r\n            @click=\"closeRejectDialog\"\r\n            color=\"#E91D62\"\r\n          >\r\n            <v-icon style=\"font-size: 19px;\" dark>clear</v-icon>\r\n            <span>إلغاء</span>\r\n          </v-btn>\r\n        </div>\r\n      </v-card-actions>\r\n    </v-card>\r\n  </v-dialog>\r\n</template>\r\n\r\n<script>\r\n// import { EventBus } from \"../../../eventBus.js\";\r\nimport { validationInput } from \"../../../models/validationInput.js\";\r\nimport { mapActions } from \"vuex\";\r\nimport { createHelpers } from \"vuex-map-fields\";\r\nconst { mapFields } = createHelpers({\r\n  getterType: \"getDataFields\",\r\n  mutationType: \"updateDataField\",\r\n});\r\nexport default {\r\n  props: {\r\n    rejectRequestItemProp: {},\r\n  },\r\n  name: \"reject-order-request\",\r\n  data: () => ({\r\n    rejectDialog: false,\r\n    valid: false,\r\n    rejectItem: {\r\n      orderRequestId: null,\r\n      rejectNote: null,\r\n    },\r\n    defaultItem: {\r\n      orderRequestId: null,\r\n      rejectNote: null,\r\n    },\r\n    validationInput: validationInput,\r\n\r\n    searchReasonRefuse: null,\r\n    isLoading: false,\r\n    selectedReasonRefuses: [],\r\n    filterReasonRefuse: {\r\n      name: null,\r\n    },\r\n  }),\r\n\r\n  computed: {\r\n    ...mapFields(\"reasonRefuseStore\", {\r\n      activeReasonRefuses: \"activeReasonRefuses\",\r\n    }),\r\n  },\r\n\r\n  watch: {\r\n    rejectRequestItemProp: {\r\n      handler(data) {\r\n        if (data) this.displayRejectDialog(data);\r\n      },\r\n      immediate: true,\r\n    },\r\n    searchReasonRefuse(val) {\r\n      if (this.isLoading) return;\r\n      this.filterReasonRefuse.name = val;\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    ...mapActions({\r\n      RejectOrderRequest: \"orderRequestStore/RejectOrderRequest\",\r\n      GetActiveReasonRefusesStore: \"reasonRefuseStore/GetActiveReasonRefuses\",\r\n    }),\r\n\r\n    confirm() {\r\n      this.$store.dispatch(\"loading\", true);\r\n      try {\r\n        this.$store.dispatch(\"loading\", true);\r\n        this.RejectOrderRequest(this.rejectItem)\r\n          .then((res) => {\r\n            this.notify(`${res}`, \"#1d262d\");\r\n            this.$emit(\"refresh-data\");\r\n          })\r\n          .catch((error) => {\r\n            this.notify(`${error}`, \"#1d262d\");\r\n            this.$store.dispatch(\"loading\", false);\r\n          });\r\n      } catch (error) {\r\n        this.$store.dispatch(\"loading\", false);\r\n        this.notify(error, \"#1d262d\");\r\n      }\r\n    },\r\n\r\n    getReasonRefuses() {\r\n      try {\r\n        this.isLoading = true;\r\n        this.GetActiveReasonRefusesStore(this.filterReasonRefuse)\r\n          .then(() => {\r\n            this.isLoading = false;\r\n          })\r\n          .catch((error) => {\r\n            this.notify(`${error}`, \"#1d262d\");\r\n            this.isLoading = false;\r\n          });\r\n      } catch (error) {\r\n        this.isLoading = false;\r\n        this.notify(error, \"#1d262d\");\r\n      }\r\n    },\r\n\r\n    displayRejectDialog(item) {\r\n      this.rejectItem.orderRequestId = item.orderRequestId;\r\n      this.rejectDialog = true;\r\n      this.getReasonRefuses();\r\n    },\r\n\r\n    closeRejectDialog() {\r\n      \r\n      var r=this.selectedReasonRefuses.join('@');\r\n      console.log(r);\r\n      // this.rejectItem = Object.assign({}, this.defaultItem);\r\n      // this.rejectDialog = false;\r\n      // this.resetValidation();\r\n      // this.$emit(\"close-dialog\");\r\n    },\r\n\r\n    notify(text, color) {\r\n      this.$store.commit(\"showMessage\", { text: text, color: color });\r\n    },\r\n    resetValidation() {\r\n      this.$refs.formRejectOrder?.reset();\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style></style>\r\n"]},"metadata":{},"sourceType":"module"}