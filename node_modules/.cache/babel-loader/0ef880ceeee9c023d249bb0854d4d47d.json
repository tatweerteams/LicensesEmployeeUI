{"ast":null,"code":"import { getRegions, insertRegion, updateRegion, deleteRegion, getRegionUnSelectedBank } from \"../Apis/index.js\";\nimport { createHelpers } from \"vuex-map-fields\";\nconst {\n  getDataFields,\n  updateDataField\n} = createHelpers({\n  getterType: \"getDataFields\",\n  mutationType: \"updateDataField\"\n});\nexport default {\n  namespaced: true,\n  state: {\n    regions: [],\n    regionUnSelectBank: [],\n    editedItem: {\n      regionName: null,\n      regionNumber: null,\n      regionId: null\n    },\n    defaultItem: {\n      regionName: null,\n      regionNumber: null,\n      regionId: null\n    }\n  },\n  getters: {\n    getDataFields\n  },\n  mutations: {\n    updateDataField,\n    SET_DATA_REGIONS(state, regions) {\n      state.regions = regions;\n    },\n    SET_DATA_REGION_UN_SELECTED(state, regions) {\n      state.regionUnSelectBank = regions;\n    },\n    RESET_DATA(state) {\n      state.editedItem = Object.assign({}, state.defaultItem);\n    },\n    SET_DATA_REGION(state, itemRegion) {\n      state.editedItem = Object.assign({}, itemRegion);\n    }\n  },\n  actions: {\n    ClearDataItem({\n      commit\n    }) {\n      commit(\"RESET_DATA\");\n    },\n    SetDataUpdate({\n      commit\n    }, itemRegion) {\n      commit(\"SET_DATA_REGION\", itemRegion);\n    },\n    GetRegions({\n      commit\n    }, filter) {\n      return new Promise((resolve, reject) => {\n        getRegions(filter).then(response => {\n          commit(\"SET_DATA_REGIONS\", response.result);\n          resolve(response);\n        }).catch(error => {\n          reject(error);\n        });\n      });\n    },\n    GetRegionsUnSelected({\n      commit\n    }, filter) {\n      return new Promise((resolve, reject) => {\n        getRegionUnSelectedBank(filter).then(response => {\n          commit(\"SET_DATA_REGION_UN_SELECTED\", response.result);\n          resolve(response);\n        }).catch(error => {\n          reject(error);\n        });\n      });\n    },\n    InsertRegion({\n      commit,\n      state\n    }) {\n      const data = {\n        name: state.editedItem.regionName,\n        regionNo: state.editedItem.regionNumber\n      };\n      return new Promise((resolve, reject) => {\n        insertRegion(data).then(response => {\n          commit(\"RESET_DATA\");\n          resolve(response.messages[0]);\n        }).catch(error => {\n          reject(error);\n        });\n      });\n    },\n    UpdateRegion({\n      commit,\n      state\n    }) {\n      const data = {\n        name: state.editedItem.regionName,\n        regionNo: state.editedItem.regionNumber,\n        regionId: state.editedItem.regionId\n      };\n      return new Promise((resolve, reject) => {\n        updateRegion(data).then(response => {\n          commit(\"RESET_DATA\");\n          resolve(response.messages[0]);\n        }).catch(error => {\n          reject(error);\n        });\n      });\n    },\n    DeleteRegion({\n      commit\n    }, regionId) {\n      const param = {\n        regionId: regionId\n      };\n      return new Promise((resolve, reject) => {\n        deleteRegion(param).then(response => {\n          console.log(commit);\n          resolve(response.messages[0]);\n        }).catch(error => {\n          reject(error);\n        });\n      });\n    }\n  }\n};","map":{"version":3,"names":["getRegions","insertRegion","updateRegion","deleteRegion","getRegionUnSelectedBank","createHelpers","getDataFields","updateDataField","getterType","mutationType","namespaced","state","regions","regionUnSelectBank","editedItem","regionName","regionNumber","regionId","defaultItem","getters","mutations","SET_DATA_REGIONS","SET_DATA_REGION_UN_SELECTED","RESET_DATA","Object","assign","SET_DATA_REGION","itemRegion","actions","ClearDataItem","commit","SetDataUpdate","GetRegions","filter","Promise","resolve","reject","then","response","result","catch","error","GetRegionsUnSelected","InsertRegion","data","name","regionNo","messages","UpdateRegion","DeleteRegion","param","console","log"],"sources":["D:/repo Tatweer/tatweerteams/CheckbooksOrderingUI/src/views/Region/Stores/index.js"],"sourcesContent":["import {\r\n  getRegions,\r\n  insertRegion,\r\n  updateRegion,\r\n  deleteRegion,\r\n  getRegionUnSelectedBank,\r\n} from \"../Apis/index.js\";\r\n\r\nimport { createHelpers } from \"vuex-map-fields\";\r\nconst { getDataFields, updateDataField } = createHelpers({\r\n  getterType: \"getDataFields\",\r\n  mutationType: \"updateDataField\",\r\n});\r\nexport default {\r\n  namespaced: true,\r\n  state: {\r\n    regions: [],\r\n    regionUnSelectBank: [],\r\n    editedItem: {\r\n      regionName: null,\r\n      regionNumber: null,\r\n      regionId: null,\r\n    },\r\n    defaultItem: {\r\n      regionName: null,\r\n      regionNumber: null,\r\n      regionId: null,\r\n    },\r\n  },\r\n\r\n  getters: {\r\n    getDataFields,\r\n  },\r\n\r\n  mutations: {\r\n    updateDataField,\r\n\r\n    SET_DATA_REGIONS(state, regions) {\r\n      state.regions = regions;\r\n    },\r\n    SET_DATA_REGION_UN_SELECTED(state, regions) {\r\n      state.regionUnSelectBank = regions;\r\n    },\r\n    RESET_DATA(state) {\r\n      state.editedItem = Object.assign({}, state.defaultItem);\r\n    },\r\n    SET_DATA_REGION(state, itemRegion) {\r\n      state.editedItem = Object.assign({}, itemRegion);\r\n    },\r\n  },\r\n\r\n  actions: {\r\n    ClearDataItem({ commit }) {\r\n      commit(\"RESET_DATA\");\r\n    },\r\n\r\n    SetDataUpdate({ commit }, itemRegion) {\r\n      commit(\"SET_DATA_REGION\", itemRegion);\r\n    },\r\n\r\n    GetRegions({ commit }, filter) {\r\n      return new Promise((resolve, reject) => {\r\n        getRegions(filter)\r\n          .then((response) => {\r\n            commit(\"SET_DATA_REGIONS\", response.result);\r\n            resolve(response);\r\n          })\r\n          .catch((error) => {\r\n            reject(error);\r\n          });\r\n      });\r\n    },\r\n    GetRegionsUnSelected({ commit }, filter) {\r\n      return new Promise((resolve, reject) => {\r\n        getRegionUnSelectedBank(filter)\r\n          .then((response) => {\r\n            commit(\"SET_DATA_REGION_UN_SELECTED\", response.result);\r\n            resolve(response);\r\n          })\r\n          .catch((error) => {\r\n            reject(error);\r\n          });\r\n      });\r\n    },\r\n    InsertRegion({ commit, state }) {\r\n      const data = {\r\n        name: state.editedItem.regionName,\r\n        regionNo: state.editedItem.regionNumber,\r\n      };\r\n\r\n      return new Promise((resolve, reject) => {\r\n        insertRegion(data)\r\n          .then((response) => {\r\n            commit(\"RESET_DATA\");\r\n            resolve(response.messages[0]);\r\n          })\r\n          .catch((error) => {\r\n            reject(error);\r\n          });\r\n      });\r\n    },\r\n    UpdateRegion({ commit, state }) {\r\n      const data = {\r\n        name: state.editedItem.regionName,\r\n        regionNo: state.editedItem.regionNumber,\r\n        regionId: state.editedItem.regionId,\r\n      };\r\n\r\n      return new Promise((resolve, reject) => {\r\n        updateRegion(data)\r\n          .then((response) => {\r\n            commit(\"RESET_DATA\");\r\n            resolve(response.messages[0]);\r\n          })\r\n          .catch((error) => {\r\n            reject(error);\r\n          });\r\n      });\r\n    },\r\n\r\n    DeleteRegion({ commit }, regionId) {\r\n      const param = {\r\n        regionId: regionId,\r\n      };\r\n      return new Promise((resolve, reject) => {\r\n        deleteRegion(param)\r\n          .then((response) => {\r\n            console.log(commit);\r\n            resolve(response.messages[0]);\r\n          })\r\n          .catch((error) => {\r\n            reject(error);\r\n          });\r\n      });\r\n    },\r\n  },\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}