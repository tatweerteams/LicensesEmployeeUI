{"ast":null,"code":"import _toConsumableArray from \"D:/repo Tatweer/tatweerteams/CheckbooksOrderingUI/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _objectSpread from \"D:/repo Tatweer/tatweerteams/CheckbooksOrderingUI/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _typeof from \"D:/repo Tatweer/tatweerteams/CheckbooksOrderingUI/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.slice.js\";\n// Styles\nimport \"../../../src/components/VFileInput/VFileInput.sass\"; // Extensions\n\nimport VTextField from '../VTextField'; // Components\n\nimport { VChip } from '../VChip'; // Utilities\n\nimport { deepEqual, humanReadableFileSize, wrapInArray } from '../../util/helpers';\nimport { consoleError } from '../../util/console';\nimport { mergeStyles } from '../../util/mergeData';\nexport default VTextField.extend({\n  name: 'v-file-input',\n  model: {\n    prop: 'value',\n    event: 'change'\n  },\n  props: {\n    chips: Boolean,\n    clearable: {\n      type: Boolean,\n      default: true\n    },\n    counterSizeString: {\n      type: String,\n      default: '$vuetify.fileInput.counterSize'\n    },\n    counterString: {\n      type: String,\n      default: '$vuetify.fileInput.counter'\n    },\n    hideInput: Boolean,\n    multiple: Boolean,\n    placeholder: String,\n    prependIcon: {\n      type: String,\n      default: '$file'\n    },\n    readonly: {\n      type: Boolean,\n      default: false\n    },\n    showSize: {\n      type: [Boolean, Number],\n      default: false,\n      validator: function validator(v) {\n        return typeof v === 'boolean' || [1000, 1024].includes(v);\n      }\n    },\n    smallChips: Boolean,\n    truncateLength: {\n      type: [Number, String],\n      default: 22\n    },\n    type: {\n      type: String,\n      default: 'file'\n    },\n    value: {\n      default: undefined,\n      validator: function validator(val) {\n        return wrapInArray(val).every(function (v) {\n          return v != null && _typeof(v) === 'object';\n        });\n      }\n    }\n  },\n  computed: {\n    classes: function classes() {\n      return _objectSpread(_objectSpread({}, VTextField.options.computed.classes.call(this)), {}, {\n        'v-file-input': true\n      });\n    },\n    computedCounterValue: function computedCounterValue() {\n      var fileCount = this.multiple && this.lazyValue ? this.lazyValue.length : this.lazyValue instanceof File ? 1 : 0;\n      if (!this.showSize) return this.$vuetify.lang.t(this.counterString, fileCount);\n      var bytes = this.internalArrayValue.reduce(function (bytes, _ref) {\n        var _ref$size = _ref.size,\n          size = _ref$size === void 0 ? 0 : _ref$size;\n        return bytes + size;\n      }, 0);\n      return this.$vuetify.lang.t(this.counterSizeString, fileCount, humanReadableFileSize(bytes, this.base === 1024));\n    },\n    internalArrayValue: function internalArrayValue() {\n      return wrapInArray(this.internalValue);\n    },\n    internalValue: {\n      get: function get() {\n        return this.lazyValue;\n      },\n      set: function set(val) {\n        this.lazyValue = val;\n        this.$emit('change', this.lazyValue);\n      }\n    },\n    isDirty: function isDirty() {\n      return this.internalArrayValue.length > 0;\n    },\n    isLabelActive: function isLabelActive() {\n      return this.isDirty;\n    },\n    text: function text() {\n      var _this = this;\n      if (!this.isDirty && (this.persistentPlaceholder || this.isFocused || !this.hasLabel)) return [this.placeholder];\n      return this.internalArrayValue.map(function (file) {\n        var _file$name = file.name,\n          name = _file$name === void 0 ? '' : _file$name,\n          _file$size = file.size,\n          size = _file$size === void 0 ? 0 : _file$size;\n        var truncatedText = _this.truncateText(name);\n        return !_this.showSize ? truncatedText : \"\".concat(truncatedText, \" (\").concat(humanReadableFileSize(size, _this.base === 1024), \")\");\n      });\n    },\n    base: function base() {\n      return typeof this.showSize !== 'boolean' ? this.showSize : undefined;\n    },\n    hasChips: function hasChips() {\n      return this.chips || this.smallChips;\n    }\n  },\n  watch: {\n    readonly: {\n      handler: function handler(v) {\n        if (v === true) consoleError('readonly is not supported on <v-file-input>', this);\n      },\n      immediate: true\n    },\n    value: function value(v) {\n      var value = this.multiple ? v : v ? [v] : [];\n      if (!deepEqual(value, this.$refs.input.files)) {\n        // When the input value is changed programatically, clear the\n        // internal input's value so that the `onInput` handler\n        // can be triggered again if the user re-selects the exact\n        // same file(s). Ideally, `input.files` should be\n        // manipulated directly but that property is readonly.\n        this.$refs.input.value = '';\n      }\n    }\n  },\n  methods: {\n    clearableCallback: function clearableCallback() {\n      this.internalValue = this.multiple ? [] : null;\n      this.$refs.input.value = '';\n    },\n    genChips: function genChips() {\n      var _this2 = this;\n      if (!this.isDirty) return [];\n      return this.text.map(function (text, index) {\n        return _this2.$createElement(VChip, {\n          props: {\n            small: _this2.smallChips\n          },\n          on: {\n            'click:close': function clickClose() {\n              var internalValue = _this2.internalValue;\n              internalValue.splice(index, 1);\n              _this2.internalValue = internalValue; // Trigger the watcher\n            }\n          }\n        }, [text]);\n      });\n    },\n    genControl: function genControl() {\n      var render = VTextField.options.methods.genControl.call(this);\n      if (this.hideInput) {\n        render.data.style = mergeStyles(render.data.style, {\n          display: 'none'\n        });\n      }\n      return render;\n    },\n    genInput: function genInput() {\n      var input = VTextField.options.methods.genInput.call(this);\n      input.data.attrs.multiple = this.multiple; // We should not be setting value\n      // programmatically on the input\n      // when it is using type=\"file\"\n\n      delete input.data.domProps.value; // This solves an issue in Safari where\n      // nothing happens when adding a file\n      // do to the input event not firing\n      // https://github.com/vuetifyjs/vuetify/issues/7941\n\n      delete input.data.on.input;\n      input.data.on.change = this.onInput;\n      return [this.genSelections(), input];\n    },\n    genPrependSlot: function genPrependSlot() {\n      var _this3 = this;\n      if (!this.prependIcon) return null;\n      var icon = this.genIcon('prepend', function () {\n        _this3.$refs.input.click();\n      });\n      return this.genSlot('prepend', 'outer', [icon]);\n    },\n    genSelectionText: function genSelectionText() {\n      var length = this.text.length;\n      if (length < 2) return this.text;\n      if (this.showSize && !this.counter) return [this.computedCounterValue];\n      return [this.$vuetify.lang.t(this.counterString, length)];\n    },\n    genSelections: function genSelections() {\n      var _this4 = this;\n      var children = [];\n      if (this.isDirty && this.$scopedSlots.selection) {\n        this.internalArrayValue.forEach(function (file, index) {\n          if (!_this4.$scopedSlots.selection) return;\n          children.push(_this4.$scopedSlots.selection({\n            text: _this4.text[index],\n            file: file,\n            index: index\n          }));\n        });\n      } else {\n        children.push(this.hasChips && this.isDirty ? this.genChips() : this.genSelectionText());\n      }\n      return this.$createElement('div', {\n        staticClass: 'v-file-input__text',\n        class: {\n          'v-file-input__text--placeholder': this.placeholder && !this.isDirty,\n          'v-file-input__text--chips': this.hasChips && !this.$scopedSlots.selection\n        }\n      }, children);\n    },\n    genTextFieldSlot: function genTextFieldSlot() {\n      var _this5 = this;\n      var node = VTextField.options.methods.genTextFieldSlot.call(this);\n      node.data.on = _objectSpread(_objectSpread({}, node.data.on || {}), {}, {\n        click: function click() {\n          return _this5.$refs.input.click();\n        }\n      });\n      return node;\n    },\n    onInput: function onInput(e) {\n      var files = _toConsumableArray(e.target.files || []);\n      this.internalValue = this.multiple ? files : files[0]; // Set initialValue here otherwise isFocused\n      // watcher in VTextField will emit a change\n      // event whenever the component is blurred\n\n      this.initialValue = this.internalValue;\n    },\n    onKeyDown: function onKeyDown(e) {\n      this.$emit('keydown', e);\n    },\n    truncateText: function truncateText(str) {\n      if (str.length < Number(this.truncateLength)) return str;\n      var charsKeepOneSide = Math.floor((Number(this.truncateLength) - 1) / 2);\n      return \"\".concat(str.slice(0, charsKeepOneSide), \"\\u2026\").concat(str.slice(str.length - charsKeepOneSide));\n    }\n  }\n});","map":{"version":3,"mappings":"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","names":["VTextField","VChip","deepEqual","humanReadableFileSize","wrapInArray","consoleError","mergeStyles","extend","name","model","prop","event","props","chips","Boolean","clearable","type","default","counterSizeString","String","counterString","hideInput","multiple","placeholder","prependIcon","readonly","showSize","Number","validator","v","includes","smallChips","truncateLength","value","undefined","val","every","computed","classes","options","call","computedCounterValue","fileCount","lazyValue","length","File","$vuetify","lang","t","bytes","internalArrayValue","reduce","size","base","internalValue","get","set","$emit","isDirty","isLabelActive","text","persistentPlaceholder","isFocused","hasLabel","map","file","truncatedText","truncateText","hasChips","watch","handler","immediate","$refs","input","files","methods","clearableCallback","genChips","index","$createElement","small","on","splice","genControl","render","data","style","display","genInput","attrs","domProps","change","onInput","genSelections","genPrependSlot","icon","genIcon","click","genSlot","genSelectionText","counter","children","$scopedSlots","selection","forEach","push","staticClass","class","genTextFieldSlot","node","e","target","initialValue","onKeyDown","str","charsKeepOneSide","Math","floor","slice"],"sourceRoot":"","sources":["../../../src/components/VFileInput/VFileInput.ts"],"sourcesContent":["// Styles\nimport './VFileInput.sass'\n\n// Extensions\nimport VTextField from '../VTextField'\n\n// Components\nimport { VChip } from '../VChip'\n\n// Types\nimport { PropValidator } from 'vue/types/options'\n\n// Utilities\nimport { deepEqual, humanReadableFileSize, wrapInArray } from '../../util/helpers'\nimport { consoleError } from '../../util/console'\nimport { mergeStyles } from '../../util/mergeData'\n\nexport default VTextField.extend({\n  name: 'v-file-input',\n\n  model: {\n    prop: 'value',\n    event: 'change',\n  },\n\n  props: {\n    chips: Boolean,\n    clearable: {\n      type: Boolean,\n      default: true,\n    },\n    counterSizeString: {\n      type: String,\n      default: '$vuetify.fileInput.counterSize',\n    },\n    counterString: {\n      type: String,\n      default: '$vuetify.fileInput.counter',\n    },\n    hideInput: Boolean,\n    multiple: Boolean,\n    placeholder: String,\n    prependIcon: {\n      type: String,\n      default: '$file',\n    },\n    readonly: {\n      type: Boolean,\n      default: false,\n    },\n    showSize: {\n      type: [Boolean, Number],\n      default: false,\n      validator: (v: boolean | number) => {\n        return (\n          typeof v === 'boolean' ||\n          [1000, 1024].includes(v)\n        )\n      },\n    } as PropValidator<boolean | 1000 | 1024>,\n    smallChips: Boolean,\n    truncateLength: {\n      type: [Number, String],\n      default: 22,\n    },\n    type: {\n      type: String,\n      default: 'file',\n    },\n    value: {\n      default: undefined,\n      validator: val => {\n        return wrapInArray(val).every(v => v != null && typeof v === 'object')\n      },\n    } as PropValidator<File | File[]>,\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VTextField.options.computed.classes.call(this),\n        'v-file-input': true,\n      }\n    },\n    computedCounterValue (): string {\n      const fileCount = (this.multiple && this.lazyValue)\n        ? this.lazyValue.length\n        : (this.lazyValue instanceof File) ? 1 : 0\n\n      if (!this.showSize) return this.$vuetify.lang.t(this.counterString, fileCount)\n\n      const bytes = this.internalArrayValue.reduce((bytes: number, { size = 0 }: File) => {\n        return bytes + size\n      }, 0)\n\n      return this.$vuetify.lang.t(\n        this.counterSizeString,\n        fileCount,\n        humanReadableFileSize(bytes, this.base === 1024)\n      )\n    },\n    internalArrayValue (): File[] {\n      return wrapInArray(this.internalValue)\n    },\n    internalValue: {\n      get (): File[] {\n        return this.lazyValue\n      },\n      set (val: File | File[]) {\n        this.lazyValue = val\n        this.$emit('change', this.lazyValue)\n      },\n    },\n    isDirty (): boolean {\n      return this.internalArrayValue.length > 0\n    },\n    isLabelActive (): boolean {\n      return this.isDirty\n    },\n    text (): string[] {\n      if (!this.isDirty && (this.persistentPlaceholder || this.isFocused || !this.hasLabel)) return [this.placeholder]\n\n      return this.internalArrayValue.map((file: File) => {\n        const {\n          name = '',\n          size = 0,\n        } = file\n\n        const truncatedText = this.truncateText(name)\n\n        return !this.showSize\n          ? truncatedText\n          : `${truncatedText} (${humanReadableFileSize(size, this.base === 1024)})`\n      })\n    },\n    base (): 1000 | 1024 | undefined {\n      return typeof this.showSize !== 'boolean' ? this.showSize : undefined\n    },\n    hasChips (): boolean {\n      return this.chips || this.smallChips\n    },\n  },\n\n  watch: {\n    readonly: {\n      handler (v) {\n        if (v === true) consoleError('readonly is not supported on <v-file-input>', this)\n      },\n      immediate: true,\n    },\n    value (v) {\n      const value = this.multiple ? v : v ? [v] : []\n      if (!deepEqual(value, this.$refs.input.files)) {\n        // When the input value is changed programatically, clear the\n        // internal input's value so that the `onInput` handler\n        // can be triggered again if the user re-selects the exact\n        // same file(s). Ideally, `input.files` should be\n        // manipulated directly but that property is readonly.\n        this.$refs.input.value = ''\n      }\n    },\n  },\n\n  methods: {\n    clearableCallback () {\n      this.internalValue = this.multiple ? [] : null\n      this.$refs.input.value = ''\n    },\n    genChips () {\n      if (!this.isDirty) return []\n\n      return this.text.map((text, index) => this.$createElement(VChip, {\n        props: { small: this.smallChips },\n        on: {\n          'click:close': () => {\n            const internalValue = this.internalValue\n            internalValue.splice(index, 1)\n            this.internalValue = internalValue // Trigger the watcher\n          },\n        },\n      }, [text]))\n    },\n    genControl () {\n      const render = VTextField.options.methods.genControl.call(this)\n\n      if (this.hideInput) {\n        render.data!.style = mergeStyles(\n          render.data!.style,\n          { display: 'none' }\n        )\n      }\n\n      return render\n    },\n    genInput () {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      input.data!.attrs!.multiple = this.multiple\n\n      // We should not be setting value\n      // programmatically on the input\n      // when it is using type=\"file\"\n      delete input.data!.domProps!.value\n\n      // This solves an issue in Safari where\n      // nothing happens when adding a file\n      // do to the input event not firing\n      // https://github.com/vuetifyjs/vuetify/issues/7941\n      delete input.data!.on!.input\n      input.data!.on!.change = this.onInput\n\n      return [this.genSelections(), input]\n    },\n    genPrependSlot () {\n      if (!this.prependIcon) return null\n\n      const icon = this.genIcon('prepend', () => {\n        this.$refs.input.click()\n      })\n\n      return this.genSlot('prepend', 'outer', [icon])\n    },\n    genSelectionText (): string[] {\n      const length = this.text.length\n\n      if (length < 2) return this.text\n      if (this.showSize && !this.counter) return [this.computedCounterValue]\n      return [this.$vuetify.lang.t(this.counterString, length)]\n    },\n    genSelections () {\n      const children = []\n\n      if (this.isDirty && this.$scopedSlots.selection) {\n        this.internalArrayValue.forEach((file: File, index: number) => {\n          if (!this.$scopedSlots.selection) return\n\n          children.push(\n            this.$scopedSlots.selection({\n              text: this.text[index],\n              file,\n              index,\n            })\n          )\n        })\n      } else {\n        children.push(this.hasChips && this.isDirty ? this.genChips() : this.genSelectionText())\n      }\n\n      return this.$createElement('div', {\n        staticClass: 'v-file-input__text',\n        class: {\n          'v-file-input__text--placeholder': this.placeholder && !this.isDirty,\n          'v-file-input__text--chips': this.hasChips && !this.$scopedSlots.selection,\n        },\n      }, children)\n    },\n    genTextFieldSlot () {\n      const node = VTextField.options.methods.genTextFieldSlot.call(this)\n\n      node.data!.on = {\n        ...(node.data!.on || {}),\n        click: () => this.$refs.input.click(),\n      }\n\n      return node\n    },\n    onInput (e: Event) {\n      const files = [...(e.target as HTMLInputElement).files || []]\n\n      this.internalValue = this.multiple ? files : files[0]\n\n      // Set initialValue here otherwise isFocused\n      // watcher in VTextField will emit a change\n      // event whenever the component is blurred\n      this.initialValue = this.internalValue\n    },\n    onKeyDown (e: KeyboardEvent) {\n      this.$emit('keydown', e)\n    },\n    truncateText (str: string) {\n      if (str.length < Number(this.truncateLength)) return str\n      const charsKeepOneSide = Math.floor((Number(this.truncateLength) - 1) / 2)\n      return `${str.slice(0, charsKeepOneSide)}…${str.slice(str.length - charsKeepOneSide)}`\n    },\n  },\n})\n"]},"metadata":{},"sourceType":"module"}