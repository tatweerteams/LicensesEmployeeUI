{"ast":null,"code":"import _objectSpread from \"D:/repo Tatweer/tatweerteams/CheckbooksOrderingUI/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport { EventBus } from \"../../../eventBus.js\";\nimport { mapActions } from \"vuex\";\nimport { createHelpers } from \"vuex-map-fields\";\nvar _createHelpers = createHelpers({\n    getterType: \"getDataFields\",\n    mutationType: \"updateDataField\"\n  }),\n  mapFields = _createHelpers.mapFields;\nimport { validationInput } from \"../../../models/validationInput.js\";\nimport * as enums from \"../../../models/enum.js\";\nexport default {\n  name: \"insert-Or-Update\",\n  props: {\n    updateItemProp: {},\n    dialogProp: {}\n  },\n  components: {},\n  data: function data() {\n    return {\n      dialog: false,\n      valid: false,\n      validationInput: validationInput,\n      enumModel: enums,\n      isLoadingBranch: false,\n      selectedBranch: null,\n      searchBranch: null,\n      filterBranchData: {\n        branchRegionId: null,\n        nameOrNumber: null\n      },\n      isLoadingRegion: false,\n      selectedRegion: null,\n      searchRegion: null,\n      filterRegionData: {\n        regionName: null\n      }\n    };\n  },\n  computed: _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, mapFields(\"branchStore\", {\n    note: \"editedItem.note\",\n    orderRequestId: \"editedItem.id\",\n    branchId: \"editedItem.branchId\",\n    orderRequestType: \"editedItem.orderRequestType\"\n  })), mapFields(\"bankRegionStore\", {\n    regions: \"activeBankRegions\"\n  })), mapFields(\"branchStore\", {\n    branchs: \"activeBranchs\"\n  })), {}, {\n    formTitle: function formTitle() {\n      return this.orderRequestId ? \"تعديل بيانات الطلب\" : \"إضافة طلب جديد\";\n    },\n    isInsert: function isInsert() {\n      return !this.orderRequestId;\n    }\n  }),\n  watch: {\n    updateItemProp: {\n      handler: function handler(data) {\n        if (data) this.editSelected(data);\n      },\n      immediate: true\n    },\n    searchRegion: function searchRegion(val) {\n      this.filterRegionData.regionName = val;\n    },\n    searchBranch: function searchBranch(val) {\n      // if(this.isLoadingBranch) return;\n      this.filterBranchData.nameOrNumber = val;\n    } // selectedRegion(val) {\n    //   if (!val) this.clearBranchData();\n    // },\n  },\n  methods: _objectSpread(_objectSpread({}, mapActions({\n    ClearDataItemStore: \"orderRequestStore/ClearDataItem\",\n    SetDataUpdateStore: \"orderRequestStore/SetDataUpdate\",\n    InsertOrderRequest: \"orderRequestStore/InsertOrderRequest\",\n    UpdateOrderRequest: \"orderRequestStore/UpdateOrderRequest\",\n    GetActiveBankRegions: \"bankRegionStore/GetActiveBankRegions\",\n    SetBankRegionItemList: \"bankRegionStore/SetBankRegionItemList\",\n    GetActiveBranchs: \"branchStore/GetActiveBranchs\",\n    SetBranchItemList: \"branchStore/SetBranchItemList\"\n  })), {}, {\n    openDialog: function openDialog() {\n      this.dialog = true;\n      this.getBankRegions();\n    },\n    getBranchByRegionId: function getBranchByRegionId() {\n      var _this$selectedRegion;\n      this.filterBranchData.branchRegionId = (_this$selectedRegion = this.selectedRegion) === null || _this$selectedRegion === void 0 ? void 0 : _this$selectedRegion.bankRegionId;\n      this.getBranchs();\n    },\n    searchBranchRegion: function searchBranchRegion() {\n      this.getBankRegions();\n    },\n    getBankRegions: function getBankRegions() {\n      var _this = this;\n      this.isLoadingRegion = true;\n      this.GetActiveBankRegions(this.filterRegionData).then(function () {\n        _this.isLoadingRegion = false;\n      }).catch(function (error) {\n        _this.notify(\"\".concat(error), \"#1d262d\");\n        _this.isLoadingRegion = false;\n      });\n    },\n    clearRegionData: function clearRegionData() {\n      this.isLoadingRegion = false;\n      this.regions = [];\n      this.selectedRegion = null;\n      this.searchRegion = null;\n      this.filterRegionData.bankId = null;\n      this.filterRegionData.regionName = null;\n    },\n    clearBranchData: function clearBranchData() {\n      this.isLoadingBranch = false;\n      this.branchs = [];\n      this.selectedBranch = null;\n      this.searchBranch = null;\n      this.filterBranchData.nameOrNumber = null;\n      this.filterBranchData.branchRegionId = null;\n    },\n    getBranchs: function getBranchs() {\n      var _this2 = this;\n      if (!this.selectedRegion) return;\n      this.isLoadingBranch = true;\n      this.GetActiveBranchs(this.filterBranchData).then(function () {\n        _this2.isLoadingBranch = false;\n      }).catch(function (error) {\n        _this2.notify(\"\".concat(error), \"#1d262d\");\n        _this2.isLoadingBranch = false;\n      });\n    },\n    editSelected: function editSelected(item) {\n      this._selectedBranchEdit(item);\n      this._selectedBankRegionEdit(item);\n      this.SetDataUpdateStore(item);\n      this.dialog = true;\n    },\n    _selectedBranchEdit: function _selectedBranchEdit(item) {\n      if (item.branchId && item.branchName) {\n        this.SetBranchItemList({\n          name: item.branchName,\n          id: item.branchId\n        });\n        this.selectedBranch = this.branchs.find(function (pred) {\n          return pred.id == item.branchId;\n        });\n      }\n    },\n    _selectedBankRegionEdit: function _selectedBankRegionEdit(item) {\n      if (item.branchRegionId && item.regionName) {\n        this.SetBankRegionItemList({\n          regionName: item.regionName,\n          bankRegionId: item.branchRegionId\n        });\n        this.selectedRegion = this.regions.find(function (pred) {\n          return pred.bankRegionId == item.branchRegionId;\n        });\n      }\n    },\n    close: function close() {\n      var _this3 = this;\n      this.dialog = false;\n      setTimeout(function () {\n        _this3.ClearDataItemStore();\n        _this3.clearBranchData();\n        _this3.clearRegionData();\n      }, 300);\n      this.resetValidation();\n      EventBus.$emit(\"closeDialogUpdateOrderRequest\");\n    },\n    save: function save() {\n      if (this.orderRequestId) {\n        this.updateOrderRequest();\n      } else {\n        this.insertOrderRequest();\n      }\n    },\n    insertOrderRequest: function insertOrderRequest() {\n      var _this$selectedBranch$,\n        _this$selectedBranch,\n        _this4 = this;\n      this.branchId = (_this$selectedBranch$ = (_this$selectedBranch = this.selectedBranch) === null || _this$selectedBranch === void 0 ? void 0 : _this$selectedBranch.id) !== null && _this$selectedBranch$ !== void 0 ? _this$selectedBranch$ : null;\n      this.$store.dispatch(\"loading\", true);\n      this.InsertOrderRequest().then(function (res) {\n        _this4.notify(\"\".concat(res), \"#1d262d\");\n        EventBus.$emit(\"refreshData\");\n        _this4.close();\n      }).catch(function (error) {\n        _this4.notify(\"\".concat(error), \"#1d262d\");\n        _this4.$store.dispatch(\"loading\", false);\n      });\n    },\n    updateOrderRequest: function updateOrderRequest() {\n      var _this$selectedBranch$2,\n        _this$selectedBranch2,\n        _this5 = this;\n      this.branchId = (_this$selectedBranch$2 = (_this$selectedBranch2 = this.selectedBranch) === null || _this$selectedBranch2 === void 0 ? void 0 : _this$selectedBranch2.id) !== null && _this$selectedBranch$2 !== void 0 ? _this$selectedBranch$2 : null;\n      this.$store.dispatch(\"loading\", true);\n      this.UpdateOrderRequest().then(function (res) {\n        _this5.notify(\"\".concat(res), \"#1d262d\");\n        EventBus.$emit(\"refreshData\");\n        _this5.close();\n      }).catch(function (error) {\n        _this5.notify(\"\".concat(error), \"#1d262d\");\n        _this5.$store.dispatch(\"loading\", false);\n      });\n    },\n    resetValidation: function resetValidation() {\n      var _this$$refs$formOrder;\n      (_this$$refs$formOrder = this.$refs.formOrderRequest) === null || _this$$refs$formOrder === void 0 ? void 0 : _this$$refs$formOrder.reset();\n    },\n    notify: function notify(text, color) {\n      this.$store.commit(\"showMessage\", {\n        text: text,\n        color: color\n      });\n    }\n  })\n};","map":{"version":3,"mappings":";;;AAkIA;AACA;AACA;AACA;IACAA;IACAC;EACA;EAHAC;AAKA;AACA;AACA;EACAC;EACAC;IACAC;IACAC;EACA;EACAC;EAEAC;IAAA;MACAC;MACAC;MACAC;MACAC;MAEAC;MACAC;MACAC;MACAC;QACAC;QACAC;MACA;MAEAC;MACAC;MACAC;MACAC;QACAC;MACA;IACA;EAAA;EAEAC,sEACAtB;IACAuB;IACAC;IACAC;IACAC;EACA,KAEA1B;IACA2B;EACA,KAEA3B;IACA4B;EACA;IAEAC;MACA;IACA;IAEAC;MACA;IACA;EAAA,EACA;EAEAC;IACA5B;MACA6B;QACA;MACA;MACAC;IACA;IACAd;MACA;IACA;IAEAN;MACA;MACA;IACA,EAEA;IACA;IACA;EACA;EACAqB,yCACAC;IACAC;IACAC;IACAC;IACAC;IAEAC;IACAC;IAEAC;IACAC;EACA;IACAC;MACA;MACA;IACA;IAEAC;MAAA;MACA;MACA;IACA;IAEAC;MACA;IACA;IAEAC;MAAA;MACA;MACA,iDACAC;QACA;MACA,GACAC;QACA;QACA;MACA;IACA;IAEAC;MACA;MACA;MACA;MACA;MACA;MACA;IACA;IACAC;MACA;MACA;MACA;MACA;MACA;MACA;IACA;IAEAC;MAAA;MACA;MAEA;MACA,6CACAJ;QACA;MACA,GACAC;QACA;QACA;MACA;IACA;IAEAI;MACA;MACA;MACA;MAEA;IACA;IAEAC;MACA;QACA;UACArD;UACAsD;QACA;QAEA,wCACA;UAAA;QAAA,EACA;MACA;IACA;IACAC;MACA;QACA;UACAnC;UACAoC;QACA;QAEA,wCACA;UAAA;QAAA,EACA;MACA;IACA;IAEAC;MAAA;MACA;MACAC;QACA;QACA;QACA;MACA;MACA;MACAC;IACA;IAEAC;MACA;QACA;MACA;QACA;MACA;IACA;IAEAC;MAAA;QAAA;QAAA;MACA;MACA;MACA,0BACAd;QACA;QACAY;QACA;MACA,GACAX;QACA;QACA;MACA;IACA;IAEAc;MAAA;QAAA;QAAA;MACA;MACA;MACA,0BACAf;QACA;QACAY;QACA;MACA,GACAX;QACA;QACA;MACA;IACA;IAEAe;MAAA;MACA;IACA;IAEAC;MACA;QAAAC;QAAAC;MAAA;IACA;EAAA;AAEA","names":["getterType","mutationType","mapFields","name","props","updateItemProp","dialogProp","components","data","dialog","valid","validationInput","enumModel","isLoadingBranch","selectedBranch","searchBranch","filterBranchData","branchRegionId","nameOrNumber","isLoadingRegion","selectedRegion","searchRegion","filterRegionData","regionName","computed","note","orderRequestId","branchId","orderRequestType","regions","branchs","formTitle","isInsert","watch","handler","immediate","methods","mapActions","ClearDataItemStore","SetDataUpdateStore","InsertOrderRequest","UpdateOrderRequest","GetActiveBankRegions","SetBankRegionItemList","GetActiveBranchs","SetBranchItemList","openDialog","getBranchByRegionId","searchBranchRegion","getBankRegions","then","catch","clearRegionData","clearBranchData","getBranchs","editSelected","_selectedBranchEdit","id","_selectedBankRegionEdit","bankRegionId","close","setTimeout","EventBus","save","insertOrderRequest","updateOrderRequest","resetValidation","notify","text","color"],"sourceRoot":"src/views/OrderRequest/Components","sources":["InsertOrUpdateComponent.vue"],"sourcesContent":["<template>\r\n  <v-dialog v-model=\"dialog\" max-width=\"800px\" persistent>\r\n    <template v-slot:activator=\"{ on }\">\r\n      <template>\r\n        <v-btn\r\n          color=\"#536DFE\"\r\n          class=\"white--text \"\r\n          @click=\"openDialog\"\r\n          v-on=\"on\"\r\n          elevation=\"5\"\r\n        >\r\n          <v-icon class=\"ml-2\">mdi-plus-circle</v-icon\r\n          ><span>إضافة طلب جديد</span>\r\n        </v-btn>\r\n      </template>\r\n    </template>\r\n    <v-card>\r\n      <v-card-title>\r\n        <span class=\"headline\">{{ formTitle }}</span>\r\n      </v-card-title>\r\n\r\n      <v-divider></v-divider>\r\n\r\n      <v-card-text>\r\n        <v-container>\r\n          <v-form ref=\"formOrderRequest\" v-model=\"valid\">\r\n            <v-row>\r\n              <v-col cols=\"12\" sm=\"6\">\r\n                <v-text-field\r\n                  prepend-icon=\"location_city\"\r\n                  v-model=\"note\"\r\n                  dense\r\n                  :rules=\"\r\n                    note\r\n                      ? [\r\n                          validationInput.isEmpty,\r\n                          validationInput.isArabic,\r\n                          validationInput.minLength,\r\n                          validationInput.currectInput,\r\n                        ]\r\n                      : []\r\n                  \"\r\n                  label=\"مــلاحــظة\"\r\n                  maxLength=\"50\"\r\n                ></v-text-field>\r\n              </v-col>\r\n              <v-col cols=\"12\" sm=\"6\">\r\n                <v-autocomplete\r\n                  v-model=\"selectedRegion\"\r\n                  :items=\"regions\"\r\n                  :loading=\"isLoadingRegion\"\r\n                  single-line\r\n                  :search-input.sync=\"searchRegion\"\r\n                  item-text=\"regionName\"\r\n                  item-value=\"bankRegionId \"\r\n                  label=\"اختر المنطقة\"\r\n                  placeholder=\"بحث عن طريق المنطفة\"\r\n                  return-object\r\n                  :rules=\"isInsert ? [validationInput.selectedValidation] : []\"\r\n                  required\r\n                  no-data-text=\"قم بالبحث عن منطقة\"\r\n                  clearable\r\n                  @keyup=\"getBankRegions\"\r\n                  @change=\"getBranchByRegionId\"\r\n                  dense\r\n                  prepend-icon=\"mdi-map-marker\"\r\n                ></v-autocomplete>\r\n              </v-col>\r\n              <v-col cols=\"12\" sm=\"6\">\r\n                <v-autocomplete\r\n                  v-model=\"selectedBranch\"\r\n                  :items=\"branchs\"\r\n                  :loading=\"isLoadingBranch\"\r\n                  single-line\r\n                  :search-input.sync=\"searchBranch\"\r\n                  item-text=\"name\"\r\n                  item-value=\"id\"\r\n                  label=\"اختر الفرع\"\r\n                  placeholder=\"بحث عن طريق الفرع\"\r\n                  return-object\r\n                  no-data-text=\"لايوجد بيانات\"\r\n                  clearable\r\n                  @keyup=\"getBranchs\"\r\n                  prepend-icon=\"mdi-bank\"\r\n                  dense\r\n                  :rules=\"isInsert ? [validationInput.selectedValidation] : []\"\r\n                  required\r\n                ></v-autocomplete>\r\n              </v-col>\r\n              <v-col cols=\"12\" sm=\"6\">\r\n                <v-select\r\n                  v-model=\"orderRequestType\"\r\n                  :items=\"enumModel.OrderRequestTypeList\"\r\n                  label=\"اختر نوع الطلب\"\r\n                  item-text=\"name\"\r\n                  item-value=\"id\"\r\n                  dense\r\n                  :rules=\"[validationInput.selectedValidation]\"\r\n                  clearable\r\n                  persistent-hint\r\n                  prepend-icon=\"mdi-account-search\"\r\n                ></v-select>\r\n              </v-col>\r\n            </v-row>\r\n          </v-form>\r\n        </v-container>\r\n      </v-card-text>\r\n\r\n      <v-card-actions>\r\n        <div style=\"width: 100%;text-align: center;\">\r\n          <v-btn\r\n            @click=\"save\"\r\n            class=\"mx-2 white--text\"\r\n            :disabled=\"!valid\"\r\n            color=\"#536DFE\"\r\n          >\r\n            <v-icon>save</v-icon>\r\n            <span>حفظ البيانات</span>\r\n          </v-btn>\r\n          <v-btn class=\"mx-2 white--text\" @click=\"close\" color=\"#E91D62\">\r\n            <v-icon dark>clear</v-icon>\r\n            <span>إلغاء</span>\r\n          </v-btn>\r\n        </div>\r\n      </v-card-actions>\r\n    </v-card>\r\n  </v-dialog>\r\n</template>\r\n\r\n<script>\r\nimport { EventBus } from \"../../../eventBus.js\";\r\nimport { mapActions } from \"vuex\";\r\nimport { createHelpers } from \"vuex-map-fields\";\r\nconst { mapFields } = createHelpers({\r\n  getterType: \"getDataFields\",\r\n  mutationType: \"updateDataField\",\r\n});\r\n\r\nimport { validationInput } from \"../../../models/validationInput.js\";\r\nimport * as enums from \"../../../models/enum.js\";\r\nexport default {\r\n  name: \"insert-Or-Update\",\r\n  props: {\r\n    updateItemProp: {},\r\n    dialogProp: {},\r\n  },\r\n  components: {},\r\n\r\n  data: () => ({\r\n    dialog: false,\r\n    valid: false,\r\n    validationInput: validationInput,\r\n    enumModel: enums,\r\n\r\n    isLoadingBranch: false,\r\n    selectedBranch: null,\r\n    searchBranch: null,\r\n    filterBranchData: {\r\n      branchRegionId: null,\r\n      nameOrNumber: null,\r\n    },\r\n\r\n    isLoadingRegion: false,\r\n    selectedRegion: null,\r\n    searchRegion: null,\r\n    filterRegionData: {\r\n      regionName: null,\r\n    },\r\n  }),\r\n\r\n  computed: {\r\n    ...mapFields(\"branchStore\", {\r\n      note: \"editedItem.note\",\r\n      orderRequestId: \"editedItem.id\",\r\n      branchId: \"editedItem.branchId\",\r\n      orderRequestType: \"editedItem.orderRequestType\",\r\n    }),\r\n\r\n    ...mapFields(\"bankRegionStore\", {\r\n      regions: \"activeBankRegions\",\r\n    }),\r\n\r\n    ...mapFields(\"branchStore\", {\r\n      branchs: \"activeBranchs\",\r\n    }),\r\n\r\n    formTitle() {\r\n      return this.orderRequestId ? \"تعديل بيانات الطلب\" : \"إضافة طلب جديد\";\r\n    },\r\n\r\n    isInsert() {\r\n      return !this.orderRequestId;\r\n    },\r\n  },\r\n\r\n  watch: {\r\n    updateItemProp: {\r\n      handler(data) {\r\n        if (data) this.editSelected(data);\r\n      },\r\n      immediate: true,\r\n    },\r\n    searchRegion(val) {\r\n      this.filterRegionData.regionName = val;\r\n    },\r\n\r\n    searchBranch(val) {\r\n      // if(this.isLoadingBranch) return;\r\n      this.filterBranchData.nameOrNumber = val;\r\n    },\r\n\r\n    // selectedRegion(val) {\r\n    //   if (!val) this.clearBranchData();\r\n    // },\r\n  },\r\n  methods: {\r\n    ...mapActions({\r\n      ClearDataItemStore: \"orderRequestStore/ClearDataItem\",\r\n      SetDataUpdateStore: \"orderRequestStore/SetDataUpdate\",\r\n      InsertOrderRequest: \"orderRequestStore/InsertOrderRequest\",\r\n      UpdateOrderRequest: \"orderRequestStore/UpdateOrderRequest\",\r\n\r\n      GetActiveBankRegions: \"bankRegionStore/GetActiveBankRegions\",\r\n      SetBankRegionItemList: \"bankRegionStore/SetBankRegionItemList\",\r\n\r\n      GetActiveBranchs: \"branchStore/GetActiveBranchs\",\r\n      SetBranchItemList: \"branchStore/SetBranchItemList\",\r\n    }),\r\n    openDialog() {\r\n      this.dialog = true;\r\n      this.getBankRegions();\r\n    },\r\n\r\n    getBranchByRegionId() {\r\n      this.filterBranchData.branchRegionId = this.selectedRegion?.bankRegionId;\r\n      this.getBranchs();\r\n    },\r\n\r\n    searchBranchRegion() {\r\n      this.getBankRegions();\r\n    },\r\n\r\n    getBankRegions() {\r\n      this.isLoadingRegion = true;\r\n      this.GetActiveBankRegions(this.filterRegionData)\r\n        .then(() => {\r\n          this.isLoadingRegion = false;\r\n        })\r\n        .catch((error) => {\r\n          this.notify(`${error}`, \"#1d262d\");\r\n          this.isLoadingRegion = false;\r\n        });\r\n    },\r\n\r\n    clearRegionData() {\r\n      this.isLoadingRegion = false;\r\n      this.regions = [];\r\n      this.selectedRegion = null;\r\n      this.searchRegion = null;\r\n      this.filterRegionData.bankId = null;\r\n      this.filterRegionData.regionName = null;\r\n    },\r\n    clearBranchData() {\r\n      this.isLoadingBranch = false;\r\n      this.branchs = [];\r\n      this.selectedBranch = null;\r\n      this.searchBranch = null;\r\n      this.filterBranchData.nameOrNumber = null;\r\n      this.filterBranchData.branchRegionId = null;\r\n    },\r\n\r\n    getBranchs() {\r\n      if (!this.selectedRegion) return;\r\n\r\n      this.isLoadingBranch = true;\r\n      this.GetActiveBranchs(this.filterBranchData)\r\n        .then(() => {\r\n          this.isLoadingBranch = false;\r\n        })\r\n        .catch((error) => {\r\n          this.notify(`${error}`, \"#1d262d\");\r\n          this.isLoadingBranch = false;\r\n        });\r\n    },\r\n\r\n    editSelected(item) {\r\n      this._selectedBranchEdit(item);\r\n      this._selectedBankRegionEdit(item);\r\n      this.SetDataUpdateStore(item);\r\n   \r\n      this.dialog = true;\r\n    },\r\n\r\n    _selectedBranchEdit(item) {\r\n      if (item.branchId && item.branchName) {\r\n        this.SetBranchItemList({\r\n          name: item.branchName,\r\n          id: item.branchId,\r\n        });\r\n\r\n        this.selectedBranch = this.branchs.find(\r\n          (pred) => pred.id == item.branchId\r\n        );\r\n      }\r\n    },\r\n    _selectedBankRegionEdit(item) {\r\n      if (item.branchRegionId && item.regionName) {\r\n        this.SetBankRegionItemList({\r\n          regionName: item.regionName,\r\n          bankRegionId: item.branchRegionId,\r\n        });\r\n\r\n        this.selectedRegion = this.regions.find(\r\n          (pred) => pred.bankRegionId == item.branchRegionId\r\n        );\r\n      }\r\n    },\r\n\r\n    close() {\r\n      this.dialog = false;\r\n      setTimeout(() => {\r\n        this.ClearDataItemStore();\r\n        this.clearBranchData();\r\n        this.clearRegionData();\r\n      }, 300);\r\n      this.resetValidation();\r\n      EventBus.$emit(\"closeDialogUpdateOrderRequest\");\r\n    },\r\n\r\n    save() {\r\n      if (this.orderRequestId) {\r\n        this.updateOrderRequest();\r\n      } else {\r\n        this.insertOrderRequest();\r\n      }\r\n    },\r\n\r\n    insertOrderRequest() {\r\n      this.branchId = this.selectedBranch?.id ?? null;\r\n      this.$store.dispatch(\"loading\", true);\r\n      this.InsertOrderRequest()\r\n        .then((res) => {\r\n          this.notify(`${res}`, \"#1d262d\");\r\n          EventBus.$emit(\"refreshData\");\r\n          this.close();\r\n        })\r\n        .catch((error) => {\r\n          this.notify(`${error}`, \"#1d262d\");\r\n          this.$store.dispatch(\"loading\", false);\r\n        });\r\n    },\r\n\r\n    updateOrderRequest() {\r\n      this.branchId = this.selectedBranch?.id ?? null;\r\n      this.$store.dispatch(\"loading\", true);\r\n      this.UpdateOrderRequest()\r\n        .then((res) => {\r\n          this.notify(`${res}`, \"#1d262d\");\r\n          EventBus.$emit(\"refreshData\");\r\n          this.close();\r\n        })\r\n        .catch((error) => {\r\n          this.notify(`${error}`, \"#1d262d\");\r\n          this.$store.dispatch(\"loading\", false);\r\n        });\r\n    },\r\n\r\n    resetValidation() {\r\n      this.$refs.formOrderRequest?.reset();\r\n    },\r\n\r\n    notify(text, color) {\r\n      this.$store.commit(\"showMessage\", { text: text, color: color });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style></style>\r\n"]},"metadata":{},"sourceType":"module"}