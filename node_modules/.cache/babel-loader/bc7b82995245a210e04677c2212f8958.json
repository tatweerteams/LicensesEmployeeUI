{"ast":null,"code":"// import { EventBus } from \"../../../eventBus.js\";\nimport { validationInput } from \"../../../models/validationInput.js\";\nimport { mapActions } from \"vuex\";\nimport { createHelpers } from \"vuex-map-fields\";\nconst {\n  mapFields\n} = createHelpers({\n  getterType: \"getDataFields\",\n  mutationType: \"updateDataField\"\n});\nexport default {\n  name: \"insert-Or-Update\",\n  props: {\n    updateItemProp: {},\n    dialogProp: {}\n  },\n  data: () => ({\n    dialog: false,\n    valid: false,\n    validationInput: validationInput\n  }),\n  computed: {\n    ...mapFields(\"regionStore\", {\n      regionNo: \"editedItem.regionNumber\",\n      regionId: \"editedItem.regionId\",\n      regionName: \"editedItem.regionName\"\n    }),\n    formTitle() {\n      return !this.regionId ? \"إضافة منطقة جديدة\" : \"تعديل بيانات المنطقة\";\n    }\n  },\n  watch: {\n    dialogProp: {\n      handler(data) {\n        this.dialog = data;\n      },\n      immediate: true\n    },\n    updateItemProp: {\n      handler(data) {\n        if (data) this.editSelected(data);\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    ...mapActions({\n      InsertRegionStore: \"regionStore/InsertRegion\",\n      // ClearDataItemStore: \"regionStore/ClearDataItem\",\n      UpdateRegionStore: \"regionStore/UpdateRegion\",\n      SetDataUpdateStore: \"regionStore/SetDataUpdate\"\n    }),\n    openDialog() {\n      this.dialog = true;\n    },\n    editSelected(item) {\n      // console.log(item)\n      this.SetDataUpdateStore(item);\n\n      // this.regionNo=item.regionNumber;\n      // this.regionId=item.regionId;\n      // this.regionName=item.regionName;\n      this.dialog = true;\n    },\n    close() {\n      this.dialog = false;\n      setTimeout(() => {\n        this.ClearDataItemStore();\n        this.resetValidation();\n      }, 300);\n      // this.$emit(\"close-Dialog-Update\");\n      // EventBus.$emit(\"closeDialogUpdateRegion\");\n    },\n\n    save() {\n      if (this.regionId) {\n        this.updateRegion();\n      } else {\n        this.insertRegion();\n      }\n    },\n    insertRegion() {\n      this.$store.dispatch(\"loading\", true);\n      this.InsertRegionStore().then(res => {\n        this.notify(`${res}`, \"#1d262d\");\n        this.$emit(\"refresh-data\");\n        this.close();\n      }).catch(error => {\n        this.notify(`${error}`, \"#1d262d\");\n        this.$store.dispatch(\"loading\", false);\n      });\n    },\n    updateRegion() {\n      this.$store.dispatch(\"loading\", true);\n      this.UpdateRegionStore().then(res => {\n        this.notify(`${res}`, \"#1d262d\");\n        this.$emit(\"refresh-data\");\n        this.close();\n      }).catch(error => {\n        this.notify(`${error}`, \"#1d262d\");\n        this.$store.dispatch(\"loading\", false);\n      });\n    },\n    resetValidation() {\n      this.$refs.formRegion?.reset();\n    },\n    notify(text, color) {\n      this.$store.commit(\"showMessage\", {\n        text: text,\n        color: color\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"AAkFA;AACA;AACA;AACA;AACA;EAAAA;AAAA;EACAC;EACAC;AACA;AACA;EACAC;EACAC;IACAC;IACAC;EACA;EAEAC;IACAC;IACAC;IACAC;EACA;EAEAC;IACA;MACAC;MACAC;MACAC;IACA;IACAC;MACA;IACA;EACA;EAEAC;IACAV;MACAW;QACA;MACA;MACAC;IACA;IAEAb;MACAY;QACA;MACA;MACAC;IACA;EACA;EACAC;IACA;MACAC;MACA;MACAC;MACAC;IACA;IACAC;MACA;IACA;IAEAC;MACA;MACA;;MAEA;MACA;MACA;MACA;IACA;IAEAC;MACA;MACAC;QACA;QACA;MACA;MACA;MACA;IACA;;IAEAC;MACA;QACA;MACA;QAEA;MACA;IACA;IAEAC;MACA;MACA,yBACAC;QACA;QACA;QACA;MACA,GACAC;QACA;QACA;MACA;IACA;IACAC;MACA;MACA,yBACAF;QACA;QACA;QACA;MACA,GACAC;QACA;QACA;MACA;IACA;IAEAE;MACA;IACA;IAEAC;MACA;QAAAC;QAAAC;MAAA;IACA;EACA;AACA","names":["mapFields","getterType","mutationType","name","props","updateItemProp","dialogProp","data","dialog","valid","validationInput","computed","regionNo","regionId","regionName","formTitle","watch","handler","immediate","methods","InsertRegionStore","UpdateRegionStore","SetDataUpdateStore","openDialog","editSelected","close","setTimeout","save","insertRegion","then","catch","updateRegion","resetValidation","notify","text","color"],"sourceRoot":"src/views/Region/Components","sources":["InsertOrUpdateComponents.vue"],"sourcesContent":["<template>\r\n  <v-dialog v-model=\"dialog\" max-width=\"600px\" persistent>\r\n    <template v-slot:activator=\"{ on }\">\r\n      <template>\r\n        <v-btn\r\n          color=\"#536DFE\"\r\n          class=\"white--text \"\r\n          @click=\"openDialog\"\r\n          v-on=\"on\"\r\n          elevation=\"5\"\r\n        >\r\n          <v-icon class=\"ml-2\">mdi-plus-circle</v-icon><span> إضافة منطقة</span>\r\n        </v-btn>\r\n      </template>\r\n    </template>\r\n    <v-card>\r\n      <v-card-title>\r\n        <span class=\"headline\">{{ formTitle }}</span>\r\n      </v-card-title>\r\n\r\n      <v-divider></v-divider>\r\n\r\n      <v-card-text>\r\n        <v-container>\r\n          <v-form ref=\"formRegion\" v-model=\"valid\">\r\n            <v-row>\r\n              <v-col cols=\"12\">\r\n                <v-text-field\r\n                  prepend-icon=\"location_city\"\r\n                  v-model=\"regionNo\"\r\n                  label=\"رقم المنطقة\"\r\n                  :rules=\"[\r\n                    validationInput.isEmpty,\r\n                    validationInput.numberOnly,\r\n                    validationInput.numberNotZero,\r\n                  ]\"\r\n                  required\r\n                  maxLength=\"4\"\r\n                ></v-text-field>\r\n              </v-col>\r\n              <v-col cols=\"12\">\r\n                <v-text-field\r\n                  prepend-icon=\"location_city\"\r\n                  v-model=\"regionName\"\r\n                  label=\"إسم المنطقة\"\r\n                  :rules=\"[\r\n                    validationInput.isEmpty,\r\n                    validationInput.isArabic,\r\n                    validationInput.currectInput,\r\n                    validationInput.minLength,\r\n                  ]\"\r\n                  maxLength=\"30\"\r\n                  required\r\n                ></v-text-field>\r\n              </v-col>\r\n            </v-row>\r\n          </v-form>\r\n        </v-container>\r\n      </v-card-text>\r\n\r\n      <v-card-actions>\r\n        <div style=\"width: 100%;text-align: center;\">\r\n          <v-btn\r\n            @click=\"save\"\r\n            :disabled=\"!valid\"\r\n            class=\"mx-2 white--text\"\r\n            color=\"#536DFE\"\r\n          >\r\n            <v-icon>save</v-icon>\r\n            <span>حفظ البيانات</span>\r\n          </v-btn>\r\n          <v-btn @click=\"close\" class=\"mx-2 white--text\" color=\"#E91D62\">\r\n            <v-icon style=\"font-size: 19px;\" dark>clear</v-icon>\r\n            <span>إلغاء</span>\r\n          </v-btn>\r\n        </div>\r\n      </v-card-actions>\r\n    </v-card>\r\n  </v-dialog>\r\n</template>\r\n\r\n<script>\r\n// import { EventBus } from \"../../../eventBus.js\";\r\nimport { validationInput } from \"../../../models/validationInput.js\";\r\nimport { mapActions } from \"vuex\";\r\nimport { createHelpers } from \"vuex-map-fields\";\r\nconst { mapFields } = createHelpers({\r\n  getterType: \"getDataFields\",\r\n  mutationType: \"updateDataField\",\r\n});\r\nexport default {\r\n  name: \"insert-Or-Update\",\r\n  props: {\r\n    updateItemProp: {},\r\n    dialogProp: {},\r\n  },\r\n\r\n  data: () => ({\r\n    dialog: false,\r\n    valid: false,\r\n    validationInput: validationInput,\r\n  }),\r\n\r\n  computed: {\r\n    ...mapFields(\"regionStore\", {\r\n      regionNo: \"editedItem.regionNumber\",\r\n      regionId: \"editedItem.regionId\",\r\n      regionName: \"editedItem.regionName\",\r\n    }),\r\n    formTitle() {\r\n      return !this.regionId ? \"إضافة منطقة جديدة\" : \"تعديل بيانات المنطقة\";\r\n    },\r\n  },\r\n\r\n  watch: {\r\n    dialogProp: {\r\n      handler(data) {\r\n        this.dialog = data;\r\n      },\r\n      immediate: true,\r\n    },\r\n\r\n    updateItemProp: {\r\n      handler(data) {\r\n        if (data) this.editSelected(data);\r\n      },\r\n      immediate: true,\r\n    },\r\n  },\r\n  methods: {\r\n    ...mapActions({\r\n      InsertRegionStore: \"regionStore/InsertRegion\",\r\n      // ClearDataItemStore: \"regionStore/ClearDataItem\",\r\n      UpdateRegionStore: \"regionStore/UpdateRegion\",\r\n      SetDataUpdateStore: \"regionStore/SetDataUpdate\",\r\n    }),\r\n    openDialog() {\r\n      this.dialog = true;\r\n    },\r\n\r\n    editSelected(item) {\r\n      // console.log(item)\r\n      this.SetDataUpdateStore(item);\r\n\r\n      // this.regionNo=item.regionNumber;\r\n      // this.regionId=item.regionId;\r\n      // this.regionName=item.regionName;\r\n      this.dialog = true;\r\n    },\r\n\r\n    close() {\r\n      this.dialog = false;\r\n      setTimeout(() => {\r\n        this.ClearDataItemStore();\r\n        this.resetValidation();\r\n      }, 300);\r\n      // this.$emit(\"close-Dialog-Update\");\r\n      // EventBus.$emit(\"closeDialogUpdateRegion\");\r\n    },\r\n\r\n    save() {\r\n      if (this.regionId) {\r\n        this.updateRegion();\r\n      } else {\r\n        \r\n        this.insertRegion();\r\n      }\r\n    },\r\n\r\n    insertRegion() {\r\n      this.$store.dispatch(\"loading\", true);\r\n      this.InsertRegionStore()\r\n        .then((res) => {\r\n          this.notify(`${res}`, \"#1d262d\");\r\n          this.$emit(\"refresh-data\");\r\n          this.close();\r\n        })\r\n        .catch((error) => {\r\n          this.notify(`${error}`, \"#1d262d\");\r\n          this.$store.dispatch(\"loading\", false);\r\n        });\r\n    },\r\n    updateRegion() {\r\n      this.$store.dispatch(\"loading\", true);\r\n      this.UpdateRegionStore()\r\n        .then((res) => {\r\n          this.notify(`${res}`, \"#1d262d\");\r\n          this.$emit(\"refresh-data\");\r\n          this.close();\r\n        })\r\n        .catch((error) => {\r\n          this.notify(`${error}`, \"#1d262d\");\r\n          this.$store.dispatch(\"loading\", false);\r\n        });\r\n    },\r\n\r\n    resetValidation() {\r\n      this.$refs.formRegion?.reset();\r\n    },\r\n\r\n    notify(text, color) {\r\n      this.$store.commit(\"showMessage\", { text: text, color: color });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style></style>\r\n"]},"metadata":{},"sourceType":"module"}