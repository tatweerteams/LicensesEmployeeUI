{"ast":null,"code":"import _toConsumableArray from \"D:/repo Tatweer/tatweerteams/CheckbooksOrderingUI/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _objectSpread from \"D:/repo Tatweer/tatweerteams/CheckbooksOrderingUI/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport { mapActions } from \"vuex\";\nexport default {\n  data: function data() {\n    return {\n      banks: [],\n      regions: [],\n      activeBranchs: [],\n      filterData: {\n        nameOrNumber: null,\n        bankId: null,\n        accountType: 0,\n        bankRegionId: \"\",\n        branchId: \"\",\n        pageNo: 1,\n        pageSize: 30\n      },\n      accountTypeOptions: [{\n        text: \"افراد\",\n        value: 1\n      }, {\n        text: \"شركات\",\n        value: 2\n      }],\n      filterBankData: {\n        bankName: null\n      },\n      selectAccountType: 0,\n      selectedBank: null,\n      searchBank: null,\n      searchBranch: null,\n      isLoading: false,\n      searchName: \"\",\n      isLoadingRegion: false,\n      isLoadingBranch: false,\n      selectedRegion: null,\n      searchRegion: null,\n      filterRegionData: {\n        bankId: null,\n        regionName: null\n      },\n      selectedBranch: null,\n      filterBranchData: {\n        branchRegionId: null,\n        NameOrNumber: null\n      }\n    };\n  },\n  watch: {\n    searchName: function searchName(val) {\n      this.filterData.nameOrNumber = val;\n      if (!val) {\n        this.searchData();\n      }\n    },\n    selectAccountType: function selectAccountType(val) {\n      if (!val) this.searchData();\n    },\n    searchBank: function searchBank(val) {\n      if (this.isLoading) return;\n      this.filterBankData.bankName = val;\n      this.getBanks();\n    },\n    searchRegion: function searchRegion(val) {\n      if (this.isLoadingRegion) return;\n      this.filterRegionData.regionName = val;\n      this.getBankRegions();\n    },\n    selectedBank: function selectedBank(val) {\n      if (!val) {\n        this.clearRegionData();\n        this.searchData();\n      }\n    },\n    selectedRegion: function selectedRegion(val) {\n      if (!val) {\n        this.clearRegionData();\n        this.searchData();\n      }\n    },\n    selectedBranch: function selectedBranch(val) {\n      if (!val) {\n        this.clearBranchData();\n        this.searchData();\n      }\n    },\n    searchBranch: function searchBranch(val) {\n      if (this.isLoadingBranch) return;\n      if (this.selectedRegion) {\n        var _this$selectedRegion;\n        this.filterBranchData.branchRegionId = (_this$selectedRegion = this.selectedRegion) === null || _this$selectedRegion === void 0 ? void 0 : _this$selectedRegion.bankRegionId;\n        this.filterBranchData.NameOrNumber = val;\n        this.GetBranches();\n      }\n    }\n  },\n  computed: {},\n  methods: _objectSpread(_objectSpread({}, mapActions({\n    GetActiveBankRegions: \"bankRegionStore/GetActiveBankRegions\",\n    GetBankStore: \"bankStore/GetBanks\",\n    GetActiveBranchesAction: \"branchStore/GetActiveBranchs\"\n  })), {}, {\n    hasPermassion: function hasPermassion(crrentUser) {\n      this.userPermasstion = this.$store.getters[\"auth/getRole\"];\n      var result = this.userPermasstion.some(function (item) {\n        return crrentUser.includes(item);\n      });\n      return result;\n    },\n    searchData: function searchData() {\n      var _this$selectedBank$ba, _this$selectedBank, _this$selectedRegion$, _this$selectedRegion2, _this$selectedBranch$, _this$selectedBranch, _this$selectAccountTy, _this$selectAccountTy2;\n      this.filterData.bankId = (_this$selectedBank$ba = (_this$selectedBank = this.selectedBank) === null || _this$selectedBank === void 0 ? void 0 : _this$selectedBank.bankId) !== null && _this$selectedBank$ba !== void 0 ? _this$selectedBank$ba : null;\n      this.filterData.bankRegionId = (_this$selectedRegion$ = (_this$selectedRegion2 = this.selectedRegion) === null || _this$selectedRegion2 === void 0 ? void 0 : _this$selectedRegion2.bankRegionId) !== null && _this$selectedRegion$ !== void 0 ? _this$selectedRegion$ : null;\n      this.filterData.branchId = (_this$selectedBranch$ = (_this$selectedBranch = this.selectedBranch) === null || _this$selectedBranch === void 0 ? void 0 : _this$selectedBranch.id) !== null && _this$selectedBranch$ !== void 0 ? _this$selectedBranch$ : null;\n      this.filterData.accountType = (_this$selectAccountTy = (_this$selectAccountTy2 = this.selectAccountType) === null || _this$selectAccountTy2 === void 0 ? void 0 : _this$selectAccountTy2.value) !== null && _this$selectAccountTy !== void 0 ? _this$selectAccountTy : 0;\n      this.$emit(\"search-data\", this.filterData);\n    },\n    getRegionByBankId: function getRegionByBankId() {\n      var _this$selectedBank2;\n      this.filterRegionData.bankId = (_this$selectedBank2 = this.selectedBank) === null || _this$selectedBank2 === void 0 ? void 0 : _this$selectedBank2.bankId;\n      this.getBankRegions();\n    },\n    getBranchesByRegionId: function getBranchesByRegionId() {\n      var _this$selectedRegion3;\n      this.filterBranchData.branchRegionId = (_this$selectedRegion3 = this.selectedRegion) === null || _this$selectedRegion3 === void 0 ? void 0 : _this$selectedRegion3.bankRegionId;\n      this.GetBranches();\n    },\n    getBankRegions: function getBankRegions() {\n      var _this = this;\n      // if (!this.selectedBank) return;\n      // this.filterRegionData.bankId = this.selectedBank?.bankId;\n      try {\n        this.isLoadingRegion = true;\n        this.GetActiveBankRegions(this.filterRegionData).then(function () {\n          _this.regions = [];\n          _this.regions = _toConsumableArray(_this.$store.getters[\"bankRegionStore/GET_ACTIVE_BANKREGIONS\"]);\n          _this.isLoadingRegion = false;\n        }).catch(function () {\n          // this.notify(`${error}`, \"#1d262d\");\n          _this.isLoadingRegion = false;\n        });\n      } catch (error) {\n        this.isLoadingRegion = false;\n        this.notify(error, \"#1d262d\");\n      }\n    },\n    GetBranches: function GetBranches() {\n      var _this2 = this;\n      try {\n        this.isLoadingBranch = true;\n        this.GetActiveBranchesAction(this.filterBranchData).then(function () {\n          _this2.activeBranchs = _toConsumableArray(_this2.$store.getters[\"branchStore/GET_ACTIVE_BRANCHS\"]);\n          _this2.isLoadingBranch = false;\n        }).catch(function () {\n          // this.notify(`${error}`, \"#1d262d\");\n          _this2.isLoadingBranch = false;\n        });\n      } catch (error) {\n        this.isLoadingBranch = false;\n        this.notify(error, \"#1d262d\");\n      }\n    },\n    clearRegionData: function clearRegionData() {\n      this.isLoadingRegion = false;\n      this.regions = [];\n      this.selectedRegion = null;\n      this.searchRegion = null;\n      this.filterRegionData.bankId = null;\n      this.filterRegionData.regionName = null;\n      this.clearBranchData();\n    },\n    clearBranchData: function clearBranchData() {\n      this.isLoadingBranch = false;\n      this.activeBranchs = [];\n      this.searchBranch = null;\n      this.selectedBranch = null;\n      this.filterBranchData.branchRegionId = null;\n      this.filterBranchData.NameOrNumber = null;\n    },\n    getBanks: function getBanks() {\n      var _this3 = this;\n      try {\n        this.isLoading = true;\n        this.GetBankStore(this.filterBankData).then(function () {\n          _this3.banks = [];\n          _this3.banks = _toConsumableArray(_this3.$store.getters[\"bankStore/GET_ACTIVE_BANKS\"]);\n          _this3.isLoading = false;\n        }).catch(function () {\n          // this.notify(`${error}`, \"#1d262d\");\n          _this3.isLoading = false;\n        });\n      } catch (error) {\n        this.isLoading = false;\n        this.notify(error, \"#1d262d\");\n      }\n    },\n    notify: function notify(text, color) {\n      this.$store.commit(\"showMessage\", {\n        text: text,\n        color: color\n      });\n    }\n  })\n};","map":{"version":3,"mappings":";;;;;AAqDA;AAEA;EACAA;IAAA;MAEAC;MACAC;MACAC;MAEAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;MACA;MAEAC,qBACA;QAAAC;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,EACA;MAEAC;QACAC;MACA;MACAC;MACAC;MACAC;MACAC;MAEAC;MACAC;MAEAC;MACAC;MACAC;MACAC;MACAC;QACArB;QACAsB;MACA;MAEAC;MACAC;QACAC;QACAC;MACA;IAGA;EAAA;EAEAC;IAEAX;MACA;MAEA;QACA;MACA;IACA;IAEAL;MACA;IACA;IAEAE;MACA;MACA;MACA;IACA;IAEAO;MACA;MACA;MACA;IACA;IAEAR;MACA;QACA;QACA;MACA;IACA;IAEAO;MACA;QACA;QACA;MACA;IACA;IAEAI;MACA;QACA;QACA;MACA;IACA;IAEAT;MACA;MACA;QAAA;QACA;QACA;QACA;MACA;IACA;EAGA;EAEAc,WACA;EACAC,yCAEAC;IACAC;IACAC;IACAC;EACA;IAEAC;MACA;MACA;QAAA,OACAC;MAAA,EACA;MACA;IACA;IAEAC;MAAA;MACA;MACA;MACA;MACA;MAEA;IACA;IAEAC;MAAA;MACA;MACA;IACA;IAEAC;MAAA;MACA;MACA;IACA;IAEAC;MAAA;MACA;MACA;MACA;QACA;QACA,iDACAC;UAEA;UACA,mCACA,+DACA;UACA;QACA,GACAC;UACA;UACA;QACA;MACA;QACA;QACA;MACA;IACA;IAEAC;MAAA;MACA;QACA;QACA,oDACAF;UAEA,0CACA,wDACA;UACA;QAEA,GACAC;UACA;UACA;QACA;MACA;QACA;QACA;MACA;IACA;IAEAE;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACA;IAEAC;MACA;MACA;MACA;MACA;MACA;MACA;IACA;IAEAC;MAAA;MACA;QACA;QACA,uCACAL;UAEA;UACA,kCACA,oDACA;UACA;QAEA,GACAC;UACA;UACA;QACA;MACA;QACA;QACA;MACA;IACA;IAEAK;MACA;QAAAvC;QAAAwC;MAAA;IACA;EAAA;AAGA","names":["data","banks","regions","activeBranchs","filterData","nameOrNumber","bankId","accountType","bankRegionId","branchId","pageNo","pageSize","accountTypeOptions","text","value","filterBankData","bankName","selectAccountType","selectedBank","searchBank","searchBranch","isLoading","searchName","isLoadingRegion","isLoadingBranch","selectedRegion","searchRegion","filterRegionData","regionName","selectedBranch","filterBranchData","branchRegionId","NameOrNumber","watch","computed","methods","mapActions","GetActiveBankRegions","GetBankStore","GetActiveBranchesAction","hasPermassion","crrentUser","searchData","getRegionByBankId","getBranchesByRegionId","getBankRegions","then","catch","GetBranches","clearRegionData","clearBranchData","getBanks","notify","color"],"sourceRoot":"src/views/Account/Components","sources":["searchComponent.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <v-card elevation=\"3\" height=\"auto\" class=\"px-5\">\r\n      <v-row>\r\n        <v-subheader>\r\n          <v-icon class=\"mx-2\">search</v-icon>\r\n          بحث عن حساب مصرفي  \r\n        </v-subheader>\r\n      </v-row>\r\n\r\n      <v-row dense class=\"px-5\">\r\n        <v-col dense cols=\"12\" sm=\"6\" md=\"3\">\r\n          <v-text-field v-model=\"searchName\" label=\" إسم/رقم الحساب\" clearable prepend-icon=\"mdi-numeric\">\r\n          </v-text-field>\r\n        </v-col>\r\n\r\n        <v-col cols=\"12\" sm=\"6\" md=\"3\" v-if=\"hasPermassion(['AdminSystem'])\">\r\n          <v-autocomplete v-model=\"selectedBank\" :items=\"banks\" :loading=\"isLoading\" single-line\r\n            :search-input.sync=\"searchBank\" item-text=\"name\" item-value=\"bankId\" label=\"اختر المصرف\"\r\n            placeholder=\"بحث عن طريق المصرف\" return-object no-data-text=\"قم بالبحث عن اسم المصرف\" clearable\r\n            prepend-icon=\"mdi-bank\" @change=\"getRegionByBankId\"></v-autocomplete>\r\n        </v-col>\r\n\r\n        <v-col cols=\"12\" sm=\"6\" md=\"3\" v-if=\"hasPermassion(['AdminSystem','DislpayAccountsOfOtherBranches'])\">\r\n          <v-autocomplete v-model=\"selectedRegion\" :items=\"regions\" :loading=\"isLoadingRegion\" single-line\r\n            :search-input.sync=\"searchRegion\" item-text=\"regionName\" item-value=\"bankRegionId\" label=\"اختر المنطقة\"\r\n            placeholder=\"بحث عن طريق المنطفة\" return-object no-data-text=\"لايوجد بيانات\" clearable\r\n            prepend-icon=\"mdi-map-marker\" @change=\"getBranchesByRegionId\"></v-autocomplete>\r\n        </v-col>\r\n\r\n        <v-col cols=\"12\" sm=\"6\" md=\"3\" v-if=\"hasPermassion(['AdminSystem','DislpayAccountsOfOtherBranches'])\">\r\n          <v-autocomplete v-model=\"selectedBranch\" :items=\"activeBranchs\" :loading=\"isLoadingBranch\" single-line\r\n            :search-input.sync=\"searchBranch\" item-text=\"name\" item-value=\"id\" label=\"اختر الفرع\"\r\n            placeholder=\"بحث عن طريق الفرع\" return-object no-data-text=\"لايوجد بيانات\" clearable\r\n            prepend-icon=\"mdi-map-marker\"></v-autocomplete>\r\n        </v-col>\r\n\r\n        <v-col cols=\"12\" sm=\"6\" md=\"3\">\r\n          <v-select :items=\"accountTypeOptions\" item-text=\"text\" item-value=\"value\" v-model=\"selectAccountType\"\r\n            label=\"نوع الحساب\" placeholder=\"نوع الحساب\" no-data-text=\"لايوجد بيانات\" return-object single-line\r\n            clearable></v-select>\r\n        </v-col>\r\n\r\n        <v-col cols=\"12\" class=\"text-center mb-3\">\r\n          <v-btn  color=\"#081D38\" class=\"white--text\" @click=\"searchData\">فلترة البيانات</v-btn>\r\n          <!-- v-if=\"filterIsSelected\" -->\r\n        </v-col>\r\n      </v-row>\r\n    </v-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapActions } from \"vuex\";\r\n\r\nexport default {\r\n  data: () => ({\r\n\r\n    banks: [],\r\n    regions: [],\r\n    activeBranchs: [],\r\n\r\n    filterData: {\r\n      nameOrNumber: null,\r\n      bankId: null,\r\n      accountType: 0,\r\n      bankRegionId: \"\",\r\n      branchId: \"\",\r\n      pageNo: 1,\r\n      pageSize: 30,\r\n    },\r\n\r\n    accountTypeOptions: [\r\n      { text: \"افراد\", value: 1 },\r\n      { text: \"شركات\", value: 2 },\r\n    ],\r\n\r\n    filterBankData: {\r\n      bankName: null,\r\n    },\r\n    selectAccountType: 0,\r\n    selectedBank: null,\r\n    searchBank: null,\r\n    searchBranch: null,\r\n\r\n    isLoading: false,\r\n    searchName: \"\",\r\n\r\n    isLoadingRegion: false,\r\n    isLoadingBranch: false,\r\n    selectedRegion: null,\r\n    searchRegion: null,\r\n    filterRegionData: {\r\n      bankId: null,\r\n      regionName: null,\r\n    },\r\n\r\n    selectedBranch: null,\r\n    filterBranchData: {\r\n      branchRegionId: null,\r\n      NameOrNumber: null,\r\n    },\r\n\r\n    \r\n  }),\r\n\r\n  watch: {\r\n\r\n    searchName(val) {\r\n      this.filterData.nameOrNumber = val;\r\n      \r\n      if(!val){\r\n        this.searchData();\r\n      }\r\n    },\r\n\r\n    selectAccountType(val){\r\n      if (!val) this.searchData();\r\n    },\r\n\r\n    searchBank(val) {\r\n      if (this.isLoading) return;\r\n      this.filterBankData.bankName = val;\r\n      this.getBanks();\r\n    },\r\n\r\n    searchRegion(val) {\r\n      if (this.isLoadingRegion) return;\r\n      this.filterRegionData.regionName = val;\r\n      this.getBankRegions();\r\n    },\r\n\r\n    selectedBank(val) {\r\n      if (!val) {\r\n        this.clearRegionData();\r\n        this.searchData();\r\n      }\r\n    },\r\n\r\n    selectedRegion(val) {\r\n      if (!val) {\r\n        this.clearRegionData();\r\n        this.searchData();\r\n      }\r\n    },\r\n\r\n    selectedBranch(val){\r\n      if (!val) {\r\n        this.clearBranchData();\r\n        this.searchData();\r\n      }\r\n    },\r\n\r\n    searchBranch(val) {\r\n      if (this.isLoadingBranch) return;\r\n      if (this.selectedRegion) {\r\n        this.filterBranchData.branchRegionId = this.selectedRegion?.bankRegionId;\r\n        this.filterBranchData.NameOrNumber = val;\r\n        this.GetBranches();\r\n      }\r\n    },\r\n\r\n\r\n  },\r\n\r\n  computed: {\r\n  },\r\n  methods: {\r\n\r\n    ...mapActions({\r\n      GetActiveBankRegions: \"bankRegionStore/GetActiveBankRegions\",\r\n      GetBankStore: \"bankStore/GetBanks\",\r\n      GetActiveBranchesAction: \"branchStore/GetActiveBranchs\",\r\n    }),\r\n\r\n    hasPermassion(crrentUser) {\r\n      this.userPermasstion = this.$store.getters[\"auth/getRole\"];\r\n      var result = this.userPermasstion.some((item) =>\r\n        crrentUser.includes(item)\r\n      );\r\n      return result;\r\n    },\r\n\r\n    searchData() {\r\n      this.filterData.bankId = this.selectedBank?.bankId ?? null;\r\n      this.filterData.bankRegionId = this.selectedRegion?.bankRegionId ?? null;\r\n      this.filterData.branchId = this.selectedBranch?.id ?? null;\r\n      this.filterData.accountType = this.selectAccountType?.value ?? 0;\r\n\r\n      this.$emit(\"search-data\", this.filterData);\r\n    },\r\n\r\n    getRegionByBankId() {\r\n      this.filterRegionData.bankId = this.selectedBank?.bankId;\r\n      this.getBankRegions();\r\n    },\r\n\r\n    getBranchesByRegionId() {\r\n      this.filterBranchData.branchRegionId = this.selectedRegion?.bankRegionId;\r\n      this.GetBranches();\r\n    },\r\n\r\n    getBankRegions() {\r\n      // if (!this.selectedBank) return;\r\n      // this.filterRegionData.bankId = this.selectedBank?.bankId;\r\n      try {\r\n        this.isLoadingRegion = true;\r\n        this.GetActiveBankRegions(this.filterRegionData)\r\n          .then(() => {\r\n\r\n            this.regions = [];\r\n            this.regions = [\r\n              ...this.$store.getters[\"bankRegionStore/GET_ACTIVE_BANKREGIONS\"],\r\n            ];\r\n            this.isLoadingRegion = false;\r\n          })\r\n          .catch(() => {\r\n            // this.notify(`${error}`, \"#1d262d\");\r\n            this.isLoadingRegion = false;\r\n          });\r\n      } catch (error) {\r\n        this.isLoadingRegion = false;\r\n        this.notify(error, \"#1d262d\");\r\n      }\r\n    },\r\n\r\n    GetBranches() {\r\n      try {\r\n        this.isLoadingBranch = true;\r\n        this.GetActiveBranchesAction(this.filterBranchData)\r\n          .then(() => {\r\n            \r\n            this.activeBranchs = [\r\n              ...this.$store.getters[\"branchStore/GET_ACTIVE_BRANCHS\"],\r\n            ];\r\n            this.isLoadingBranch = false;\r\n\r\n          })\r\n          .catch(() => {\r\n            // this.notify(`${error}`, \"#1d262d\");\r\n            this.isLoadingBranch = false;\r\n          });\r\n      } catch (error) {\r\n        this.isLoadingBranch = false;\r\n        this.notify(error, \"#1d262d\");\r\n      }\r\n    },\r\n\r\n    clearRegionData() {\r\n      this.isLoadingRegion = false;\r\n      this.regions = [];\r\n      this.selectedRegion = null;\r\n      this.searchRegion = null;\r\n      this.filterRegionData.bankId = null;\r\n      this.filterRegionData.regionName = null;\r\n      this.clearBranchData();\r\n    },\r\n\r\n    clearBranchData() {\r\n      this.isLoadingBranch = false;\r\n      this.activeBranchs = [];\r\n      this.searchBranch = null;\r\n      this.selectedBranch = null;\r\n      this.filterBranchData.branchRegionId = null;\r\n      this.filterBranchData.NameOrNumber = null;\r\n    },\r\n\r\n    getBanks() {\r\n      try {\r\n        this.isLoading = true;\r\n        this.GetBankStore(this.filterBankData)\r\n          .then(() => {\r\n\r\n            this.banks = [];\r\n            this.banks = [\r\n              ...this.$store.getters[\"bankStore/GET_ACTIVE_BANKS\"],\r\n            ];\r\n            this.isLoading = false;\r\n\r\n          })\r\n          .catch(() => {\r\n            // this.notify(`${error}`, \"#1d262d\");\r\n            this.isLoading = false;\r\n          });\r\n      } catch (error) {\r\n        this.isLoading = false;\r\n        this.notify(error, \"#1d262d\");\r\n      }\r\n    },\r\n\r\n    notify(text, color) {\r\n      this.$store.commit(\"showMessage\", { text: text, color: color });\r\n    },\r\n\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}