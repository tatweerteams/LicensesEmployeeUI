{"ast":null,"code":"import _toConsumableArray from \"D:/repo Tatweer/tatweerteams/CheckbooksOrderingUI/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _objectSpread from \"D:/repo Tatweer/tatweerteams/CheckbooksOrderingUI/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport { mapActions } from \"vuex\";\nimport { createHelpers } from \"vuex-map-fields\";\nvar _createHelpers = createHelpers({\n    getterType: \"getDataFields\",\n    mutationType: \"updateDataField\"\n  }),\n  mapFields = _createHelpers.mapFields;\nexport default {\n  data: function data() {\n    return {\n      filterData: {\n        bankId: \"\",\n        branchRegionId: \"\",\n        nameOrNumber: \"\",\n        pageNo: 1,\n        pageSize: 30\n      },\n      banks: [],\n      isLoading: false,\n      selectedBank: null,\n      searchBank: null,\n      filterBankData: {\n        bankName: null\n      },\n      regions: [],\n      isLoadingRegion: false,\n      selectedRegion: null,\n      searchRegion: null,\n      filterRegionData: {\n        bankId: null,\n        regionName: null\n      },\n      searchName: \"\"\n    };\n  },\n  watch: {\n    searchName: function searchName(val) {\n      this.filterData.nameOrNumber = val;\n    },\n    searchBank: function searchBank(val) {\n      if (this.isLoading) return;\n      this.filterBankData.bankName = val;\n    },\n    searchRegion: function searchRegion(val) {\n      if (this.isLoadingRegion) return;\n      this.filterRegionData.regionName = val;\n    },\n    selectedBank: function selectedBank(val) {\n      if (!val) this.clearRegionData();\n    },\n    filterIsSelected: function filterIsSelected(val) {\n      if (!val) this.searchData();\n    }\n  },\n  computed: _objectSpread(_objectSpread({}, mapFields(\"auth\", {\n    userInfo: \"userInfo\"\n  })), {}, {\n    filterIsSelected: function filterIsSelected() {\n      return this.selectedBank || this.selectedRegion || this.filterData.nameOrNumber;\n    }\n  }),\n  methods: _objectSpread(_objectSpread({\n    Test: function Test() {\n      alert(\"ds\");\n    }\n  }, mapActions({\n    GetActiveBankRegions: \"bankRegionStore/GetActiveBankRegions\",\n    GetBankStore: \"bankStore/GetBanks\"\n  })), {}, {\n    hasPermassion: function hasPermassion(crrentUser) {\n      this.userPermasstion = this.$store.getters[\"auth/getRole\"];\n      var result = this.userPermasstion.some(function (item) {\n        return crrentUser.includes(item);\n      });\n      return result;\n    },\n    mappingWithClimsUser: function mappingWithClimsUser() {\n      var _this$selectedBank$ba, _this$selectedBank;\n      console.log(this.userInfo);\n      this.filterData.bankId = (_this$selectedBank$ba = (_this$selectedBank = this.selectedBank) === null || _this$selectedBank === void 0 ? void 0 : _this$selectedBank.bankId) !== null && _this$selectedBank$ba !== void 0 ? _this$selectedBank$ba : null;\n    },\n    searchData: function searchData() {\n      var _this$selectedBank$ba2, _this$selectedBank2, _this$selectedRegion$, _this$selectedRegion;\n      this.filterData.bankId = (_this$selectedBank$ba2 = (_this$selectedBank2 = this.selectedBank) === null || _this$selectedBank2 === void 0 ? void 0 : _this$selectedBank2.bankId) !== null && _this$selectedBank$ba2 !== void 0 ? _this$selectedBank$ba2 : null;\n      this.filterData.branchRegionId = (_this$selectedRegion$ = (_this$selectedRegion = this.selectedRegion) === null || _this$selectedRegion === void 0 ? void 0 : _this$selectedRegion.bankRegionId) !== null && _this$selectedRegion$ !== void 0 ? _this$selectedRegion$ : null;\n      this.$emit(\"search-data\", this.filterData);\n    },\n    getRegionByBankId: function getRegionByBankId() {\n      var _this$selectedBank3;\n      this.filterRegionData.bankId = (_this$selectedBank3 = this.selectedBank) === null || _this$selectedBank3 === void 0 ? void 0 : _this$selectedBank3.bankId;\n      this.getBankRegions();\n    },\n    getBankRegions: function getBankRegions() {\n      var _this = this;\n      this.mappingWithClimsUser();\n      if (!this.selectedBank) return;\n      try {\n        this.isLoadingRegion = true;\n        this.GetActiveBankRegions(this.filterRegionData).then(function () {\n          _this.regions = _toConsumableArray(_this.$store.getters[\"bankRegionStore/activeBankRegions\"]);\n          _this.isLoadingRegion = false;\n        }).catch(function (error) {\n          _this.notify(\"\".concat(error), \"#1d262d\");\n          _this.isLoadingRegion = false;\n        });\n      } catch (error) {\n        this.isLoadingRegion = false;\n        this.notify(error, \"#1d262d\");\n      }\n    },\n    clearRegionData: function clearRegionData() {\n      this.isLoadingRegion = false;\n      this.regions = [];\n      this.selectedRegion = null;\n      this.searchRegion = null;\n      this.filterRegionData.bankId = null;\n      this.filterRegionData.regionName = null;\n    },\n    getBanks: function getBanks() {\n      var _this2 = this;\n      try {\n        this.isLoading = true;\n        this.GetBankStore(this.filterBankData).then(function () {\n          _this2.bank = _toConsumableArray(_this2.$store.getters[\"bankStore/grids\"]);\n          _this2.isLoading = false;\n        }).catch(function (error) {\n          _this2.notify(\"\".concat(error), \"#1d262d\");\n          _this2.isLoading = false;\n        });\n      } catch (error) {\n        this.isLoading = false;\n        this.notify(error, \"#1d262d\");\n      }\n    },\n    notify: function notify(text, color) {\n      this.$store.commit(\"showMessage\", {\n        text: text,\n        color: color\n      });\n    }\n  })\n};","map":{"version":3,"mappings":";;;;;AA0EA;AACA;AACA;IACAA;IACAC;EACA;EAHAC;AAKA;EACAC;IAAA;MAEAC;QACAC;QACAC;QACAC;QACAC;QACAC;MACA;MAEAC;MACAC;MACAC;MACAC;MACAC;QACAC;MACA;MAEAC;MACAC;MACAC;MACAC;MACAC;QACAf;QACAgB;MACA;MAEAC;IACA;EAAA;EAIAC;IACAD;MACA;IACA;IACAT;MACA;MAEA;IACA;IAGAM;MACA;MACA;IACA;IAEAP;MACA;IACA;IACAY;MACA;IACA;EACA;EAEAC,0CAQAvB;IACAwB;EACA;IAKAF;MACA,OACA;IAEA;EAAA,EACA;EACAG;IACAC;MACAC;IACA;EAAA,GACAC;IACAC;IACAC;EACA;IACAC;MACA;MACA;QAAA,OACAC;MAAA,EACA;MACA;IACA;IAEAC;MAAA;MACAC;MACA;IACA;IAEAC;MAAA;MACA;MACA,kFACA;MACA;IACA;IAEAC;MAAA;MACA;MACA;IACA;IAEAC;MAAA;MACA;MACA;MACA;QACA;QACA,iDACAC;UACA;UACA;QACA,GACAC;UACA;UACA;QACA;MACA;QACA;QACA;MACA;IACA;IAEAC;MACA;MACA;MACA;MACA;MACA;MACA;IACA;IAEAC;MAAA;MACA;QACA;QACA,uCACAH;UACA;UACA;QACA,GACAC;UACA;UACA;QACA;MACA;QACA;QACA;MACA;IACA;IAEAG;MACA;QAAAC;QAAAC;MAAA;IACA;EAAA;AAEA","names":["getterType","mutationType","mapFields","data","filterData","bankId","branchRegionId","nameOrNumber","pageNo","pageSize","banks","isLoading","selectedBank","searchBank","filterBankData","bankName","regions","isLoadingRegion","selectedRegion","searchRegion","filterRegionData","regionName","searchName","watch","filterIsSelected","computed","userInfo","methods","Test","alert","mapActions","GetActiveBankRegions","GetBankStore","hasPermassion","crrentUser","mappingWithClimsUser","console","searchData","getRegionByBankId","getBankRegions","then","catch","clearRegionData","getBanks","notify","text","color"],"sourceRoot":"src/views/Branch/Components","sources":["searchComponent.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <v-card elevation=\"3\" height=\"auto\" class=\"px-5\">\r\n      <v-row>\r\n        <v-subheader>\r\n          <v-icon class=\"mx-2\">search</v-icon>\r\n          بحث علي الفروع المصرف\r\n        </v-subheader>\r\n      </v-row>\r\n\r\n      <v-row dense class=\"px-5\">\r\n        <v-col dense cols=\"12\" sm=\"6\" md=\"4\">\r\n          <v-text-field\r\n            v-model=\"searchName\"\r\n            label=\"اسم الفرع أو رقم\"\r\n            clearable\r\n            prepend-icon=\"mdi-numeric\"\r\n          ></v-text-field>\r\n        </v-col>\r\n\r\n        <v-col cols=\"12\" sm=\"6\" md=\"4\" v-if=\"hasPermassion(['AdminSystem'])\">\r\n          <v-autocomplete\r\n            v-model=\"selectedBank\"\r\n            :items=\"banks\"\r\n            :loading=\"isLoading\"\r\n            single-line\r\n            :search-input.sync=\"searchBank\"\r\n            item-text=\"name\"\r\n            item-value=\"bankId\"\r\n            label=\"المصرف\"\r\n            placeholder=\"بحث عن طريق المصرف\"\r\n            return-object\r\n            no-data-text=\"قم بالبحث علي اسم المصرف\"\r\n            clearable\r\n            prepend-icon=\"mdi-bank\"\r\n            @keyup=\"getBanks\"\r\n            @change=\"getRegionByBankId\"\r\n          ></v-autocomplete>\r\n        </v-col>\r\n        <v-col cols=\"12\" sm=\"6\" md=\"4\">\r\n          <v-autocomplete\r\n            v-model=\"selectedRegion\"\r\n            :items=\"regions\"\r\n            :loading=\"isLoadingRegion\"\r\n            single-line\r\n            :search-input.sync=\"searchRegion\"\r\n            item-text=\"regionName\"\r\n            item-value=\"bankRegionId\"\r\n            label=\"اختر المنطقة\"\r\n            placeholder=\"بحث عن طريق المنطفة\"\r\n            return-object\r\n            no-data-text=\"لايوجد بيانات\"\r\n            clearable\r\n            @keyup=\"getBankRegions\"\r\n            prepend-icon=\"mdi-map-marker\"\r\n            @focus=\"Test\"\r\n\r\n          ></v-autocomplete>\r\n        </v-col>\r\n        <v-col cols=\"12\" class=\"text-center mb-3\">\r\n          <v-btn\r\n            v-if=\"filterIsSelected\"\r\n            color=\"#081D38\"\r\n            class=\"white--text\"\r\n            @click=\"searchData\"\r\n            >فلترة البيانات</v-btn\r\n          >\r\n        </v-col>\r\n      </v-row>\r\n    </v-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapActions } from \"vuex\";\r\nimport { createHelpers } from \"vuex-map-fields\";\r\nconst { mapFields } = createHelpers({\r\n  getterType: \"getDataFields\",\r\n  mutationType: \"updateDataField\",\r\n});\r\n\r\nexport default {\r\n  data: () => ({\r\n\r\n    filterData: {\r\n      bankId: \"\",\r\n      branchRegionId: \"\",\r\n      nameOrNumber: \"\",\r\n      pageNo: 1,\r\n      pageSize: 30,\r\n    },\r\n\r\n    banks:[],\r\n    isLoading: false,\r\n    selectedBank: null,\r\n    searchBank: null,\r\n    filterBankData: {\r\n      bankName: null,\r\n    },\r\n\r\n    regions:[],\r\n    isLoadingRegion: false,\r\n    selectedRegion: null,\r\n    searchRegion: null,\r\n    filterRegionData: {\r\n      bankId: null,\r\n      regionName: null,\r\n    },\r\n\r\n    searchName: \"\",\r\n  }),\r\n\r\n  \r\n   \r\n  watch: {\r\n    searchName(val) {\r\n      this.filterData.nameOrNumber = val;\r\n    },\r\n    searchBank(val) {\r\n      if (this.isLoading) return;\r\n\r\n      this.filterBankData.bankName = val;\r\n    },\r\n  \r\n\r\n    searchRegion(val) {\r\n      if (this.isLoadingRegion) return;\r\n      this.filterRegionData.regionName = val;\r\n    },\r\n\r\n    selectedBank(val) {\r\n      if (!val) this.clearRegionData();\r\n    },\r\n    filterIsSelected(val) {\r\n      if (!val) this.searchData();\r\n    },\r\n  },\r\n\r\n  computed: {\r\n    // ...mapFields(\"bankRegionStore\", {\r\n    //   regions: \"activeBankRegions\",\r\n    // }),\r\n    // ...mapFields(\"bankStore\", {\r\n    //   banks: \"grids\",\r\n    // }),\r\n\r\n    ...mapFields(\"auth\", {\r\n      userInfo: \"userInfo\",\r\n    }),\r\n\r\n    \r\n\r\n\r\n    filterIsSelected() {\r\n      return (\r\n        this.selectedBank || this.selectedRegion || this.filterData.nameOrNumber\r\n      );\r\n    },\r\n  },\r\n  methods: {\r\n    Test(){\r\n      alert(\"ds\")\r\n    },\r\n    ...mapActions({\r\n      GetActiveBankRegions: \"bankRegionStore/GetActiveBankRegions\",\r\n      GetBankStore: \"bankStore/GetBanks\",\r\n    }),\r\n    hasPermassion(crrentUser) {\r\n      this.userPermasstion = this.$store.getters[\"auth/getRole\"];\r\n      var result = this.userPermasstion.some((item) =>\r\n        crrentUser.includes(item)\r\n      );\r\n      return result;\r\n    },\r\n\r\n    mappingWithClimsUser(){\r\n      console.log(this.userInfo);\r\n      this.filterData.bankId = this.selectedBank?.bankId ?? null;\r\n    },\r\n\r\n    searchData() {\r\n      this.filterData.bankId = this.selectedBank?.bankId ?? null;\r\n      this.filterData.branchRegionId =\r\n        this.selectedRegion?.bankRegionId ?? null;\r\n      this.$emit(\"search-data\", this.filterData);\r\n    },\r\n\r\n    getRegionByBankId() {\r\n      this.filterRegionData.bankId = this.selectedBank?.bankId;\r\n      this.getBankRegions();\r\n    },\r\n\r\n    getBankRegions() {\r\n      this.mappingWithClimsUser();\r\n      if (!this.selectedBank) return;\r\n      try {\r\n        this.isLoadingRegion = true;\r\n        this.GetActiveBankRegions(this.filterRegionData)\r\n          .then(() => {\r\n            this.regions=[...this.$store.getters[\"bankRegionStore/activeBankRegions\"]];\r\n            this.isLoadingRegion = false;\r\n          })\r\n          .catch((error) => {\r\n            this.notify(`${error}`, \"#1d262d\");\r\n            this.isLoadingRegion = false;\r\n          });\r\n      } catch (error) {\r\n        this.isLoadingRegion = false;\r\n        this.notify(error, \"#1d262d\");\r\n      }\r\n    },\r\n\r\n    clearRegionData() {\r\n      this.isLoadingRegion = false;\r\n      this.regions = [];\r\n      this.selectedRegion = null;\r\n      this.searchRegion = null;\r\n      this.filterRegionData.bankId = null;\r\n      this.filterRegionData.regionName = null;\r\n    },\r\n\r\n    getBanks() {\r\n      try {\r\n        this.isLoading = true;\r\n        this.GetBankStore(this.filterBankData)\r\n          .then(() => {\r\n            this.bank=[...this.$store.getters[\"bankStore/grids\"]];\r\n            this.isLoading = false;\r\n          })\r\n          .catch((error) => {\r\n            this.notify(`${error}`, \"#1d262d\");\r\n            this.isLoading = false;\r\n          });\r\n      } catch (error) {\r\n        this.isLoading = false;\r\n        this.notify(error, \"#1d262d\");\r\n      }\r\n    },\r\n\r\n    notify(text, color) {\r\n      this.$store.commit(\"showMessage\", { text: text, color: color });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style></style>\r\n"]},"metadata":{},"sourceType":"module"}