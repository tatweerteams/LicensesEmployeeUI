{"ast":null,"code":"import { getRoles, getActiveRoles, activationRole, insertRole, updateRole, deleteRole } from \"../apis/index.js\";\nimport { createHelpers } from \"vuex-map-fields\";\nconst {\n  getDataFields,\n  updateDataField\n} = createHelpers({\n  getterType: \"getDataFields\",\n  mutationType: \"updateDataField\"\n});\nexport default {\n  namespaced: true,\n  state: {\n    grids: [],\n    activeRoles: [],\n    pageCount: 0\n  },\n  getters: {\n    getDataFields,\n    GET_ACTIVE_ROLES(state) {\n      return state.activeRoles;\n    }\n  },\n  mutations: {\n    updateDataField,\n    SET_DATA_ROLES(state, roles) {\n      state.grids = roles;\n    },\n    SET_ACTIVE_ROLES(state, roles) {\n      state.activeRoles = roles;\n    },\n    SET_PAGE_COUNT(state, pageCount) {\n      state.pageCount = pageCount;\n    }\n  },\n  actions: {\n    GetRoles({\n      commit\n    }, filter) {\n      return new Promise((resolve, reject) => {\n        getRoles(filter).then(response => {\n          commit(\"SET_DATA_ROLES\", response.result.data);\n          commit(\"SET_PAGE_COUNT\", response.result.pageCount);\n          resolve(response);\n        }).catch(error => {\n          reject(error);\n        });\n      });\n    },\n    GetActiveRoles({\n      commit\n    }, filter) {\n      return new Promise((resolve, reject) => {\n        getActiveRoles(filter).then(response => {\n          commit(\"SET_ACTIVE_ROLES\", response.result);\n          resolve(response);\n        }).catch(error => {\n          reject(error);\n        });\n      });\n    },\n    InsertRole({\n      commit\n    }, item) {\n      return new Promise((resolve, reject) => {\n        insertRole(item).then(response => {\n          console.log(commit);\n          resolve(response.messages[0]);\n        }).catch(error => {\n          reject(error);\n        });\n      });\n    },\n    UpdateRole({\n      commit\n    }, item) {\n      return new Promise((resolve, reject) => {\n        updateRole(item).then(response => {\n          console.log(commit);\n          resolve(response.messages[0]);\n        }).catch(error => {\n          reject(error);\n        });\n      });\n    },\n    ActivationRole({\n      commit\n    }, item) {\n      return new Promise((resolve, reject) => {\n        activationRole(item).then(response => {\n          console.log(commit);\n          resolve(response.messages[0]);\n        }).catch(error => {\n          reject(error);\n        });\n      });\n    },\n    DeleteRole({\n      commit\n    }, item) {\n      return new Promise((resolve, reject) => {\n        deleteRole(item).then(response => {\n          console.log(commit);\n          resolve(response.messages[0]);\n        }).catch(error => {\n          reject(error);\n        });\n      });\n    }\n  }\n};","map":{"version":3,"names":["getRoles","getActiveRoles","activationRole","insertRole","updateRole","deleteRole","createHelpers","getDataFields","updateDataField","getterType","mutationType","namespaced","state","grids","activeRoles","pageCount","getters","GET_ACTIVE_ROLES","mutations","SET_DATA_ROLES","roles","SET_ACTIVE_ROLES","SET_PAGE_COUNT","actions","GetRoles","commit","filter","Promise","resolve","reject","then","response","result","data","catch","error","GetActiveRoles","InsertRole","item","console","log","messages","UpdateRole","ActivationRole","DeleteRole"],"sources":["D:/repo Tatweer/tatweerteams/CheckbooksOrderingUI/src/views/userManagment/role/stores/index.js"],"sourcesContent":["import {\r\n  getRoles,\r\n  getActiveRoles,\r\n  activationRole,\r\n  insertRole,\r\n  updateRole,\r\n  deleteRole,\r\n} from \"../apis/index.js\";\r\n\r\nimport { createHelpers } from \"vuex-map-fields\";\r\nconst { getDataFields, updateDataField } = createHelpers({\r\n  getterType: \"getDataFields\",\r\n  mutationType: \"updateDataField\",\r\n});\r\nexport default {\r\n  namespaced: true,\r\n  state: {\r\n    grids: [],\r\n    activeRoles: [],\r\n    pageCount: 0,\r\n  },\r\n\r\n  getters: {\r\n    getDataFields,\r\n\r\n    GET_ACTIVE_ROLES(state) {\r\n      return state.activeRoles;\r\n    },\r\n  },\r\n\r\n  mutations: {\r\n    updateDataField,\r\n\r\n    SET_DATA_ROLES(state, roles) {\r\n      state.grids = roles;\r\n    },\r\n    SET_ACTIVE_ROLES(state, roles) {\r\n      state.activeRoles = roles;\r\n    },\r\n    SET_PAGE_COUNT(state, pageCount) {\r\n      state.pageCount = pageCount;\r\n    },\r\n  },\r\n\r\n  actions: {\r\n    GetRoles({ commit }, filter) {\r\n      return new Promise((resolve, reject) => {\r\n        getRoles(filter)\r\n          .then((response) => {\r\n            commit(\"SET_DATA_ROLES\", response.result.data);\r\n            commit(\"SET_PAGE_COUNT\", response.result.pageCount);\r\n            resolve(response);\r\n          })\r\n          .catch((error) => {\r\n            reject(error);\r\n          });\r\n      });\r\n    },\r\n    GetActiveRoles({ commit }, filter) {\r\n      return new Promise((resolve, reject) => {\r\n        getActiveRoles(filter)\r\n          .then((response) => {\r\n            commit(\"SET_ACTIVE_ROLES\", response.result);\r\n            resolve(response);\r\n          })\r\n          .catch((error) => {\r\n            reject(error);\r\n          });\r\n      });\r\n    },\r\n    InsertRole({ commit }, item) {\r\n      return new Promise((resolve, reject) => {\r\n        insertRole(item)\r\n          .then((response) => {\r\n            console.log(commit);\r\n            resolve(response.messages[0]);\r\n          })\r\n          .catch((error) => {\r\n            reject(error);\r\n          });\r\n      });\r\n    },\r\n    UpdateRole({ commit }, item) {\r\n      return new Promise((resolve, reject) => {\r\n        updateRole(item)\r\n          .then((response) => {\r\n            console.log(commit);\r\n            resolve(response.messages[0]);\r\n          })\r\n          .catch((error) => {\r\n            reject(error);\r\n          });\r\n      });\r\n    },\r\n\r\n    ActivationRole({ commit }, item) {\r\n      return new Promise((resolve, reject) => {\r\n        activationRole(item)\r\n          .then((response) => {\r\n            console.log(commit);\r\n            resolve(response.messages[0]);\r\n          })\r\n          .catch((error) => {\r\n            reject(error);\r\n          });\r\n      });\r\n    },\r\n    DeleteRole({ commit }, item) {\r\n      return new Promise((resolve, reject) => {\r\n        deleteRole(item)\r\n          .then((response) => {\r\n            console.log(commit);\r\n            resolve(response.messages[0]);\r\n          })\r\n          .catch((error) => {\r\n            reject(error);\r\n          });\r\n      });\r\n    },\r\n  },\r\n};\r\n"],"mappings":"AAAA,SACEA,QAAQ,EACRC,cAAc,EACdC,cAAc,EACdC,UAAU,EACVC,UAAU,EACVC,UAAU,QACL,kBAAkB;AAEzB,SAASC,aAAa,QAAQ,iBAAiB;AAC/C,MAAM;EAAEC,aAAa;EAAEC;AAAgB,CAAC,GAAGF,aAAa,CAAC;EACvDG,UAAU,EAAE,eAAe;EAC3BC,YAAY,EAAE;AAChB,CAAC,CAAC;AACF,eAAe;EACbC,UAAU,EAAE,IAAI;EAChBC,KAAK,EAAE;IACLC,KAAK,EAAE,EAAE;IACTC,WAAW,EAAE,EAAE;IACfC,SAAS,EAAE;EACb,CAAC;EAEDC,OAAO,EAAE;IACPT,aAAa;IAEbU,gBAAgB,CAACL,KAAK,EAAE;MACtB,OAAOA,KAAK,CAACE,WAAW;IAC1B;EACF,CAAC;EAEDI,SAAS,EAAE;IACTV,eAAe;IAEfW,cAAc,CAACP,KAAK,EAAEQ,KAAK,EAAE;MAC3BR,KAAK,CAACC,KAAK,GAAGO,KAAK;IACrB,CAAC;IACDC,gBAAgB,CAACT,KAAK,EAAEQ,KAAK,EAAE;MAC7BR,KAAK,CAACE,WAAW,GAAGM,KAAK;IAC3B,CAAC;IACDE,cAAc,CAACV,KAAK,EAAEG,SAAS,EAAE;MAC/BH,KAAK,CAACG,SAAS,GAAGA,SAAS;IAC7B;EACF,CAAC;EAEDQ,OAAO,EAAE;IACPC,QAAQ,CAAC;MAAEC;IAAO,CAAC,EAAEC,MAAM,EAAE;MAC3B,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;QACtC7B,QAAQ,CAAC0B,MAAM,CAAC,CACbI,IAAI,CAAEC,QAAQ,IAAK;UAClBN,MAAM,CAAC,gBAAgB,EAAEM,QAAQ,CAACC,MAAM,CAACC,IAAI,CAAC;UAC9CR,MAAM,CAAC,gBAAgB,EAAEM,QAAQ,CAACC,MAAM,CAACjB,SAAS,CAAC;UACnDa,OAAO,CAACG,QAAQ,CAAC;QACnB,CAAC,CAAC,CACDG,KAAK,CAAEC,KAAK,IAAK;UAChBN,MAAM,CAACM,KAAK,CAAC;QACf,CAAC,CAAC;MACN,CAAC,CAAC;IACJ,CAAC;IACDC,cAAc,CAAC;MAAEX;IAAO,CAAC,EAAEC,MAAM,EAAE;MACjC,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;QACtC5B,cAAc,CAACyB,MAAM,CAAC,CACnBI,IAAI,CAAEC,QAAQ,IAAK;UAClBN,MAAM,CAAC,kBAAkB,EAAEM,QAAQ,CAACC,MAAM,CAAC;UAC3CJ,OAAO,CAACG,QAAQ,CAAC;QACnB,CAAC,CAAC,CACDG,KAAK,CAAEC,KAAK,IAAK;UAChBN,MAAM,CAACM,KAAK,CAAC;QACf,CAAC,CAAC;MACN,CAAC,CAAC;IACJ,CAAC;IACDE,UAAU,CAAC;MAAEZ;IAAO,CAAC,EAAEa,IAAI,EAAE;MAC3B,OAAO,IAAIX,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;QACtC1B,UAAU,CAACmC,IAAI,CAAC,CACbR,IAAI,CAAEC,QAAQ,IAAK;UAClBQ,OAAO,CAACC,GAAG,CAACf,MAAM,CAAC;UACnBG,OAAO,CAACG,QAAQ,CAACU,QAAQ,CAAC,CAAC,CAAC,CAAC;QAC/B,CAAC,CAAC,CACDP,KAAK,CAAEC,KAAK,IAAK;UAChBN,MAAM,CAACM,KAAK,CAAC;QACf,CAAC,CAAC;MACN,CAAC,CAAC;IACJ,CAAC;IACDO,UAAU,CAAC;MAAEjB;IAAO,CAAC,EAAEa,IAAI,EAAE;MAC3B,OAAO,IAAIX,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;QACtCzB,UAAU,CAACkC,IAAI,CAAC,CACbR,IAAI,CAAEC,QAAQ,IAAK;UAClBQ,OAAO,CAACC,GAAG,CAACf,MAAM,CAAC;UACnBG,OAAO,CAACG,QAAQ,CAACU,QAAQ,CAAC,CAAC,CAAC,CAAC;QAC/B,CAAC,CAAC,CACDP,KAAK,CAAEC,KAAK,IAAK;UAChBN,MAAM,CAACM,KAAK,CAAC;QACf,CAAC,CAAC;MACN,CAAC,CAAC;IACJ,CAAC;IAEDQ,cAAc,CAAC;MAAElB;IAAO,CAAC,EAAEa,IAAI,EAAE;MAC/B,OAAO,IAAIX,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;QACtC3B,cAAc,CAACoC,IAAI,CAAC,CACjBR,IAAI,CAAEC,QAAQ,IAAK;UAClBQ,OAAO,CAACC,GAAG,CAACf,MAAM,CAAC;UACnBG,OAAO,CAACG,QAAQ,CAACU,QAAQ,CAAC,CAAC,CAAC,CAAC;QAC/B,CAAC,CAAC,CACDP,KAAK,CAAEC,KAAK,IAAK;UAChBN,MAAM,CAACM,KAAK,CAAC;QACf,CAAC,CAAC;MACN,CAAC,CAAC;IACJ,CAAC;IACDS,UAAU,CAAC;MAAEnB;IAAO,CAAC,EAAEa,IAAI,EAAE;MAC3B,OAAO,IAAIX,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;QACtCxB,UAAU,CAACiC,IAAI,CAAC,CACbR,IAAI,CAAEC,QAAQ,IAAK;UAClBQ,OAAO,CAACC,GAAG,CAACf,MAAM,CAAC;UACnBG,OAAO,CAACG,QAAQ,CAACU,QAAQ,CAAC,CAAC,CAAC,CAAC;QAC/B,CAAC,CAAC,CACDP,KAAK,CAAEC,KAAK,IAAK;UAChBN,MAAM,CAACM,KAAK,CAAC;QACf,CAAC,CAAC;MACN,CAAC,CAAC;IACJ;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module"}