{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport { getBranchWorkTime } from \"../API/Index.js\";\nimport { createHelpers } from \"vuex-map-fields\";\nvar _createHelpers = createHelpers({\n    getterType: \"getDataFields\",\n    mutationType: \"updateDataField\"\n  }),\n  getDataFields = _createHelpers.getDataFields,\n  updateDataField = _createHelpers.updateDataField;\nexport default {\n  namespaced: true,\n  state: {\n    branchWorkTimes: [],\n    isEmpty: false\n  },\n  getters: {\n    getDataFields: getDataFields\n  },\n  mutations: {\n    updateDataField: updateDataField,\n    SET_DATA_BRANCH_WORK_TIME: function SET_DATA_BRANCH_WORK_TIME(state, items) {\n      state.branchWorkTimes = items;\n    },\n    RESET_DATA: function RESET_DATA(state) {\n      state.isEmpty = false;\n      state.branchWorkTimes = [];\n    },\n    SET_IS_EMPTY: function SET_IS_EMPTY(state) {\n      state.isEmpty = true;\n    }\n  },\n  actions: {\n    ClearDataItem: function ClearDataItem(_ref) {\n      var commit = _ref.commit;\n      commit(\"RESET_DATA\");\n    },\n    GetBranchWorkTime: function GetBranchWorkTime(_ref2, filter) {\n      var commit = _ref2.commit;\n      return new Promise(function (resolve, reject) {\n        getBranchWorkTime(filter).then(function (response) {\n          if (response.result.lenght == 0) {\n            commit(\"SET_IS_EMPTY\");\n            resolve(response);\n            return;\n          }\n          console.log(response.result);\n          commit(\"SET_DATA_BRANCH_WORK_TIME\", response.result);\n          resolve(response);\n        }).catch(function (error) {\n          commit(\"SET_IS_EMPTY\");\n          reject(error);\n        });\n      });\n    }\n  }\n};","map":{"version":3,"names":["getBranchWorkTime","createHelpers","getterType","mutationType","getDataFields","updateDataField","namespaced","state","branchWorkTimes","isEmpty","getters","mutations","SET_DATA_BRANCH_WORK_TIME","items","RESET_DATA","SET_IS_EMPTY","actions","ClearDataItem","commit","GetBranchWorkTime","filter","Promise","resolve","reject","then","response","result","lenght","console","log","catch","error"],"sources":["D:/repo Tatweer/tatweerteams/CheckbooksOrderingUI/src/views/Branch/Stores/BranchWorkTime.js"],"sourcesContent":["import { getBranchWorkTime } from \"../API/Index.js\";\r\n\r\nimport { createHelpers } from \"vuex-map-fields\";\r\nconst { getDataFields, updateDataField } = createHelpers({\r\n  getterType: \"getDataFields\",\r\n  mutationType: \"updateDataField\",\r\n});\r\nexport default {\r\n  namespaced: true,\r\n  state: {\r\n    branchWorkTimes: [],\r\n    isEmpty: false,\r\n  },\r\n\r\n  getters: {\r\n    getDataFields,\r\n  },\r\n\r\n  mutations: {\r\n    updateDataField,\r\n\r\n    SET_DATA_BRANCH_WORK_TIME(state, items) {\r\n      state.branchWorkTimes = items;\r\n    },\r\n    RESET_DATA(state) {\r\n      state.isEmpty = false;\r\n      state.branchWorkTimes = [];\r\n    },\r\n\r\n    SET_IS_EMPTY(state) {\r\n      state.isEmpty = true;\r\n    },\r\n  },\r\n\r\n  actions: {\r\n    ClearDataItem({ commit }) {\r\n      commit(\"RESET_DATA\");\r\n    },\r\n\r\n    GetBranchWorkTime({ commit }, filter) {\r\n      return new Promise((resolve, reject) => {\r\n        getBranchWorkTime(filter)\r\n          .then((response) => {\r\n            if (response.result.lenght==0) {\r\n              commit(\"SET_IS_EMPTY\");\r\n              resolve(response);\r\n              return;\r\n            }\r\n            console.log(response.result)\r\n\r\n            commit(\"SET_DATA_BRANCH_WORK_TIME\", response.result);\r\n            resolve(response);\r\n          })\r\n          .catch((error) => {\r\n            commit(\"SET_IS_EMPTY\");\r\n            reject(error);\r\n          });\r\n      });\r\n    },\r\n  },\r\n};\r\n"],"mappings":";AAAA,SAASA,iBAAiB,QAAQ,iBAAiB;AAEnD,SAASC,aAAa,QAAQ,iBAAiB;AAC/C,qBAA2CA,aAAa,CAAC;IACvDC,UAAU,EAAE,eAAe;IAC3BC,YAAY,EAAE;EAChB,CAAC,CAAC;EAHMC,aAAa,kBAAbA,aAAa;EAAEC,eAAe,kBAAfA,eAAe;AAItC,eAAe;EACbC,UAAU,EAAE,IAAI;EAChBC,KAAK,EAAE;IACLC,eAAe,EAAE,EAAE;IACnBC,OAAO,EAAE;EACX,CAAC;EAEDC,OAAO,EAAE;IACPN,aAAa,EAAbA;EACF,CAAC;EAEDO,SAAS,EAAE;IACTN,eAAe,EAAfA,eAAe;IAEfO,yBAAyB,qCAACL,KAAK,EAAEM,KAAK,EAAE;MACtCN,KAAK,CAACC,eAAe,GAAGK,KAAK;IAC/B,CAAC;IACDC,UAAU,sBAACP,KAAK,EAAE;MAChBA,KAAK,CAACE,OAAO,GAAG,KAAK;MACrBF,KAAK,CAACC,eAAe,GAAG,EAAE;IAC5B,CAAC;IAEDO,YAAY,wBAACR,KAAK,EAAE;MAClBA,KAAK,CAACE,OAAO,GAAG,IAAI;IACtB;EACF,CAAC;EAEDO,OAAO,EAAE;IACPC,aAAa,+BAAa;MAAA,IAAVC,MAAM,QAANA,MAAM;MACpBA,MAAM,CAAC,YAAY,CAAC;IACtB,CAAC;IAEDC,iBAAiB,oCAAaC,MAAM,EAAE;MAAA,IAAlBF,MAAM,SAANA,MAAM;MACxB,OAAO,IAAIG,OAAO,CAAC,UAACC,OAAO,EAAEC,MAAM,EAAK;QACtCvB,iBAAiB,CAACoB,MAAM,CAAC,CACtBI,IAAI,CAAC,UAACC,QAAQ,EAAK;UAClB,IAAIA,QAAQ,CAACC,MAAM,CAACC,MAAM,IAAE,CAAC,EAAE;YAC7BT,MAAM,CAAC,cAAc,CAAC;YACtBI,OAAO,CAACG,QAAQ,CAAC;YACjB;UACF;UACAG,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAACC,MAAM,CAAC;UAE5BR,MAAM,CAAC,2BAA2B,EAAEO,QAAQ,CAACC,MAAM,CAAC;UACpDJ,OAAO,CAACG,QAAQ,CAAC;QACnB,CAAC,CAAC,CACDK,KAAK,CAAC,UAACC,KAAK,EAAK;UAChBb,MAAM,CAAC,cAAc,CAAC;UACtBK,MAAM,CAACQ,KAAK,CAAC;QACf,CAAC,CAAC;MACN,CAAC,CAAC;IACJ;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module"}