{"ast":null,"code":"import _objectSpread from \"D:/repo Tatweer/tatweerteams/CheckbooksOrderingUI/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { EventBus } from \"../../../eventBus.js\";\nimport { mapActions } from \"vuex\";\nimport BranchSettingComponent from \"../../SharedComponents/branchSettingComponent.vue\";\nexport default {\n  name: \"branch-setting\",\n  props: {\n    itemBranchSettingProp: {}\n  },\n  components: {\n    BranchSettingComponent: BranchSettingComponent\n  },\n  data: function data() {\n    return {\n      dialog: false,\n      valid: false,\n      isLoading: true,\n      filterBranchSettingData: {\n        branchSettingId: null\n      }\n    };\n  },\n  computed: {},\n  watch: {\n    itemBranchSettingProp: {\n      handler: function handler(data) {\n        if (data) this.editSelected(data);\n      },\n      immediate: true\n    }\n  },\n  methods: _objectSpread(_objectSpread({}, mapActions({\n    ClearDataItemStore: \"branchStore/ClearDataItem\",\n    //   SetDataUpdateStore: \"branchStore/SetDataUpdate\",\n    GetBranchSetting: \"branchStore/GetBranchSetting\"\n  })), {}, {\n    editSelected: function editSelected(item) {\n      this.filterBranchSettingData.branchSettingId = item.branchSettingId;\n      this.dialog = true;\n      this.getBranchSetting();\n    },\n    getBranchSetting: function getBranchSetting() {\n      var _this = this;\n      try {\n        this.isLoading = true;\n        this.GetBranchSetting(this.filterBranchSettingData).then(function () {\n          _this.isLoading = false;\n        }).catch(function (error) {\n          _this.notify(\"\".concat(error), \"#1d262d\");\n          _this.isLoading = false;\n        });\n      } catch (error) {\n        this.isLoading = false;\n        this.notify(error, \"#1d262d\");\n      }\n    },\n    close: function close() {\n      var _this2 = this;\n      this.dialog = false;\n      setTimeout(function () {\n        _this2.ClearDataItemStore();\n        _this2.isLoading = true;\n      }, 300);\n      this.resetValidation();\n      EventBus.$emit(\"closeDialogBranchSetting\");\n    },\n    save: function save() {},\n    resetValidation: function resetValidation() {\n      var _this$$refs$formBranc;\n      (_this$$refs$formBranc = this.$refs.formBranchSetting) === null || _this$$refs$formBranc === void 0 ? void 0 : _this$$refs$formBranc.reset();\n    },\n    notify: function notify(text, color) {\n      this.$store.commit(\"showMessage\", {\n        text: text,\n        color: color\n      });\n    }\n  })\n};","map":{"version":3,"mappings":";AA4CA;AACA;AAEA;AACA;EACAA;EACAC;IACAC;EACA;EACAC;IACAC;EACA;EAEAC;IAAA;MACAC;MACAC;MAEAC;MAEAC;QACAC;MACA;IACA;EAAA;EAEAC;EAEAC;IACAV;MACAW;QACA;MACA;MACAC;IACA;EACA;EACAC,yCACAC;IACAC;IACA;IACAC;EACA;IAEAC;MACA;MACA;MACA;IACA;IAEAC;MAAA;MACA;QACA;QACA,oDACAC;UACA;QACA,GACAC;UACA;UACA;QACA;MACA;QACA;QACA;MACA;IACA;IAEAC;MAAA;MACA;MACAC;QACA;QACA;MACA;MACA;MACAC;IACA;IAEAC;IAEAC;MAAA;MACA;IACA;IAEAC;MACA;QAAAC;QAAAC;MAAA;IACA;EAAA;AAEA","names":["name","props","itemBranchSettingProp","components","BranchSettingComponent","data","dialog","valid","isLoading","filterBranchSettingData","branchSettingId","computed","watch","handler","immediate","methods","mapActions","ClearDataItemStore","GetBranchSetting","editSelected","getBranchSetting","then","catch","close","setTimeout","EventBus","save","resetValidation","notify","text","color"],"sourceRoot":"src/views/Branch/Components","sources":["BranchSettingComponent.vue"],"sourcesContent":["<template>\r\n  <v-dialog v-model=\"dialog\" max-width=\"800px\" persistent>\r\n    <v-card>\r\n      <v-card-title>\r\n        <span class=\"headline\">إعدادات الفروع</span>\r\n      </v-card-title>\r\n\r\n      <v-divider></v-divider>\r\n\r\n      <v-card-text>\r\n        <v-container>\r\n          <v-form ref=\"formBranchSetting\" v-model=\"valid\">\r\n            <template v-if=\"isLoading \">\r\n                <v-progress-circular></v-progress-circular>\r\n            </template>\r\n            <template v-else>\r\n                <BranchSettingComponent></BranchSettingComponent>\r\n            </template>\r\n          </v-form>\r\n        </v-container>\r\n      </v-card-text>\r\n\r\n      <v-card-actions>\r\n        <div style=\"width: 100%;text-align: center;\">\r\n          <v-btn\r\n            @click=\"save\"\r\n            class=\"mx-2 white--text\"\r\n            :disabled=\"!valid\"\r\n            color=\"#536DFE\"\r\n          >\r\n            <v-icon>save</v-icon>\r\n            <span>حفظ الإعدادات</span>\r\n          </v-btn>\r\n          <v-btn class=\"mx-2 white--text\" @click=\"close\" color=\"#E91D62\">\r\n            <v-icon dark>clear</v-icon>\r\n            <span>إلغاء</span>\r\n          </v-btn>\r\n        </div>\r\n      </v-card-actions>\r\n    </v-card>\r\n  </v-dialog>\r\n</template>\r\n\r\n<script>\r\nimport { EventBus } from \"../../../eventBus.js\";\r\nimport { mapActions } from \"vuex\";\r\n\r\nimport BranchSettingComponent from \"../../SharedComponents/branchSettingComponent.vue\";\r\nexport default {\r\n  name: \"branch-setting\",\r\n  props: {\r\n    itemBranchSettingProp: {},\r\n  },\r\n  components: {\r\n    BranchSettingComponent,\r\n  },\r\n\r\n  data: () => ({\r\n    dialog: false,\r\n    valid: false,\r\n\r\n    isLoading:true,\r\n\r\n    filterBranchSettingData: {\r\n      branchSettingId: null,\r\n    },\r\n  }),\r\n\r\n  computed: {},\r\n\r\n  watch: {\r\n    itemBranchSettingProp: {\r\n      handler(data) {\r\n        if (data) this.editSelected(data);\r\n      },\r\n      immediate: true,\r\n    },\r\n  },\r\n  methods: {\r\n    ...mapActions({\r\n      ClearDataItemStore: \"branchStore/ClearDataItem\",\r\n      //   SetDataUpdateStore: \"branchStore/SetDataUpdate\",\r\n      GetBranchSetting: \"branchStore/GetBranchSetting\",\r\n    }),\r\n\r\n    editSelected(item) {\r\n      this.filterBranchSettingData.branchSettingId = item.branchSettingId;\r\n      this.dialog = true;\r\n      this.getBranchSetting();\r\n    },\r\n\r\n    getBranchSetting() {\r\n      try {\r\n        this.isLoading = true;\r\n        this.GetBranchSetting(this.filterBranchSettingData)\r\n          .then(() => {\r\n            this.isLoading = false;\r\n          })\r\n          .catch((error) => {\r\n            this.notify(`${error}`, \"#1d262d\");\r\n            this.isLoading = false;\r\n          });\r\n      } catch (error) {\r\n        this.isLoading = false;\r\n        this.notify(error, \"#1d262d\");\r\n      }\r\n    },\r\n\r\n    close() {\r\n      this.dialog = false;\r\n      setTimeout(() => {\r\n        this.ClearDataItemStore();\r\n        this.isLoading=true;\r\n      }, 300);\r\n      this.resetValidation();\r\n      EventBus.$emit(\"closeDialogBranchSetting\");\r\n    },\r\n\r\n    save() {},\r\n\r\n    resetValidation() {\r\n      this.$refs.formBranchSetting?.reset();\r\n    },\r\n\r\n    notify(text, color) {\r\n      this.$store.commit(\"showMessage\", { text: text, color: color });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style></style>\r\n"]},"metadata":{},"sourceType":"module"}