{"ast":null,"code":"import { getLogs } from \"../Api/Index.js\";\nimport { createHelpers } from \"vuex-map-fields\";\nconst {\n  getDataFields,\n  updateDataField\n} = createHelpers({\n  getterType: \"getDataFields\",\n  mutationType: \"updateDataField\"\n});\nexport default {\n  namespaced: true,\n  state: {\n    grids: [],\n    pageCount: 0\n  },\n  getters: {\n    getDataFields\n  },\n  mutations: {\n    updateDataField,\n    SET_LOGS(state, items) {\n      state.grids = items;\n    },\n    SET_PAGE_COUNT(state, pageCount) {\n      state.pageCount = pageCount;\n    }\n  },\n  actions: {\n    GetLogs({\n      commit\n    }, filter) {\n      return new Promise((resolve, reject) => {\n        getLogs(filter).then(response => {\n          commit(\"SET_LOGS\", response.result.data);\n          commit(\"SET_PAGE_COUNT\", response.result.pageCount);\n          resolve(response);\n        }).catch(error => {\n          reject(error);\n        });\n      });\n    }\n  }\n};","map":{"version":3,"names":["getLogs","createHelpers","getDataFields","updateDataField","getterType","mutationType","namespaced","state","grids","pageCount","getters","mutations","SET_LOGS","items","SET_PAGE_COUNT","actions","GetLogs","commit","filter","Promise","resolve","reject","then","response","result","data","catch","error"],"sources":["D:/repo Tatweer/tatweerteams/CheckbooksOrderingUI/src/views/Logging/Store/index.js"],"sourcesContent":["import { getLogs } from \"../Api/Index.js\";\r\n\r\nimport { createHelpers } from \"vuex-map-fields\";\r\nconst { getDataFields, updateDataField } = createHelpers({\r\n  getterType: \"getDataFields\",\r\n  mutationType: \"updateDataField\",\r\n});\r\nexport default {\r\n  namespaced: true,\r\n  state: {\r\n    grids: [],\r\n    pageCount: 0,\r\n  },\r\n\r\n  getters: {\r\n    getDataFields,\r\n  },\r\n\r\n  mutations: {\r\n\r\n    updateDataField,\r\n\r\n    SET_LOGS(state, items) {\r\n      state.grids = items;\r\n    },\r\n    SET_PAGE_COUNT(state, pageCount) {\r\n      state.pageCount = pageCount;\r\n    },\r\n  },\r\n\r\n  actions: {\r\n\r\n    GetLogs({ commit }, filter) {\r\n      return new Promise((resolve, reject) => {\r\n        getLogs(filter)\r\n          .then((response) => {\r\n            commit(\"SET_LOGS\", response.result.data);\r\n            commit(\"SET_PAGE_COUNT\", response.result.pageCount);\r\n            resolve(response);\r\n          })\r\n          .catch((error) => {\r\n            reject(error);\r\n          });\r\n      });\r\n    },\r\n\r\n  },\r\n};\r\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,iBAAiB;AAEzC,SAASC,aAAa,QAAQ,iBAAiB;AAC/C,MAAM;EAAEC,aAAa;EAAEC;AAAgB,CAAC,GAAGF,aAAa,CAAC;EACvDG,UAAU,EAAE,eAAe;EAC3BC,YAAY,EAAE;AAChB,CAAC,CAAC;AACF,eAAe;EACbC,UAAU,EAAE,IAAI;EAChBC,KAAK,EAAE;IACLC,KAAK,EAAE,EAAE;IACTC,SAAS,EAAE;EACb,CAAC;EAEDC,OAAO,EAAE;IACPR;EACF,CAAC;EAEDS,SAAS,EAAE;IAETR,eAAe;IAEfS,QAAQ,CAACL,KAAK,EAAEM,KAAK,EAAE;MACrBN,KAAK,CAACC,KAAK,GAAGK,KAAK;IACrB,CAAC;IACDC,cAAc,CAACP,KAAK,EAAEE,SAAS,EAAE;MAC/BF,KAAK,CAACE,SAAS,GAAGA,SAAS;IAC7B;EACF,CAAC;EAEDM,OAAO,EAAE;IAEPC,OAAO,CAAC;MAAEC;IAAO,CAAC,EAAEC,MAAM,EAAE;MAC1B,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;QACtCrB,OAAO,CAACkB,MAAM,CAAC,CACZI,IAAI,CAAEC,QAAQ,IAAK;UAClBN,MAAM,CAAC,UAAU,EAAEM,QAAQ,CAACC,MAAM,CAACC,IAAI,CAAC;UACxCR,MAAM,CAAC,gBAAgB,EAAEM,QAAQ,CAACC,MAAM,CAACf,SAAS,CAAC;UACnDW,OAAO,CAACG,QAAQ,CAAC;QACnB,CAAC,CAAC,CACDG,KAAK,CAAEC,KAAK,IAAK;UAChBN,MAAM,CAACM,KAAK,CAAC;QACf,CAAC,CAAC;MACN,CAAC,CAAC;IACJ;EAEF;AACF,CAAC"},"metadata":{},"sourceType":"module"}