{"ast":null,"code":"import _objectSpread from \"D:/repo Tatweer/tatweerteams/CheckbooksOrderingUI/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.string.trim.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport { EventBus } from \"../../../eventBus.js\";\nimport { mapActions } from \"vuex\";\nimport { createHelpers } from \"vuex-map-fields\";\nvar _createHelpers = createHelpers({\n    getterType: \"getDataFields\",\n    mutationType: \"updateDataField\"\n  }),\n  mapFields = _createHelpers.mapFields;\nimport BranchSettingComponent from \"../../SharedComponents/branchSettingComponent.vue\";\nexport default {\n  name: \"insert-Or-Update\",\n  props: {\n    updateItemProp: {},\n    dialogProp: {}\n  },\n  components: {\n    BranchSettingComponent: BranchSettingComponent\n  },\n  data: function data() {\n    return {\n      dialog: false,\n      valid: false,\n      regionRules: [function (v) {\n        return v.length > 0 || \"الرجاء إختيار المنطقة\";\n      }],\n      bankNameRule: [function (v) {\n        return !!(v !== null && v !== void 0 && v.trim()) || \"يجب إدخال اسم الفرع\";\n      }, function (v) {\n        return /^[\\u0621-\\u064A ]*$/.test(v) || \"الرجاء إدخال باللغة العربية\";\n      }, function (v) {\n        return !!v && !(v !== null && v !== void 0 && v.includes(\"ـ\")) || \"يجب إدخال بطريقة الصحيحة\";\n      }],\n      bankNoRule: [function (v) {\n        return !!(v !== null && v !== void 0 && v.trim()) || \"يجب إدخال رقم الفرع\";\n      }, function (v) {\n        return /^[0-9]*$/.test(v) || \"يجب إدخال أرقام فقط\";\n      }],\n      isLoading: false,\n      selectedBank: null,\n      searchBank: null,\n      filterBankData: {\n        bankName: null\n      },\n      isLoadingRegion: false,\n      selectedRegion: null,\n      searchRegion: null,\n      filterRegionData: {\n        bankId: null,\n        regionName: null\n      }\n    };\n  },\n  computed: _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, mapFields(\"branchStore\", {\n    branchNo: \"editedItem.branchNo\",\n    branchId: \"editedItem.id\",\n    name: \"editedItem.name\",\n    branchRegionId: \"editedItem.branchRegionId\",\n    lastSerialCertified: \"editedItem.lastSerialCertified\",\n    lastSerial: \"editedItem.lastSerial\",\n    lastCountChekBook: \"editedItem.lastCountChekBook\"\n  })), mapFields(\"bankRegionStore\", {\n    regions: \"activeBankRegions\"\n  })), mapFields(\"bankStore\", {\n    banks: \"grids\"\n  })), {}, {\n    formTitle: function formTitle() {\n      return this.bankId ? \"تعديل بيانات الفرع\" : \"إضافة فرع جديد\";\n    },\n    isInsert: function isInsert() {\n      return !this.bankId;\n    }\n  }),\n  watch: {\n    dialogProp: {\n      handler: function handler(data) {\n        this.dialog = data;\n      },\n      immediate: true\n    },\n    updateItemProp: {\n      handler: function handler(data) {\n        if (data) this.editSelected(data);\n      },\n      immediate: true\n    },\n    searchBank: function searchBank(val) {\n      if (this.isLoading) return;\n      this.filterBankData.bankName = val;\n      this.getBanks();\n    },\n    searchRegion: function searchRegion(val) {\n      if (this.isLoadingRegion) return;\n      this.filterRegionData.regionName = val;\n      this.getBankRegions();\n    },\n    selectedBank: function selectedBank(val) {\n      if (!val) this.clearRegionData();\n    }\n  },\n  methods: _objectSpread(_objectSpread({}, mapActions({\n    InsertBankStore: \"bankStore/InsertBank\",\n    ClearDataItemStore: \"bankStore/ClearDataItem\",\n    UpdateBankStore: \"bankStore/UpdateBank\",\n    SetDataUpdateStore: \"bankStore/SetDataUpdate\",\n    GetActiveBankRegions: \"bankRegionStore/GetActiveBankRegions\",\n    GetBankStore: \"bankStore/GetBanks\"\n  })), {}, {\n    openDialog: function openDialog() {\n      this.dialog = true;\n      this.getBanks();\n    },\n    getRegionByBankId: function getRegionByBankId() {\n      var _this$selectedBank;\n      this.filterRegionData.bankId = (_this$selectedBank = this.selectedBank) === null || _this$selectedBank === void 0 ? void 0 : _this$selectedBank.bankId;\n      this.getBankRegions();\n    },\n    getBankRegions: function getBankRegions() {\n      var _this = this;\n      if (!this.selectedBank) return;\n      try {\n        this.isLoadingRegion = true;\n        this.GetActiveBankRegions(this.filterRegionData).then(function () {\n          _this.isLoadingRegion = false;\n        }).catch(function (error) {\n          _this.notify(\"\".concat(error), \"#1d262d\");\n          _this.isLoadingRegion = false;\n        });\n      } catch (error) {\n        this.isLoadingRegion = false;\n        this.notify(error, \"#1d262d\");\n      }\n    },\n    clearRegionData: function clearRegionData() {\n      this.isLoadingRegion = false;\n      this.regions = [];\n      this.selectedRegion = null;\n      this.searchRegion = null;\n      this.filterRegionData.bankId = null;\n      this.filterRegionData.regionName = null;\n    },\n    getBanks: function getBanks() {\n      var _this2 = this;\n      try {\n        this.isLoading = true;\n        this.GetBankStore(this.filterBankData).then(function () {\n          _this2.isLoading = false;\n        }).catch(function (error) {\n          _this2.notify(\"\".concat(error), \"#1d262d\");\n          _this2.isLoading = false;\n        });\n      } catch (error) {\n        this.isLoading = false;\n        this.notify(error, \"#1d262d\");\n      }\n    },\n    editSelected: function editSelected(item) {\n      this.SetDataUpdateStore(item);\n      this.dialog = true;\n    },\n    close: function close() {\n      var _this3 = this;\n      this.dialog = false;\n      setTimeout(function () {\n        _this3.ClearDataItemStore();\n        _this3.resetValidation();\n      }, 300);\n      EventBus.$emit(\"closeDialogUpdateBank\");\n    },\n    save: function save() {\n      if (this.bankId) {\n        this.updateBank();\n      } else {\n        this.insertBank();\n      }\n    },\n    insertBank: function insertBank() {\n      var _this4 = this;\n      this.$store.dispatch(\"loading\", true);\n      this.InsertBankStore().then(function (res) {\n        _this4.notify(\"\".concat(res), \"#1d262d\");\n        EventBus.$emit(\"refreshData\");\n        _this4.close();\n      }).catch(function (error) {\n        _this4.notify(\"\".concat(error), \"#1d262d\");\n        _this4.$store.dispatch(\"loading\", false);\n      });\n    },\n    updateBank: function updateBank() {\n      var _this5 = this;\n      this.$store.dispatch(\"loading\", true);\n      this.UpdateBankStore().then(function (res) {\n        _this5.notify(\"\".concat(res), \"#1d262d\");\n        EventBus.$emit(\"refreshData\");\n        _this5.close();\n      }).catch(function (error) {\n        _this5.notify(\"\".concat(error), \"#1d262d\");\n        _this5.$store.dispatch(\"loading\", false);\n      });\n    },\n    resetValidation: function resetValidation() {\n      var _this$$refs$formBranc;\n      (_this$$refs$formBranc = this.$refs.formBranch) === null || _this$$refs$formBranc === void 0 ? void 0 : _this$$refs$formBranc.reset();\n    },\n    notify: function notify(text, color) {\n      this.$store.commit(\"showMessage\", {\n        text: text,\n        color: color\n      });\n    }\n  })\n};","map":{"version":3,"mappings":";;;;;;AA4JA;AACA;AACA;AACA;IACAA;IACAC;EACA;EAHAC;AAKA;AACA;EACAC;EACAC;IACAC;IACAC;EACA;EACAC;IACAC;EACA;EAEAC;IAAA;MACAC;MACAC;MAEAC;QAAA;MAAA;MACAC,eACA;QAAA;MAAA,GACA;QAAA;MAAA,GACA;QAAA;MAAA,EACA;MAEAC,aACA;QAAA;MAAA,GACA;QAAA;MAAA,EACA;MAEAC;MACAC;MACAC;MACAC;QACAC;MACA;MAEAC;MACAC;MACAC;MACAC;QACAC;QACAC;MACA;IACA;EAAA;EAEAC,sEACAxB;IACAyB;IACAC;IACAzB;IACA0B;IACAC;IACAC;IACAC;EACA,KAEA9B;IACA+B;EACA,KACA/B;IACAgC;EACA;IAEAC;MACA;IACA;IAEAC;MACA;IACA;EAAA,EACA;EAEAC;IACA/B;MACAgC;QACA;MACA;MACAC;IACA;IAEAlC;MACAiC;QACA;MACA;MACAC;IACA;IACAtB;MACA;MAEA;MACA;IACA;IAEAK;MACA;MACA;MAEA;IACA;IAEAN;MACA;IACA;EACA;EACAwB,yCACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IACAC;EACA;IACAC;MACA;MACA;IACA;IAEAC;MAAA;MACA;MACA;IACA;IAEAC;MAAA;MACA;MACA;QACA;QACA,iDACAC;UACA;QACA,GACAC;UACA;UACA;QACA;MACA;QACA;QACA;MACA;IACA;IAEAC;MACA;MACA;MACA;MACA;MACA;MACA;IACA;IAEAC;MAAA;MACA;QACA;QACA,uCACAH;UACA;QACA,GACAC;UACA;UACA;QACA;MACA;QACA;QACA;MACA;IACA;IAEAG;MACA;MACA;IACA;IAEAC;MAAA;MACA;MACAC;QACA;QACA;MACA;MAEAC;IACA;IAEAC;MACA;QACA;MACA;QACA;MACA;IACA;IAEAC;MAAA;MACA;MACA,uBACAT;QACA;QACAO;QACA;MACA,GACAN;QACA;QACA;MACA;IACA;IACAS;MAAA;MACA;MACA,uBACAV;QACA;QACAO;QACA;MACA,GACAN;QACA;QACA;MACA;IACA;IAEAU;MAAA;MACA;IACA;IAEAC;MACA;QAAAC;QAAAC;MAAA;IACA;EAAA;AAEA","names":["getterType","mutationType","mapFields","name","props","updateItemProp","dialogProp","components","BranchSettingComponent","data","dialog","valid","regionRules","bankNameRule","bankNoRule","isLoading","selectedBank","searchBank","filterBankData","bankName","isLoadingRegion","selectedRegion","searchRegion","filterRegionData","bankId","regionName","computed","branchNo","branchId","branchRegionId","lastSerialCertified","lastSerial","lastCountChekBook","regions","banks","formTitle","isInsert","watch","handler","immediate","methods","mapActions","InsertBankStore","ClearDataItemStore","UpdateBankStore","SetDataUpdateStore","GetActiveBankRegions","GetBankStore","openDialog","getRegionByBankId","getBankRegions","then","catch","clearRegionData","getBanks","editSelected","close","setTimeout","EventBus","save","insertBank","updateBank","resetValidation","notify","text","color"],"sourceRoot":"src/views/Branch/Components","sources":["InsertOrUpdateComponent.vue"],"sourcesContent":["<template>\r\n  <v-dialog v-model=\"dialog\" max-width=\"800px\" persistent>\r\n    <template v-slot:activator=\"{ on }\">\r\n      <template>\r\n        <v-btn\r\n          color=\"#536DFE\"\r\n          class=\"white--text \"\r\n          @click=\"openDialog\"\r\n          v-on=\"on\"\r\n          elevation=\"5\"\r\n        >\r\n          <v-icon class=\"ml-2\">mdi-plus-circle</v-icon><span> إضافة فرع</span>\r\n        </v-btn>\r\n      </template>\r\n    </template>\r\n    <v-card>\r\n      <v-card-title>\r\n        <span class=\"headline\">{{ formTitle }}</span>\r\n      </v-card-title>\r\n\r\n      <v-divider></v-divider>\r\n\r\n      <v-card-text>\r\n        <v-container>\r\n          <v-form ref=\"formBranch\" v-model=\"valid\">\r\n            <v-row>\r\n              <v-col cols=\"12\" sm=\"6\">\r\n                <v-text-field\r\n                  prepend-icon=\"mdi-numeric\"\r\n                  v-model=\"branchNo\"\r\n                  label=\"رقم الفرع\"\r\n                  :rules=\"bankNoRule\"\r\n                  required\r\n                  dense\r\n                  maxLength=\"3\"\r\n                ></v-text-field>\r\n              </v-col>\r\n              <v-col cols=\"12\" sm=\"6\">\r\n                <v-text-field\r\n                  prepend-icon=\"location_city\"\r\n                  v-model=\"name\"\r\n                  dense\r\n                  label=\"إسم الفرع\"\r\n                  :rules=\"bankNameRule\"\r\n                  required\r\n                  maxLength=\"50\"\r\n                ></v-text-field>\r\n              </v-col>\r\n\r\n              <v-col cols=\"12\" sm=\"6\">\r\n                <v-autocomplete\r\n                  v-model=\"selectedBank\"\r\n                  :items=\"banks\"\r\n                  dense\r\n                  :loading=\"isLoading\"\r\n                  single-line\r\n                  :search-input.sync=\"searchBank\"\r\n                  item-text=\"name\"\r\n                  item-value=\"bankId\"\r\n                  label=\"اختر المصرف\"\r\n                  placeholder=\"يجب إختيار المصرف\"\r\n                  return-object\r\n                  no-data-text=\"لايوجد بيانات\"\r\n                  clearable\r\n                  prepend-icon=\"mdi-bank\"\r\n                  @change=\"getRegionByBankId\"\r\n                ></v-autocomplete>\r\n              </v-col>\r\n              <v-col cols=\"12\" sm=\"6\">\r\n                <v-autocomplete\r\n                  v-model=\"selectedRegion\"\r\n                  :items=\"regions\"\r\n                  :loading=\"isLoadingRegion\"\r\n                  single-line\r\n                  dense\r\n                  :search-input.sync=\"searchRegion\"\r\n                  item-text=\"regionName\"\r\n                  item-value=\"bankRegionId\"\r\n                  label=\"اختر المنطقة\"\r\n                  placeholder=\"يجب إختيار المنطقة\"\r\n                  return-object\r\n                  no-data-text=\"لايوجد بيانات\"\r\n                  clearable\r\n                  prepend-icon=\"mdi-map-marker\"\r\n                ></v-autocomplete>\r\n              </v-col>\r\n              <v-col cols=\"12\" sm=\"6\">\r\n                <v-text-field\r\n                  prepend-icon=\"mdi-numeric\"\r\n                  v-model=\"lastSerialCertified\"\r\n                  label=\"أخر تسلسل صكوك المصدقة\"\r\n                  :rules=\"bankNoRule\"\r\n                  required\r\n                  dense\r\n                  maxLength=\"10\"\r\n                ></v-text-field>\r\n              </v-col>\r\n              <v-col cols=\"12\" sm=\"6\">\r\n                <v-text-field\r\n                  prepend-icon=\"mdi-numeric\"\r\n                  v-model=\"lastSerial\"\r\n                  label=\"أخر تسلسل لدفاتر (افراد - شركات )\"\r\n                  :rules=\"bankNoRule\"\r\n                  required\r\n                  dense\r\n                  maxLength=\"10\"\r\n                ></v-text-field>\r\n              </v-col>\r\n              <v-col cols=\"12\" sm=\"6\">\r\n                <v-text-field\r\n                  prepend-icon=\"mdi-numeric\"\r\n                  v-model=\"lastCountChekBook\"\r\n                  label=\"عداد الطلبيات\"\r\n                  :rules=\"bankNoRule\"\r\n                  required\r\n                  dense\r\n                  maxLength=\"10\"\r\n                ></v-text-field>\r\n              </v-col>\r\n            </v-row>\r\n\r\n            <v-row class=\"mb-5\">\r\n              <v-col cols=\"12\">\r\n                <v-divider color=\"#E0E0E0\"></v-divider>\r\n              </v-col>\r\n              <v-col cols=\"12\">\r\n                <span class=\"text-h5\"><v-icon>mdi-cog-outline</v-icon> إعدادات الفرع</span>\r\n              </v-col>\r\n            </v-row>\r\n            <BranchSettingComponent></BranchSettingComponent>\r\n          </v-form>\r\n        </v-container>\r\n      </v-card-text>\r\n\r\n      <v-card-actions>\r\n        <div style=\"width: 100%;text-align: center;\">\r\n          <v-btn\r\n            @click=\"save\"\r\n            class=\"mx-2 white--text\"\r\n            :disabled=\"!valid\"\r\n            color=\"#536DFE\"\r\n          >\r\n            <v-icon>save</v-icon>\r\n            <span>حفظ البيانات</span>\r\n          </v-btn>\r\n          <v-btn class=\"mx-2 white--text\" @click=\"close\" color=\"#E91D62\">\r\n            <v-icon dark>clear</v-icon>\r\n            <span>إلغاء</span>\r\n          </v-btn>\r\n        </div>\r\n      </v-card-actions>\r\n    </v-card>\r\n  </v-dialog>\r\n</template>\r\n\r\n<script>\r\nimport { EventBus } from \"../../../eventBus.js\";\r\nimport { mapActions } from \"vuex\";\r\nimport { createHelpers } from \"vuex-map-fields\";\r\nconst { mapFields } = createHelpers({\r\n  getterType: \"getDataFields\",\r\n  mutationType: \"updateDataField\",\r\n});\r\n\r\nimport BranchSettingComponent from \"../../SharedComponents/branchSettingComponent.vue\";\r\nexport default {\r\n  name: \"insert-Or-Update\",\r\n  props: {\r\n    updateItemProp: {},\r\n    dialogProp: {},\r\n  },\r\n  components: {\r\n    BranchSettingComponent,\r\n  },\r\n\r\n  data: () => ({\r\n    dialog: false,\r\n    valid: false,\r\n\r\n    regionRules: [(v) => v.length > 0 || \"الرجاء إختيار المنطقة\"],\r\n    bankNameRule: [\r\n      (v) => !!v?.trim() || \"يجب إدخال اسم الفرع\",\r\n      (v) => /^[\\u0621-\\u064A ]*$/.test(v) || \"الرجاء إدخال باللغة العربية\",\r\n      (v) => (!!v && !v?.includes(\"ـ\")) || \"يجب إدخال بطريقة الصحيحة\",\r\n    ],\r\n\r\n    bankNoRule: [\r\n      (v) => !!v?.trim() || \"يجب إدخال رقم الفرع\",\r\n      (v) => /^[0-9]*$/.test(v) || \"يجب إدخال أرقام فقط\",\r\n    ],\r\n\r\n    isLoading: false,\r\n    selectedBank: null,\r\n    searchBank: null,\r\n    filterBankData: {\r\n      bankName: null,\r\n    },\r\n\r\n    isLoadingRegion: false,\r\n    selectedRegion: null,\r\n    searchRegion: null,\r\n    filterRegionData: {\r\n      bankId: null,\r\n      regionName: null,\r\n    },\r\n  }),\r\n\r\n  computed: {\r\n    ...mapFields(\"branchStore\", {\r\n      branchNo: \"editedItem.branchNo\",\r\n      branchId: \"editedItem.id\",\r\n      name: \"editedItem.name\",\r\n      branchRegionId: \"editedItem.branchRegionId\",\r\n      lastSerialCertified: \"editedItem.lastSerialCertified\",\r\n      lastSerial: \"editedItem.lastSerial\",\r\n      lastCountChekBook: \"editedItem.lastCountChekBook\",\r\n    }),\r\n\r\n    ...mapFields(\"bankRegionStore\", {\r\n      regions: \"activeBankRegions\",\r\n    }),\r\n    ...mapFields(\"bankStore\", {\r\n      banks: \"grids\",\r\n    }),\r\n\r\n    formTitle() {\r\n      return this.bankId ? \"تعديل بيانات الفرع\" : \"إضافة فرع جديد\";\r\n    },\r\n\r\n    isInsert() {\r\n      return !this.bankId;\r\n    },\r\n  },\r\n\r\n  watch: {\r\n    dialogProp: {\r\n      handler(data) {\r\n        this.dialog = data;\r\n      },\r\n      immediate: true,\r\n    },\r\n\r\n    updateItemProp: {\r\n      handler(data) {\r\n        if (data) this.editSelected(data);\r\n      },\r\n      immediate: true,\r\n    },\r\n    searchBank(val) {\r\n      if (this.isLoading) return;\r\n\r\n      this.filterBankData.bankName = val;\r\n      this.getBanks();\r\n    },\r\n\r\n    searchRegion(val) {\r\n      if (this.isLoadingRegion) return;\r\n      this.filterRegionData.regionName = val;\r\n\r\n      this.getBankRegions();\r\n    },\r\n\r\n    selectedBank(val) {\r\n      if (!val) this.clearRegionData();\r\n    },\r\n  },\r\n  methods: {\r\n    ...mapActions({\r\n      InsertBankStore: \"bankStore/InsertBank\",\r\n      ClearDataItemStore: \"bankStore/ClearDataItem\",\r\n      UpdateBankStore: \"bankStore/UpdateBank\",\r\n      SetDataUpdateStore: \"bankStore/SetDataUpdate\",\r\n      GetActiveBankRegions: \"bankRegionStore/GetActiveBankRegions\",\r\n      GetBankStore: \"bankStore/GetBanks\",\r\n    }),\r\n    openDialog() {\r\n      this.dialog = true;\r\n      this.getBanks();\r\n    },\r\n\r\n    getRegionByBankId() {\r\n      this.filterRegionData.bankId = this.selectedBank?.bankId;\r\n      this.getBankRegions();\r\n    },\r\n\r\n    getBankRegions() {\r\n      if (!this.selectedBank) return;\r\n      try {\r\n        this.isLoadingRegion = true;\r\n        this.GetActiveBankRegions(this.filterRegionData)\r\n          .then(() => {\r\n            this.isLoadingRegion = false;\r\n          })\r\n          .catch((error) => {\r\n            this.notify(`${error}`, \"#1d262d\");\r\n            this.isLoadingRegion = false;\r\n          });\r\n      } catch (error) {\r\n        this.isLoadingRegion = false;\r\n        this.notify(error, \"#1d262d\");\r\n      }\r\n    },\r\n\r\n    clearRegionData() {\r\n      this.isLoadingRegion = false;\r\n      this.regions = [];\r\n      this.selectedRegion = null;\r\n      this.searchRegion = null;\r\n      this.filterRegionData.bankId = null;\r\n      this.filterRegionData.regionName = null;\r\n    },\r\n\r\n    getBanks() {\r\n      try {\r\n        this.isLoading = true;\r\n        this.GetBankStore(this.filterBankData)\r\n          .then(() => {\r\n            this.isLoading = false;\r\n          })\r\n          .catch((error) => {\r\n            this.notify(`${error}`, \"#1d262d\");\r\n            this.isLoading = false;\r\n          });\r\n      } catch (error) {\r\n        this.isLoading = false;\r\n        this.notify(error, \"#1d262d\");\r\n      }\r\n    },\r\n\r\n    editSelected(item) {\r\n      this.SetDataUpdateStore(item);\r\n      this.dialog = true;\r\n    },\r\n\r\n    close() {\r\n      this.dialog = false;\r\n      setTimeout(() => {\r\n        this.ClearDataItemStore();\r\n        this.resetValidation();\r\n      }, 300);\r\n\r\n      EventBus.$emit(\"closeDialogUpdateBank\");\r\n    },\r\n\r\n    save() {\r\n      if (this.bankId) {\r\n        this.updateBank();\r\n      } else {\r\n        this.insertBank();\r\n      }\r\n    },\r\n\r\n    insertBank() {\r\n      this.$store.dispatch(\"loading\", true);\r\n      this.InsertBankStore()\r\n        .then((res) => {\r\n          this.notify(`${res}`, \"#1d262d\");\r\n          EventBus.$emit(\"refreshData\");\r\n          this.close();\r\n        })\r\n        .catch((error) => {\r\n          this.notify(`${error}`, \"#1d262d\");\r\n          this.$store.dispatch(\"loading\", false);\r\n        });\r\n    },\r\n    updateBank() {\r\n      this.$store.dispatch(\"loading\", true);\r\n      this.UpdateBankStore()\r\n        .then((res) => {\r\n          this.notify(`${res}`, \"#1d262d\");\r\n          EventBus.$emit(\"refreshData\");\r\n          this.close();\r\n        })\r\n        .catch((error) => {\r\n          this.notify(`${error}`, \"#1d262d\");\r\n          this.$store.dispatch(\"loading\", false);\r\n        });\r\n    },\r\n\r\n    resetValidation() {\r\n      this.$refs.formBranch?.reset();\r\n    },\r\n\r\n    notify(text, color) {\r\n      this.$store.commit(\"showMessage\", { text: text, color: color });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style></style>\r\n"]},"metadata":{},"sourceType":"module"}