{"ast":null,"code":"import _objectSpread from \"D:/repo Tatweer/tatweerteams/CheckbooksOrderingUI/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\nimport { EventBus } from \"../../../eventBus.js\";\nimport { mapActions } from \"vuex\";\nimport { validationInput } from \"../../../models/validationInput.js\";\nimport * as enums from \"../../../models/enum.js\";\nexport default {\n  name: \"insert-OrderRequestItem\",\n  props: {\n    orderRequestIdProp: null\n  },\n  components: {},\n  data: function data() {\n    return {\n      dialog: false,\n      valid: false,\n      validationInput: validationInput,\n      enumModel: enums,\n      accounts: [],\n      headers: [{\n        text: \"رقم الحساب\",\n        value: \"accountNo\",\n        sortable: false,\n        align: \"center\"\n      }, {\n        text: \"إسم صاحب الحساب\",\n        value: \"accountName\",\n        sortable: false,\n        align: \"center\"\n      }, {\n        text: \"حالة الحساب\",\n        value: \"accountState\",\n        sortable: false,\n        align: \"center\"\n      }, {\n        text: \"الكمية\",\n        value: \"countChekBook\",\n        sortable: false,\n        align: \"center\",\n        width: 180\n      }, {\n        text: \"إضافــة\",\n        value: \"action\",\n        sortable: false,\n        align: \"center\"\n      }],\n      searchNameOrNumber: null,\n      filterData: {\n        orderRequestId: null,\n        accounNoOrName: null,\n        pageNo: 1,\n        pageSize: 30\n      },\n      page: 1,\n      pageSize: 1\n    };\n  },\n  computed: {\n    formTitle: function formTitle() {\n      return \"إضافة حساب للطلبية\";\n    }\n  },\n  watch: {\n    orderRequestIdProp: {\n      handler: function handler(data) {\n        this.filterData.orderRequestId = data;\n      },\n      immediate: true\n    }\n  },\n  methods: _objectSpread(_objectSpread({}, mapActions({\n    GetAccountWithOutOrderItem: \"insertAccountOrderItemStore/GetAccountWithOutOrderItem\"\n  })), {}, {\n    openDialog: function openDialog() {\n      this.dialog = true;\n      this.getAccounts();\n    },\n    getAccounts: function getAccounts() {\n      var _this = this;\n      this.$store.dispatch(\"loading\", true);\n      this.GetAccountWithOutOrderItem(this.filterData).then(function () {\n        _this.$store.dispatch(\"loading\", false);\n        _this.accounts = _this.$store.getters[\"insertAccountOrderItemStore/GET_ACCOUNTS\"];\n        _this.pageSize = _this.$store.getters[\"insertAccountOrderItemStore/GET_PAGESIZE\"];\n      }).catch(function (error) {\n        _this.$store.dispatch(\"loading\", false);\n        _this.notify(\"\".concat(error), \"#1d262d\");\n      });\n    },\n    isNumber: function isNumber(evt) {\n      if (evt.keyCode == 8) return true;\n      var result = this.checkIsNumber(evt.key);\n      if (!result) {\n        evt.preventDefault();\n      } else {\n        return true;\n      }\n    },\n    checkIsNumber: function checkIsNumber(number) {\n      return /^[0-9]*$/.test(number);\n    },\n    close: function close() {\n      this.dialog = false;\n      setTimeout(function () {}, 300);\n      EventBus.$emit(\"closeDialogInsertOrderRequestItem\");\n    },\n    save: function save() {},\n    insertAccountItem: function insertAccountItem(item) {\n      item.isInsert = true;\n      console.log(item);\n    },\n    resetValidation: function resetValidation() {\n      var _this$$refs$formOrder;\n      (_this$$refs$formOrder = this.$refs.formOrderRequest) === null || _this$$refs$formOrder === void 0 ? void 0 : _this$$refs$formOrder.reset();\n    },\n    onPaginationClick: function onPaginationClick(page) {\n      this.page = page;\n      this.getAccounts();\n    },\n    minusQuentity: function minusQuentity(item) {\n      if (item.isInsert) return;\n      var quentity = parseInt(item.countChekBook);\n      if (quentity == 1) return;\n      item.countChekBook = quentity - 1;\n    },\n    addQuentity: function addQuentity(item) {\n      if (item.isInsert) return;\n      var quentity = parseInt(item.countChekBook);\n      item.countChekBook = quentity + 1;\n    },\n    notify: function notify(text, color) {\n      this.$store.commit(\"showMessage\", {\n        text: text,\n        color: color\n      });\n    }\n  })\n};","map":{"version":3,"mappings":";;;AAsGA;AACA;AACA;AACA;AACA;EACAA;EACAC;IACAC;EACA;EACAC;EAEAC;IAAA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC,UACA;QACAC;QACAC;QACAC;QACAC;MACA,GACA;QACAH;QACAC;QACAC;QACAC;MACA,GACA;QACAH;QACAC;QACAC;QACAC;MACA,GACA;QACAH;QACAC;QACAC;QACAC;QACAC;MACA,GACA;QACAJ;QACAC;QACAC;QACAC;MACA,EACA;MAEAE;MACAC;QACAC;QACAC;QACAC;QACAC;MACA;MAEAC;MACAD;IACA;EAAA;EAEAE;IACAC;MACA;IACA;EACA;EAEAC;IACAvB;MACAwB;QACA;MACA;MACAC;IACA;EACA;EACAC,yCACAC;IACAC,4BACA;EACA;IACAC;MACA;MACA;IACA;IAEAC;MAAA;MACA;MACA,iDACAC;QACA;QACA,sCACA,2CACA;QACA,sCACA,2CACA;MACA,GACAC;QACA;QACA;MACA;IACA;IAEAC;MACA;MAEA;MACA;QACAC;MACA;QACA;MACA;IACA;IACAC;MACA;IACA;IAEAC;MACA;MACAC;MACAC;IACA;IAEAC;IAEAC;MACAC;MACAC;IACA;IAEAC;MAAA;MACA;IACA;IAEAC;MACA;MACA;IACA;IAEAC;MACA;MAEA;MACA;MACAJ;IACA;IACAK;MACA;MACA;MACAL;IACA;IAEAM;MACA;QAAAtC;QAAAuC;MAAA;IACA;EAAA;AAEA","names":["name","props","orderRequestIdProp","components","data","dialog","valid","validationInput","enumModel","accounts","headers","text","value","sortable","align","width","searchNameOrNumber","filterData","orderRequestId","accounNoOrName","pageNo","pageSize","page","computed","formTitle","watch","handler","immediate","methods","mapActions","GetAccountWithOutOrderItem","openDialog","getAccounts","then","catch","isNumber","evt","checkIsNumber","close","setTimeout","EventBus","save","insertAccountItem","item","console","resetValidation","onPaginationClick","minusQuentity","addQuentity","notify","color"],"sourceRoot":"src/views/OrderRequestItem/components","sources":["insertOrderItemComponent.vue"],"sourcesContent":["<template>\r\n  <v-dialog v-model=\"dialog\" max-width=\"1100px\" persistent>\r\n    <template v-slot:activator=\"{ on }\">\r\n      <template>\r\n        <v-btn\r\n          color=\"#536DFE\"\r\n          class=\"white--text\"\r\n          @click=\"openDialog\"\r\n          v-on=\"on\"\r\n          elevation=\"5\"\r\n        >\r\n          <v-icon class=\"ml-2\">mdi-plus-circle</v-icon\r\n          ><span>إضافة حساب للقائمة</span>\r\n        </v-btn>\r\n      </template>\r\n    </template>\r\n    <v-card>\r\n      <v-card-title>\r\n        <span class=\"headline\">{{ formTitle }}</span>\r\n      </v-card-title>\r\n\r\n      <v-divider></v-divider>\r\n\r\n      <v-card-text>\r\n        <v-container>\r\n          <v-row>\r\n            <v-col cols=\"12\" md=\"4\">\r\n              <v-text-field\r\n                prepend-icon=\"mdi-numeric\"\r\n                v-model=\"searchNameOrNumber\"\r\n                dense\r\n                label=\"بحث عن طريق رقم الحساب أو الإسم\"\r\n                maxLength=\"50\"\r\n              ></v-text-field>\r\n            </v-col>\r\n          </v-row>\r\n          <v-data-table\r\n            :headers=\"headers\"\r\n            :disable-pagination=\"true\"\r\n            :items=\"accounts\"\r\n            hide-default-footer\r\n            class=\"elevation-5 pa-5\"\r\n          >\r\n            <template v-slot:[`item.countChekBook`]=\"{ item }\">\r\n              <v-text-field\r\n                v-model.number=\"item.countChekBook\"\r\n                dense\r\n                maxLength=\"4\"\r\n                append-outer-icon=\"mdi-minus-circle\"\r\n                hide-details\r\n                :rules=\"[\r\n                  validationInput.numberOnly,\r\n                  validationInput.numberNotZero,\r\n                ]\"\r\n                @keydown=\"isNumber\"\r\n                prepend-icon=\"mdi-plus-circle\"\r\n                :readonly=\"item.isInsert\"\r\n                @click:append-outer=\"minusQuentity(item)\"\r\n                @click:prepend=\"addQuentity(item)\"\r\n              ></v-text-field>\r\n            </template>\r\n\r\n            <template v-slot:[`item.action`]=\"{ item }\">\r\n              <v-btn\r\n                x-small\r\n                fab\r\n                color=\"#081D38\"\r\n                @click=\"insertAccountItem(item)\"\r\n                v-if=\"!item.isInsert\"\r\n              >\r\n                <v-icon size=\"30\" color=\"#fff\">mdi-plus-circle</v-icon>\r\n              </v-btn>\r\n              <v-icon v-else size=\"30\" color=\"#081D38\">mdi-check-bold</v-icon>\r\n            </template>\r\n          </v-data-table>\r\n          <template class=\"mt-5\">\r\n            <div class=\"text-center mt-3\">\r\n              <v-pagination\r\n                v-model=\"page\"\r\n                :length=\"pageSize\"\r\n                circle\r\n                color=\"#081D38\"\r\n                @input=\"onPaginationClick\"\r\n              ></v-pagination>\r\n            </div>\r\n          </template>\r\n        </v-container>\r\n      </v-card-text>\r\n\r\n      <v-card-actions>\r\n        <div style=\"width: 100%;text-align: center;\">\r\n          <v-btn class=\"mx-2 white--text\" @click=\"close\" color=\"#E91D62\">\r\n            <v-icon dark>clear</v-icon>\r\n            <span>إلغاء</span>\r\n          </v-btn>\r\n        </div>\r\n      </v-card-actions>\r\n    </v-card>\r\n  </v-dialog>\r\n</template>\r\n\r\n<script>\r\nimport { EventBus } from \"../../../eventBus.js\";\r\nimport { mapActions } from \"vuex\";\r\nimport { validationInput } from \"../../../models/validationInput.js\";\r\nimport * as enums from \"../../../models/enum.js\";\r\nexport default {\r\n  name: \"insert-OrderRequestItem\",\r\n  props: {\r\n    orderRequestIdProp: null,\r\n  },\r\n  components: {},\r\n\r\n  data: () => ({\r\n    dialog: false,\r\n    valid: false,\r\n    validationInput: validationInput,\r\n    enumModel: enums,\r\n    accounts: [],\r\n    headers: [\r\n      {\r\n        text: \"رقم الحساب\",\r\n        value: \"accountNo\",\r\n        sortable: false,\r\n        align: \"center\",\r\n      },\r\n      {\r\n        text: \"إسم صاحب الحساب\",\r\n        value: \"accountName\",\r\n        sortable: false,\r\n        align: \"center\",\r\n      },\r\n      {\r\n        text: \"حالة الحساب\",\r\n        value: \"accountState\",\r\n        sortable: false,\r\n        align: \"center\",\r\n      },\r\n      {\r\n        text: \"الكمية\",\r\n        value: \"countChekBook\",\r\n        sortable: false,\r\n        align: \"center\",\r\n        width: 180,\r\n      },\r\n      {\r\n        text: \"إضافــة\",\r\n        value: \"action\",\r\n        sortable: false,\r\n        align: \"center\",\r\n      },\r\n    ],\r\n\r\n    searchNameOrNumber: null,\r\n    filterData: {\r\n      orderRequestId: null,\r\n      accounNoOrName: null,\r\n      pageNo: 1,\r\n      pageSize: 30,\r\n    },\r\n\r\n    page: 1,\r\n    pageSize: 1,\r\n  }),\r\n\r\n  computed: {\r\n    formTitle() {\r\n      return \"إضافة حساب للطلبية\";\r\n    },\r\n  },\r\n\r\n  watch: {\r\n    orderRequestIdProp: {\r\n      handler(data) {\r\n        this.filterData.orderRequestId = data;\r\n      },\r\n      immediate: true,\r\n    },\r\n  },\r\n  methods: {\r\n    ...mapActions({\r\n      GetAccountWithOutOrderItem:\r\n        \"insertAccountOrderItemStore/GetAccountWithOutOrderItem\",\r\n    }),\r\n    openDialog() {\r\n      this.dialog = true;\r\n      this.getAccounts();\r\n    },\r\n\r\n    getAccounts() {\r\n      this.$store.dispatch(\"loading\", true);\r\n      this.GetAccountWithOutOrderItem(this.filterData)\r\n        .then(() => {\r\n          this.$store.dispatch(\"loading\", false);\r\n          this.accounts = this.$store.getters[\r\n            \"insertAccountOrderItemStore/GET_ACCOUNTS\"\r\n          ];\r\n          this.pageSize = this.$store.getters[\r\n            \"insertAccountOrderItemStore/GET_PAGESIZE\"\r\n          ];\r\n        })\r\n        .catch((error) => {\r\n          this.$store.dispatch(\"loading\", false);\r\n          this.notify(`${error}`, \"#1d262d\");\r\n        });\r\n    },\r\n\r\n    isNumber(evt) {\r\n      if (evt.keyCode == 8) return true;\r\n\r\n      var result = this.checkIsNumber(evt.key);\r\n      if (!result) {\r\n        evt.preventDefault();\r\n      } else {\r\n        return true;\r\n      }\r\n    },\r\n    checkIsNumber(number) {\r\n      return /^[0-9]*$/.test(number);\r\n    },\r\n\r\n    close() {\r\n      this.dialog = false;\r\n      setTimeout(() => {}, 300);\r\n      EventBus.$emit(\"closeDialogInsertOrderRequestItem\");\r\n    },\r\n\r\n    save() {},\r\n\r\n    insertAccountItem(item) {\r\n      item.isInsert = true;\r\n      console.log(item);\r\n    },\r\n\r\n    resetValidation() {\r\n      this.$refs.formOrderRequest?.reset();\r\n    },\r\n\r\n    onPaginationClick(page) {\r\n      this.page = page;\r\n      this.getAccounts();\r\n    },\r\n\r\n    minusQuentity(item) {\r\n      if (item.isInsert) return;\r\n\r\n      let quentity = parseInt(item.countChekBook);\r\n      if (quentity == 1) return;\r\n      item.countChekBook = quentity - 1;\r\n    },\r\n    addQuentity(item) {\r\n      if (item.isInsert) return;\r\n      let quentity = parseInt(item.countChekBook);\r\n      item.countChekBook = quentity + 1;\r\n    },\r\n\r\n    notify(text, color) {\r\n      this.$store.commit(\"showMessage\", { text: text, color: color });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.v-input input {\r\n  max-height: 32px;\r\n  text-align: center;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}