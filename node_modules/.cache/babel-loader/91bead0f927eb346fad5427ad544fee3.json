{"ast":null,"code":"import _objectSpread from \"D:/repo Tatweer/tatweerteams/CheckbooksOrderingUI/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport { mapActions } from \"vuex\";\nimport { OrderRequestTypeToTextPublic, AccountStatusToText } from \"../../../models/mothedPublic.js\";\nimport { createHelpers } from \"vuex-map-fields\";\nimport SearchComponent from \"../Components/searchComponent.vue\";\nimport InsertOrUpdateComponent from \"../Components/InsertOrUpdateComponent.vue\";\nimport DeleteAccountComponent from \"../Components/deleteAccountComponent.vue\";\n// import UploadExcelComponent from \"../Components/uploadExcelComponent.vue\";\n\nvar _createHelpers = createHelpers({\n    getterType: \"getDataFields\",\n    mutationType: \"updateDataField\"\n  }),\n  mapFields = _createHelpers.mapFields;\nexport default {\n  name: \"LayoutsDemosBaselineFlipped\",\n  props: {\n    source: String\n  },\n  components: {\n    SearchComponent: SearchComponent,\n    InsertOrUpdateComponent: InsertOrUpdateComponent,\n    DeleteAccountComponent: DeleteAccountComponent\n    // UploadExcelComponent,\n  },\n\n  data: function data() {\n    return {\n      userPermasstion: [],\n      headers: [{\n        text: \"رقم الحساب\",\n        value: \"accountNo\",\n        sortable: false,\n        align: \"center\"\n      }, {\n        text: \"اسم الحساب\",\n        value: \"accountName\",\n        sortable: false,\n        align: \"center\"\n      }, {\n        text: \"المصرف\",\n        value: \"bankName\",\n        sortable: false,\n        align: \"center\"\n      }, {\n        text: \"المنطقة\",\n        value: \"regionName\",\n        sortable: false,\n        align: \"center\"\n      }, {\n        text: \"الفرع\",\n        value: \"branchName\",\n        sortable: false,\n        align: \"center\"\n      }, {\n        text: \"نوع الحساب\",\n        value: \"accountTypeValue\",\n        sortable: false,\n        align: \"center\"\n      }, {\n        text: \"حالة الحساب\",\n        value: \"accountStateValue\",\n        sortable: false,\n        align: \"center\"\n      }, {\n        text: \"الإجراءات\",\n        value: \"action\",\n        sortable: false,\n        align: \"center\"\n      }],\n      accountTypeToText: OrderRequestTypeToTextPublic,\n      AccountStatusToText: AccountStatusToText,\n      dialogDelete: false,\n      itemDelete: null,\n      itemToEdit: null,\n      dialogEdit: false,\n      page: 1,\n      pageSize: 1,\n      filterData: {\n        nameOrNumber: \"\",\n        bankId: null,\n        bankRegionId: null,\n        pageNo: 1,\n        pageSize: 30\n      },\n      isLoading: false,\n      searchName: \"\"\n    };\n  },\n  created: function created() {\n    this.initialize();\n  },\n  watch: {\n    searchName: function searchName(val) {\n      this.filterData.nameOrNumber = val;\n      this.page = 1;\n      this.initialize();\n    }\n  },\n  computed: _objectSpread({}, mapFields(\"accountStore\", {\n    accounts: \"grids\"\n  })),\n  methods: _objectSpread(_objectSpread({}, mapActions({\n    GetAccounts: \"accountStore/GetAccounts\",\n    ActivateAccountStore: \"accountStore/ActivateAccount\",\n    GetBanksStore: \"bankStore/GetBanks\"\n  })), {}, {\n    closeDialogEdit: function closeDialogEdit() {\n      this.itemToEdit = null;\n    },\n    closeDialogDelete: function closeDialogDelete() {\n      this.itemDelete = null;\n    },\n    activateAccount: function activateAccount(item) {\n      var _this = this;\n      this.$store.dispatch(\"loading\", true);\n      this.ActivateAccountStore(item).then(function () {\n        _this.$store.dispatch(\"loading\", false);\n      }).catch(function (error) {\n        _this.notify(\"\".concat(error), \"#1d262d\");\n        _this.$store.dispatch(\"loading\", false);\n      });\n    },\n    searchData: function searchData(filter) {\n      this.page = 1;\n      this.filterData = filter;\n      this.initialize();\n    },\n    hasPermassion: function hasPermassion(crrentUser) {\n      this.userPermasstion = this.$store.getters[\"auth/getRole\"];\n      var result = this.userPermasstion.some(function (item) {\n        return crrentUser.includes(item);\n      });\n      return result;\n    },\n    initialize: function initialize() {\n      if (!this.filterData.bankId) return;\n      this.loadAccounts();\n    },\n    loadAccounts: function loadAccounts() {\n      var _this2 = this;\n      try {\n        this.$store.dispatch(\"loading\", true);\n        this.GetAccounts(this.filterData).then(function () {\n          _this2.$store.dispatch(\"loading\", false);\n        }).catch(function (error) {\n          _this2.notify(\"\".concat(error), \"#1d262d\");\n          _this2.$store.dispatch(\"loading\", false);\n        });\n      } catch (error) {\n        this.$store.dispatch(\"loading\", false);\n        this.notify(error, \"#1d262d\");\n      }\n    },\n    deleteItem: function deleteItem(item) {\n      this.dialogDelete = true;\n      this.itemDelete = item;\n    },\n    editItem: function editItem(item) {\n      this.itemToEdit = item;\n      this.dialogEdit = true;\n    },\n    onPaginationClick: function onPaginationClick(page) {\n      this.page = page;\n      this.initialize();\n    },\n    notify: function notify(text, color) {\n      this.$store.commit(\"showMessage\", {\n        text: text,\n        color: color\n      });\n    }\n  })\n};","map":{"version":3,"mappings":";;;;AAgEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;IACAA;IACAC;EACA;EAHAC;AAKA;EACAC;EACAC;IACAC;EACA;EACAC;IACAC;IACAC;IACAC;IACA;EACA;;EAEAC;IAAA;MACAC;MACAC,UACA;QAAAC;QAAAC;QAAAC;QAAAC;MAAA,GACA;QAAAH;QAAAC;QAAAC;QAAAC;MAAA,GACA;QAAAH;QAAAC;QAAAC;QAAAC;MAAA,GACA;QAAAH;QAAAC;QAAAC;QAAAC;MAAA,GACA;QAAAH;QAAAC;QAAAC;QAAAC;MAAA,GACA;QAAAH;QAAAC;QAAAC;QAAAC;MAAA,GACA;QAAAH;QAAAC;QAAAC;QAAAC;MAAA,GACA;QAAAH;QAAAC;QAAAC;QAAAC;MAAA,EACA;MAEAC;MACAC;MAEAC;MACAC;MAEAC;MACAC;MAEAC;MACAC;MAEAC;QACAC;QACAC;QACAC;QACAC;QACAL;MACA;MAEAM;MACAC;IACA;EAAA;EAEAC;IACA;EACA;EAEAC;IACAF;MACA;MACA;MACA;IACA;EACA;EAEAG,4BACAhC;IACAiC;EACA,GACA;EAEAC,yCACAC;IACAC;IACAC;IACAC;EACA;IAEAC;MACA;IACA;IAEAC;MACA;IACA;IAEAC;MAAA;MACA;MACA,gCACAC;QACA;MACA,GACAC;QACA;QACA;MACA;IACA;IAEAC;MACA;MACA;MACA;IACA;IAEAC;MACA;MACA;QAAA,OACAC;MAAA,EACA;MACA;IACA;IAEAC;MACA;MACA;IACA;IAEAC;MAAA;MACA;QACA;QACA,kCACAN;UACA;QACA,GACAC;UACA;UACA;QACA;MACA;QACA;QACA;MACA;IACA;IAEAM;MACA;MACA;IACA;IAEAC;MACA;MACA;IACA;IAEAC;MACA;MACA;IACA;IAEAC;MACA;QAAAzC;QAAA0C;MAAA;IACA;EAAA;AAEA","names":["getterType","mutationType","mapFields","name","props","source","components","SearchComponent","InsertOrUpdateComponent","DeleteAccountComponent","data","userPermasstion","headers","text","value","sortable","align","accountTypeToText","AccountStatusToText","dialogDelete","itemDelete","itemToEdit","dialogEdit","page","pageSize","filterData","nameOrNumber","bankId","bankRegionId","pageNo","isLoading","searchName","created","watch","computed","accounts","methods","mapActions","GetAccounts","ActivateAccountStore","GetBanksStore","closeDialogEdit","closeDialogDelete","activateAccount","then","catch","searchData","hasPermassion","crrentUser","initialize","loadAccounts","deleteItem","editItem","onPaginationClick","notify","color"],"sourceRoot":"src/views/Account/Pages","sources":["Index.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <v-card min-height=\"40rem\" color=\"transparent\" elevation=\"0\" height=\"auto\" style=\"padding:30px; \">\r\n            <SearchComponent @search-data=\"searchData\"></SearchComponent>\r\n\r\n            <template v-if=\"itemDelete\">\r\n                <DeleteAccountComponent @close-delete-dialog=\"closeDialogDelete\" @refresh-data=\"initialize\"\r\n                    :deleteItemProp=\"itemDelete\">\r\n                </DeleteAccountComponent>\r\n            </template>\r\n\r\n            <!-- <template>\r\n                <UploadExcelComponent></UploadExcelComponent>\r\n            </template> -->\r\n\r\n            <v-data-table :headers=\"headers\" :disable-pagination=\"true\" :items=\"accounts\" hide-default-footer\r\n                class=\"elevation-5 pa-5\">\r\n\r\n                <template v-slot:top>\r\n                    <v-toolbar flat color=\"white\">\r\n                        <v-toolbar-title>إعدادات الحسابات</v-toolbar-title>\r\n                        <v-divider class=\"mx-4\" inset vertical></v-divider>\r\n                        <v-spacer />\r\n                        <InsertOrUpdateComponent \r\n                            :dialogProp=\"dialogEdit\" \r\n                            @refresh-data=\"initialize\"\r\n                            @close-edit-account=\"closeDialogEdit\" \r\n                            :updateItemProp=\"itemToEdit\">\r\n                        </InsertOrUpdateComponent>\r\n                    </v-toolbar>\r\n                </template>\r\n\r\n                <template v-slot:[`item.accountStateValue`]=\"{ item }\">\r\n                    <v-switch dense color=\"#536DFE\" class=\"justify-center text-center mr-3 \"\r\n                        :input-value=\"AccountStatusToText(item.accountStateValue)\" @change=\"activateAccount(item)\">\r\n                    </v-switch>\r\n                </template>\r\n\r\n                <template v-slot:[`item.accountTypeValue`]=\"{ item }\">\r\n                        {{ accountTypeToText(item.accountTypeValue) }}\r\n                </template>\r\n\r\n                <template v-slot:[`item.action`]=\"{ item }\">\r\n                    <v-btn x-small fab color=\"#536DFE\" @click=\"editItem(item)\">\r\n                        <v-icon color=\"#fff\">mdi-text-box-edit</v-icon>\r\n                    </v-btn>\r\n                    <v-btn class=\"mx-2\" x-small fab color=\"#EDEDED\" @click=\"deleteItem(item)\">\r\n                        <v-icon color=\"#E91D62\">mdi-delete</v-icon>\r\n                    </v-btn>\r\n                </template>\r\n\r\n            </v-data-table>\r\n\r\n            <template class=\"mt-5\">\r\n                <div class=\"text-center mt-3\">\r\n                    <v-pagination v-model=\"page\" :length=\"pageSize\" circle color=\"#081D38\" @input=\"onPaginationClick\">\r\n                    </v-pagination>\r\n                </div>\r\n            </template>\r\n        </v-card>\r\n    </div>\r\n</template>\r\n  \r\n<script>\r\nimport { mapActions } from \"vuex\";\r\nimport { OrderRequestTypeToTextPublic, AccountStatusToText } from \"../../../models/mothedPublic.js\"\r\nimport { createHelpers } from \"vuex-map-fields\";\r\nimport SearchComponent from \"../Components/searchComponent.vue\";\r\nimport InsertOrUpdateComponent from \"../Components/InsertOrUpdateComponent.vue\";\r\nimport DeleteAccountComponent from \"../Components/deleteAccountComponent.vue\";\r\n// import UploadExcelComponent from \"../Components/uploadExcelComponent.vue\";\r\n\r\nconst { mapFields } = createHelpers({\r\n    getterType: \"getDataFields\",\r\n    mutationType: \"updateDataField\",\r\n});\r\n\r\nexport default {\r\n    name: \"LayoutsDemosBaselineFlipped\",\r\n    props: {\r\n        source: String,\r\n    },\r\n    components: {\r\n        SearchComponent,\r\n        InsertOrUpdateComponent,\r\n        DeleteAccountComponent,\r\n        // UploadExcelComponent,\r\n    },\r\n\r\n    data: () => ({\r\n        userPermasstion: [],\r\n        headers: [\r\n            { text: \"رقم الحساب\", value: \"accountNo\", sortable: false, align: \"center\", },\r\n            { text: \"اسم الحساب\", value: \"accountName\", sortable: false, align: \"center\", },\r\n            { text: \"المصرف\", value: \"bankName\", sortable: false, align: \"center\" },\r\n            { text: \"المنطقة\", value: \"regionName\", sortable: false, align: \"center\" },\r\n            { text: \"الفرع\", value: \"branchName\", sortable: false, align: \"center\" },\r\n            { text: \"نوع الحساب\", value: \"accountTypeValue\", sortable: false, align: \"center\", },\r\n            { text: \"حالة الحساب\", value: \"accountStateValue\", sortable: false, align: \"center\", },\r\n            { text: \"الإجراءات\", value: \"action\", sortable: false, align: \"center\", },\r\n        ],\r\n\r\n        accountTypeToText : OrderRequestTypeToTextPublic,\r\n        AccountStatusToText: AccountStatusToText,\r\n\r\n        dialogDelete: false,\r\n        itemDelete: null,\r\n\r\n        itemToEdit: null,\r\n        dialogEdit: false,\r\n\r\n        page: 1,\r\n        pageSize: 1,\r\n\r\n        filterData: {\r\n            nameOrNumber: \"\",\r\n            bankId: null,\r\n            bankRegionId: null,\r\n            pageNo: 1,\r\n            pageSize: 30,\r\n        },\r\n\r\n        isLoading: false,\r\n        searchName: \"\",\r\n    }),\r\n\r\n    created() {\r\n        this.initialize();\r\n    },\r\n\r\n    watch: {\r\n        searchName(val) {\r\n            this.filterData.nameOrNumber = val;\r\n            this.page = 1;\r\n            this.initialize();\r\n        },\r\n    },\r\n\r\n    computed: {\r\n        ...mapFields(\"accountStore\", {\r\n            accounts: \"grids\",\r\n        }),\r\n    },\r\n\r\n    methods: {\r\n        ...mapActions({\r\n            GetAccounts: \"accountStore/GetAccounts\",\r\n            ActivateAccountStore: \"accountStore/ActivateAccount\",\r\n            GetBanksStore: \"bankStore/GetBanks\",\r\n        }),\r\n\r\n        closeDialogEdit() {\r\n            this.itemToEdit = null;\r\n        },\r\n\r\n        closeDialogDelete() {\r\n            this.itemDelete = null;\r\n        },\r\n\r\n        activateAccount(item) {\r\n            this.$store.dispatch(\"loading\", true);\r\n            this.ActivateAccountStore(item)\r\n                .then(() => {\r\n                    this.$store.dispatch(\"loading\", false);\r\n                })\r\n                .catch((error) => {\r\n                    this.notify(`${error}`, \"#1d262d\");\r\n                    this.$store.dispatch(\"loading\", false);\r\n                });\r\n        },\r\n\r\n        searchData(filter) {\r\n            this.page = 1;\r\n            this.filterData = filter;\r\n            this.initialize();\r\n        },\r\n\r\n        hasPermassion(crrentUser) {\r\n            this.userPermasstion = this.$store.getters[\"auth/getRole\"];\r\n            var result = this.userPermasstion.some((item) =>\r\n                crrentUser.includes(item)\r\n            );\r\n            return result;\r\n        },\r\n\r\n        initialize() {\r\n            if (!this.filterData.bankId) return;\r\n            this.loadAccounts();\r\n        },\r\n\r\n        loadAccounts() {\r\n            try {\r\n                this.$store.dispatch(\"loading\", true);\r\n                this.GetAccounts(this.filterData)\r\n                    .then(() => {\r\n                        this.$store.dispatch(\"loading\", false);\r\n                    })\r\n                    .catch((error) => {\r\n                        this.notify(`${error}`, \"#1d262d\");\r\n                        this.$store.dispatch(\"loading\", false);\r\n                    });\r\n            } catch (error) {\r\n                this.$store.dispatch(\"loading\", false);\r\n                this.notify(error, \"#1d262d\");\r\n            }\r\n        },\r\n\r\n        deleteItem(item) {\r\n            this.dialogDelete = true;\r\n            this.itemDelete = item;\r\n        },\r\n\r\n        editItem(item) {\r\n            this.itemToEdit = item;\r\n            this.dialogEdit = true;\r\n        },\r\n\r\n        onPaginationClick(page) {\r\n            this.page = page;\r\n            this.initialize();\r\n        },\r\n\r\n        notify(text, color) {\r\n            this.$store.commit(\"showMessage\", { text: text, color: color });\r\n        },\r\n    },\r\n};\r\n</script>\r\n  \r\n<style scoped>\r\n/* delete and edit icon disable color */\r\n.theme--dark.v-icon--disabled {\r\n    color: rgba(221, 59, 59, 0.5) !important;\r\n}\r\n\r\n/* Activate icon disable color */\r\n.theme--light.v-icon--disabled {\r\n    color: rgba(221, 59, 59, 0.5) !important;\r\n}\r\n</style>\r\n>\r\n  "]},"metadata":{},"sourceType":"module"}