{"ast":null,"code":"import { mapActions } from \"vuex\";\nimport { createHelpers } from \"vuex-map-fields\";\nconst {\n  mapFields\n} = createHelpers({\n  getterType: \"getDataFields\",\n  mutationType: \"updateDataField\"\n});\nexport default {\n  props: {\n    noteRejectItemProp: {}\n  },\n  name: \"Delete-Item\",\n  data: () => ({\n    resonRefuseDialog: false,\n    reasonRefuseItem: {\n      orderRequestId: null\n    },\n    defaultItem: {\n      orderRequestId: null\n    }\n  }),\n  watch: {\n    noteRejectItemProp: {\n      handler(data) {\n        if (data) this.displayResonRefuseDialog(data);\n      },\n      immediate: true\n    }\n  },\n  computed: {\n    ...mapFields(\"rejectNoteStore\", {\n      rejectNote: \"rejectNote\"\n    }),\n    messageReject() {\n      if (!this.rejectNote?.note) return \"\";\n      let values = this.rejectNote?.note?.split(\"_\");\n      if (values.length == 0) return \"لم يتم إدخال سبب الرفض\";\n      let index = 0;\n      let message = \"\";\n      values.forEach(element => {\n        index++;\n        message = message + ` (${index}) ${element} .. \\n`;\n      });\n      return message;\n    }\n  },\n  methods: {\n    ...mapActions({\n      GetRejectNoteByOrderId: \"rejectNoteStore/GetRejectNoteByOrderId\"\n    }),\n    getRejectNoteByOrderId() {\n      this.$store.dispatch(\"loading\", true);\n      this.GetRejectNoteByOrderId(this.reasonRefuseItem).then(() => {\n        this.$store.dispatch(\"loading\", false);\n      }).catch(error => {\n        this.notify(`${error}`, \"#1d262d\");\n        this.$store.dispatch(\"loading\", false);\n      });\n    },\n    displayResonRefuseDialog(item) {\n      this.reasonRefuseItem.orderRequestId = item.id;\n      this.getRejectNoteByOrderId();\n      this.resonRefuseDialog = true;\n    },\n    closeResonRefuseDialog() {\n      this.reasonRefuseItem = Object.assign({}, this.defaultItem);\n      this.resonRefuseDialog = false;\n      this.$emit(\"close-dialog\");\n    },\n    notify(text, color) {\n      this.$store.commit(\"showMessage\", {\n        text: text,\n        color: color\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"AA2CA;AACA;AACA;EAAAA;AAAA;EACAC;EACAC;AACA;AACA;EACAC;IACAC;EACA;EACAC;EACAC;IACAC;IACAC;MACAC;IACA;IACAC;MACAD;IACA;EACA;EAEAE;IACAP;MACAQ;QACA;MACA;MACAC;IACA;EACA;EAEAC;IACA;MACAC;IACA;IAEAC;MACA;MAEA;MAEA;MACA;MACA;MACAC;QACAC;QACAC;MACA;MACA;IACA;EACA;EAEAC;IACA;MACAC;IACA;IAEAC;MACA;MACA,mDACAC;QACA;MACA,GACAC;QACA;QACA;MACA;IACA;IAEAC;MACA;MACA;MACA;IACA;IAEAC;MACA;MACA;MACA;IACA;IAEAC;MACA;QAAAC;QAAAC;MAAA;IACA;EACA;AACA","names":["mapFields","getterType","mutationType","props","noteRejectItemProp","name","data","resonRefuseDialog","reasonRefuseItem","orderRequestId","defaultItem","watch","handler","immediate","computed","rejectNote","messageReject","values","index","message","methods","GetRejectNoteByOrderId","getRejectNoteByOrderId","then","catch","displayResonRefuseDialog","closeResonRefuseDialog","notify","text","color"],"sourceRoot":"src/views/orderRequestReject/components","sources":["rejectNoteComponent.vue"],"sourcesContent":["<template>\r\n  <v-dialog\r\n    v-model=\"resonRefuseDialog\"\r\n    min-height=\"200px\"\r\n    max-width=\"500px\"\r\n    persistent\r\n  >\r\n    <v-card>\r\n      <v-card-title>\r\n        <span class=\"headline\">أسباب الرفض</span>\r\n      </v-card-title>\r\n      <v-divider></v-divider>\r\n\r\n      <v-card-text>\r\n        <v-textarea\r\n          outlined\r\n          prepend-icon=\"mdi-file-document-alert\"\r\n          v-model=\"messageReject\"\r\n          label=\"سبب الرفض\"\r\n          dense\r\n          autofocus\r\n          readonly\r\n          class=\"mt-5\"\r\n        ></v-textarea>\r\n      </v-card-text>\r\n\r\n      <v-card-actions>\r\n        <div style=\"width: 100%;text-align: center; \">\r\n          <v-btn\r\n            @click=\"closeResonRefuseDialog\"\r\n            class=\"mx-2 white--text\"\r\n            color=\"#E91D62\"\r\n          >\r\n            <v-icon style=\"font-size: 19px;\" dark>clear</v-icon>\r\n            <span>إغلاق</span>\r\n          </v-btn>\r\n        </div>\r\n      </v-card-actions>\r\n    </v-card>\r\n  </v-dialog>\r\n</template>\r\n\r\n<script>\r\nimport { mapActions } from \"vuex\";\r\nimport { createHelpers } from \"vuex-map-fields\";\r\nconst { mapFields } = createHelpers({\r\n  getterType: \"getDataFields\",\r\n  mutationType: \"updateDataField\",\r\n});\r\nexport default {\r\n  props: {\r\n    noteRejectItemProp: {},\r\n  },\r\n  name: \"Delete-Item\",\r\n  data: () => ({\r\n    resonRefuseDialog: false,\r\n    reasonRefuseItem: {\r\n      orderRequestId: null,\r\n    },\r\n    defaultItem: {\r\n      orderRequestId: null,\r\n    },\r\n  }),\r\n\r\n  watch: {\r\n    noteRejectItemProp: {\r\n      handler(data) {\r\n        if (data) this.displayResonRefuseDialog(data);\r\n      },\r\n      immediate: true,\r\n    },\r\n  },\r\n\r\n  computed: {\r\n    ...mapFields(\"rejectNoteStore\", {\r\n      rejectNote: \"rejectNote\",\r\n    }),\r\n\r\n    messageReject() {\r\n      if (!this.rejectNote?.note) return \"\";\r\n\r\n      let values = this.rejectNote?.note?.split(\"_\");\r\n\r\n      if (values.length == 0) return \"لم يتم إدخال سبب الرفض\";\r\n      let index = 0;\r\n      let message = \"\";\r\n      values.forEach((element) => {\r\n        index++;\r\n        message = message + ` (${index}) ${element} .. \\n`;\r\n      });\r\n      return message;\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    ...mapActions({\r\n      GetRejectNoteByOrderId: \"rejectNoteStore/GetRejectNoteByOrderId\",\r\n    }),\r\n\r\n    getRejectNoteByOrderId() {\r\n      this.$store.dispatch(\"loading\", true);\r\n      this.GetRejectNoteByOrderId(this.reasonRefuseItem)\r\n        .then(() => {\r\n          this.$store.dispatch(\"loading\", false);\r\n        })\r\n        .catch((error) => {\r\n          this.notify(`${error}`, \"#1d262d\");\r\n          this.$store.dispatch(\"loading\", false);\r\n        });\r\n    },\r\n\r\n    displayResonRefuseDialog(item) {\r\n      this.reasonRefuseItem.orderRequestId = item.id;\r\n      this.getRejectNoteByOrderId();\r\n      this.resonRefuseDialog = true;\r\n    },\r\n\r\n    closeResonRefuseDialog() {\r\n      this.reasonRefuseItem = Object.assign({}, this.defaultItem);\r\n      this.resonRefuseDialog = false;\r\n      this.$emit(\"close-dialog\");\r\n    },\r\n\r\n    notify(text, color) {\r\n      this.$store.commit(\"showMessage\", { text: text, color: color });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style></style>\r\n"]},"metadata":{},"sourceType":"module"}