{"ast":null,"code":"import { UserTypeStateToTextPublic } from \"../../../../models/mothedPublic.js\";\nimport { mapActions } from \"vuex\";\nimport { createHelpers } from \"vuex-map-fields\";\nconst {\n  mapFields\n} = createHelpers({\n  getterType: \"getDataFields\",\n  mutationType: \"updateDataField\"\n});\nimport searchRoleComponent from \"../components/searchRoleComponent.vue\";\nimport InsertOrUpdateComponent from \"../components/insertOrUpdateRoleComponent.vue\";\nimport DeleteRoleComponent from \"../components/deleteRoleComponent.vue\";\nexport default {\n  name: \"LayoutsDemosBaselineFlipped\",\n  props: {\n    source: String\n  },\n  components: {\n    searchRoleComponent,\n    InsertOrUpdateComponent,\n    DeleteRoleComponent\n    // DeleteComponent,\n    // BranchSettingComponent,\n    // BranchWorkTimeComponent,\n  },\n\n  data: () => ({\n    userPermasstion: [],\n    headers: [{\n      text: \"اسم الدور\",\n      value: \"name\",\n      sortable: false,\n      align: \"center\"\n    }, {\n      text: \"التبعية المستخدمين\",\n      value: \"userType\",\n      sortable: false,\n      align: \"center\"\n    }, {\n      text: \"حالة الدور\",\n      value: \"active\",\n      sortable: false,\n      align: \"center\"\n    }, {\n      text: \"الإجراءات\",\n      value: \"action\",\n      sortable: false,\n      align: \"center\"\n    }],\n    page: 1,\n    pageSize: 1,\n    filterData: {\n      name: null,\n      userType: null,\n      pageNo: 1,\n      pageSize: 30\n    },\n    updateItem: null,\n    itemDelete: null\n  }),\n  created() {\n    this.initialize();\n  },\n  watch: {},\n  computed: {\n    ...mapFields(\"roleStore\", {\n      grids: \"grids\",\n      pageCount: \"pageCount\"\n    })\n  },\n  methods: {\n    ...mapActions({\n      GetRoles: \"roleStore/GetRoles\",\n      ActivationRole: \"roleStore/ActivationRole\"\n    }),\n    userTypeStateToText(userType) {\n      return UserTypeStateToTextPublic(userType);\n    },\n    searchData(filter) {\n      this.page = 1;\n      this.filterData = filter;\n      this.initialize();\n    },\n    closeDialogInsertOrUpdate() {\n      this.updateItem = null;\n    },\n    closeDialogDelete() {\n      this.itemDelete = null;\n    },\n    hasPermassion(crrentUser) {\n      this.userPermasstion = this.$store.getters[\"auth/getRole\"];\n      var result = this.userPermasstion.some(item => crrentUser.includes(item));\n      return result;\n    },\n    initialize() {\n      try {\n        this.filterData.pageNo = this.page;\n        this.$store.dispatch(\"loading\", true);\n        this.GetRoles(this.filterData).then(() => {\n          this.$store.dispatch(\"loading\", false);\n          this.pageSize = this.pageCount;\n        }).catch(error => {\n          this.notify(`${error}`, \"#1d262d\");\n          this.$store.dispatch(\"loading\", false);\n        });\n      } catch (error) {\n        this.$store.dispatch(\"loading\", false);\n        this.notify(error, \"#1d262d\");\n      }\n    },\n    activationRole(item) {\n      this.$store.dispatch(\"loading\", true);\n      this.ActivationRole(item).then(() => {\n        this.initialize();\n      }).catch(error => {\n        this.notify(`${error}`, \"#1d262d\");\n        this.$store.dispatch(\"loading\", false);\n      });\n    },\n    editItem(item) {\n      this.updateItem = item;\n    },\n    deleteItem(item) {\n      this.itemDelete = item;\n    },\n    onPaginationClick(page) {\n      this.page = page;\n      this.initialize();\n    },\n    notify(text, color) {\n      this.$store.commit(\"showMessage\", {\n        text: text,\n        color: color\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"AA2FA;AACA;AACA;AACA;EAAAA;AAAA;EACAC;EACAC;AACA;AACA;AACA;AACA;AAEA;EACAC;EACAC;IACAC;EACA;EACAC;IACAC;IACAC;IACAC;IACA;IACA;IACA;EACA;;EAEAC;IACAC;IACAC,UACA;MAAAC;MAAAC;MAAAC;MAAAC;IAAA,GACA;MACAH;MACAC;MACAC;MACAC;IACA,GACA;MACAH;MACAC;MACAC;MACAC;IACA,GACA;MACAH;MACAC;MACAC;MACAC;IACA,EACA;IAEAC;IACAC;IAEAC;MACAhB;MACAiB;MACAC;MACAH;IACA;IACAI;IACAC;EACA;EAEAC;IACA;EACA;EAEAC;EAEAC;IACA;MACAC;MACAC;IACA;EACA;EAEAC;IACA;MACAC;MACAC;IACA;IAEAC;MACA;IACA;IAEAC;MACA;MACA;MACA;IACA;IACAC;MACA;IACA;IAEAC;MACA;IACA;IAEAC;MACA;MACA,+CACAC,0BACA;MACA;IACA;IAEAC;MACA;QACA;QACA;QACA,+BACAC;UACA;UACA;QACA,GACAC;UACA;UACA;QACA;MACA;QACA;QACA;MACA;IACA;IAEAC;MACA;MACA,0BACAF;QACA;MACA,GACAC;QACA;QACA;MACA;IACA;IAEAE;MACA;IACA;IACAC;MACA;IACA;IAEAC;MACA;MACA;IACA;IAEAC;MACA;QAAAhC;QAAAiC;MAAA;IACA;EACA;AACA","names":["mapFields","getterType","mutationType","name","props","source","components","searchRoleComponent","InsertOrUpdateComponent","DeleteRoleComponent","data","userPermasstion","headers","text","value","sortable","align","page","pageSize","filterData","userType","pageNo","updateItem","itemDelete","created","watch","computed","grids","pageCount","methods","GetRoles","ActivationRole","userTypeStateToText","searchData","closeDialogInsertOrUpdate","closeDialogDelete","hasPermassion","crrentUser","initialize","then","catch","activationRole","editItem","deleteItem","onPaginationClick","notify","color"],"sourceRoot":"src/views/userManagment/role/pages","sources":["index.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <template v-if=\"itemDelete\">\r\n      <DeleteRoleComponent\r\n        :deleteItemProp=\"itemDelete\"\r\n        @refresh-data=\"initialize\"\r\n        @close-dialog-delete=\"closeDialogDelete\"\r\n      ></DeleteRoleComponent>\r\n    </template>\r\n    <v-card\r\n      min-height=\"40rem\"\r\n      color=\"transparent\"\r\n      elevation=\"0\"\r\n      height=\"auto\"\r\n      style=\"padding:30px; \"\r\n    >\r\n      <searchRoleComponent @search-data=\"searchData\"></searchRoleComponent>\r\n      <v-data-table\r\n        :headers=\"headers\"\r\n        :disable-pagination=\"true\"\r\n        :items=\"grids\"\r\n        hide-default-footer\r\n        dense\r\n        class=\"elevation-5 pa-5\"\r\n      >\r\n        <template v-slot:top>\r\n          <v-toolbar flat color=\"white\">\r\n            <v-toolbar-title>إدارة الأدوار</v-toolbar-title>\r\n            <v-divider class=\"mx-4\" inset vertical></v-divider>\r\n            <v-spacer />\r\n\r\n            <InsertOrUpdateComponent\r\n              :updateItemProp=\"updateItem\"\r\n              @close-dialog-InsertOrUpdate=\"closeDialogInsertOrUpdate\"\r\n              @refresh-data=\"initialize\"\r\n            ></InsertOrUpdateComponent>\r\n          </v-toolbar>\r\n        </template>\r\n\r\n        <template v-slot:[`item.active`]=\"{ item }\">\r\n          <v-switch\r\n            dense\r\n            color=\"#536DFE\"\r\n            hide-details\r\n            class=\"justify-center text-center  mb-4 d-inline-block\"\r\n            :input-value=\"item.isActive\"\r\n            @click=\"activationRole(item)\"\r\n          ></v-switch>\r\n        </template>\r\n        <template v-slot:[`item.action`]=\"{ item }\">\r\n          <v-btn x-small fab color=\"#536DFE\" @click=\"editItem(item)\">\r\n            <v-icon color=\"#fff\">mdi-text-box-edit</v-icon>\r\n          </v-btn>\r\n\r\n          <v-btn\r\n            x-small\r\n            fab\r\n            class=\"mx-1\"\r\n            color=\"#536DFE\"\r\n            @click=\"deleteItem(item)\"\r\n          >\r\n            <v-icon color=\"#fff\">mdi-delete</v-icon>\r\n          </v-btn>\r\n        </template>\r\n        <template v-slot:[`item.userType`]=\"{ item }\">\r\n          {{ userTypeStateToText(item.userType) }}\r\n        </template>\r\n\r\n        <template v-slot:no-data>\r\n          <v-btn color=\"#081D38\" class=\"white--text\" @click=\"initialize\"\r\n            >عرض البيانات</v-btn\r\n          >\r\n        </template>\r\n      </v-data-table>\r\n\r\n      <template class=\"mt-5\">\r\n        <div class=\"text-center mt-3\">\r\n          <v-pagination\r\n            v-model=\"page\"\r\n            :length=\"pageSize\"\r\n            circle\r\n            color=\"#081D38\"\r\n            @input=\"onPaginationClick\"\r\n          ></v-pagination>\r\n        </div>\r\n      </template>\r\n    </v-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { UserTypeStateToTextPublic } from \"../../../../models/mothedPublic.js\";\r\nimport { mapActions } from \"vuex\";\r\nimport { createHelpers } from \"vuex-map-fields\";\r\nconst { mapFields } = createHelpers({\r\n  getterType: \"getDataFields\",\r\n  mutationType: \"updateDataField\",\r\n});\r\nimport searchRoleComponent from \"../components/searchRoleComponent.vue\";\r\nimport InsertOrUpdateComponent from \"../components/insertOrUpdateRoleComponent.vue\";\r\nimport DeleteRoleComponent from \"../components/deleteRoleComponent.vue\";\r\n\r\nexport default {\r\n  name: \"LayoutsDemosBaselineFlipped\",\r\n  props: {\r\n    source: String,\r\n  },\r\n  components: {\r\n    searchRoleComponent,\r\n    InsertOrUpdateComponent,\r\n    DeleteRoleComponent,\r\n    // DeleteComponent,\r\n    // BranchSettingComponent,\r\n    // BranchWorkTimeComponent,\r\n  },\r\n\r\n  data: () => ({\r\n    userPermasstion: [],\r\n    headers: [\r\n      { text: \"اسم الدور\", value: \"name\", sortable: false, align: \"center\" },\r\n      {\r\n        text: \"التبعية المستخدمين\",\r\n        value: \"userType\",\r\n        sortable: false,\r\n        align: \"center\",\r\n      },\r\n      {\r\n        text: \"حالة الدور\",\r\n        value: \"active\",\r\n        sortable: false,\r\n        align: \"center\",\r\n      },\r\n      {\r\n        text: \"الإجراءات\",\r\n        value: \"action\",\r\n        sortable: false,\r\n        align: \"center\",\r\n      },\r\n    ],\r\n\r\n    page: 1,\r\n    pageSize: 1,\r\n\r\n    filterData: {\r\n      name: null,\r\n      userType: null,\r\n      pageNo: 1,\r\n      pageSize: 30,\r\n    },\r\n    updateItem: null,\r\n    itemDelete: null,\r\n  }),\r\n\r\n  created() {\r\n    this.initialize();\r\n  },\r\n\r\n  watch: {},\r\n\r\n  computed: {\r\n    ...mapFields(\"roleStore\", {\r\n      grids: \"grids\",\r\n      pageCount: \"pageCount\",\r\n    }),\r\n  },\r\n\r\n  methods: {\r\n    ...mapActions({\r\n      GetRoles: \"roleStore/GetRoles\",\r\n      ActivationRole: \"roleStore/ActivationRole\",\r\n    }),\r\n\r\n    userTypeStateToText(userType) {\r\n      return UserTypeStateToTextPublic(userType);\r\n    },\r\n\r\n    searchData(filter) {\r\n      this.page = 1;\r\n      this.filterData = filter;\r\n      this.initialize();\r\n    },\r\n    closeDialogInsertOrUpdate() {\r\n      this.updateItem = null;\r\n    },\r\n\r\n    closeDialogDelete() {\r\n      this.itemDelete = null;\r\n    },\r\n\r\n    hasPermassion(crrentUser) {\r\n      this.userPermasstion = this.$store.getters[\"auth/getRole\"];\r\n      var result = this.userPermasstion.some((item) =>\r\n        crrentUser.includes(item)\r\n      );\r\n      return result;\r\n    },\r\n\r\n    initialize() {\r\n      try {\r\n        this.filterData.pageNo=this.page;\r\n        this.$store.dispatch(\"loading\", true);\r\n        this.GetRoles(this.filterData)\r\n          .then(() => {\r\n            this.$store.dispatch(\"loading\", false);\r\n            this.pageSize = this.pageCount;\r\n          })\r\n          .catch((error) => {\r\n            this.notify(`${error}`, \"#1d262d\");\r\n            this.$store.dispatch(\"loading\", false);\r\n          });\r\n      } catch (error) {\r\n        this.$store.dispatch(\"loading\", false);\r\n        this.notify(error, \"#1d262d\");\r\n      }\r\n    },\r\n\r\n    activationRole(item) {\r\n      this.$store.dispatch(\"loading\", true);\r\n      this.ActivationRole(item)\r\n        .then(() => {\r\n          this.initialize();\r\n        })\r\n        .catch((error) => {\r\n          this.notify(`${error}`, \"#1d262d\");\r\n          this.$store.dispatch(\"loading\", false);\r\n        });\r\n    },\r\n\r\n    editItem(item) {\r\n      this.updateItem = item;\r\n    },\r\n    deleteItem(item) {\r\n      this.itemDelete = item;\r\n    },\r\n\r\n    onPaginationClick(page) {\r\n      this.page = page;\r\n      this.initialize();\r\n    },\r\n\r\n    notify(text, color) {\r\n      this.$store.commit(\"showMessage\", { text: text, color: color });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* delete and edit icon disable color */\r\n.theme--dark.v-icon--disabled {\r\n  color: rgba(221, 59, 59, 0.5) !important;\r\n}\r\n\r\n/* Activate icon disable color */\r\n.theme--light.v-icon--disabled {\r\n  color: rgba(221, 59, 59, 0.5) !important;\r\n}</style\r\n>>\r\n"]},"metadata":{},"sourceType":"module"}