{"ast":null,"code":"import _objectSpread from \"D:/repo Tatweer/tatweerteams/CheckbooksOrderingUI/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { mapActions } from \"vuex\";\nimport { createHelpers } from \"vuex-map-fields\";\nimport { UserTypeStateList } from \"../../../models/enum\";\nimport LogDetailsComponent from \"../Components/LogDetailsComponent.vue\";\nimport SearchInsideLogComponent from \"../Components/SearchInsideLogComponent.vue\";\nimport { UserTypeStateToTextPublic as _UserTypeStateToTextPublic, LogActionTypeToText as _LogActionTypeToText } from \"../../../models/mothedPublic.js\";\nvar _createHelpers = createHelpers({\n    getterType: \"getDataFields\",\n    mutationType: \"updateDataField\"\n  }),\n  mapFields = _createHelpers.mapFields;\nexport default {\n  name: \"\",\n  props: {\n    source: String\n  },\n  components: {\n    LogDetailsComponent: LogDetailsComponent,\n    SearchInsideLogComponent: SearchInsideLogComponent\n  },\n  data: function data() {\n    return {\n      userPermasstion: [],\n      userTypes: UserTypeStateList,\n      itemToDisplayOnDetailsDialog: null,\n      detailsDialog: false,\n      headers: [{\n        text: \"رقم الفرع\",\n        value: \"branchNumber\",\n        sortable: false,\n        align: \"center\"\n      }, {\n        text: \"اسم المستخدم\",\n        value: \"userName\",\n        sortable: false,\n        align: \"center\"\n      }, {\n        text: \"نوع المستخدم\",\n        value: \"userType\",\n        sortable: false,\n        align: \"center\"\n      }, {\n        text: \"نوع العملية \",\n        value: \"eventType\",\n        sortable: false,\n        align: \"center\"\n      }, {\n        text: \"Messages\",\n        value: \"messages\",\n        sortable: false,\n        align: \"center\"\n      }, {\n        text: \"الوقت\",\n        value: \"createAt\",\n        sortable: false,\n        align: \"center\"\n      }, {\n        text: \"عرض التفاصيل\",\n        value: \"action\",\n        sortable: false,\n        align: \"center\"\n      }],\n      page: 1,\n      pageSize: 1,\n      filterData: {\n        userName: null,\n        branchNo: null,\n        branchName: null,\n        eventType: null,\n        userType: null,\n        from: null,\n        to: null,\n        pageNo: 1,\n        pageSize: 30\n      }\n    };\n  },\n  created: function created() {\n    this.initialize();\n  },\n  computed: _objectSpread({}, mapFields(\"loggingStore\", {\n    grids: \"grids\",\n    pageCount: \"pageCount\"\n  })),\n  methods: _objectSpread(_objectSpread({}, mapActions({\n    GetLogsAction: \"loggingStore/GetLogs\"\n  })), {}, {\n    showDetails: function showDetails(item) {\n      this.itemToDisplayOnDetailsDialog = item;\n      this.detailsDialog = true;\n    },\n    UserTypeStateToTextPublic: function UserTypeStateToTextPublic(orderRequestType) {\n      return _UserTypeStateToTextPublic(orderRequestType);\n    },\n    LogActionTypeToText: function LogActionTypeToText(logAction) {\n      return _LogActionTypeToText(logAction);\n    },\n    searchData: function searchData(filter) {\n      this.page = 1;\n      this.filterData = filter;\n      this.initialize();\n    },\n    colseDetailsDialog: function colseDetailsDialog() {\n      this.itemToDisplayOnDetailsDialog = null;\n      this.detailsDialog = false;\n    },\n    initialize: function initialize() {\n      var _this = this;\n      try {\n        this.filterData.pageNo = this.page;\n        this.$store.dispatch(\"loading\", true);\n        this.GetLogsAction(this.filterData).then(function () {\n          _this.$store.dispatch(\"loading\", false);\n          _this.pageSize = _this.pageCount;\n        }).catch(function (error) {\n          _this.notify(\"\".concat(error), \"#1d262d\");\n          _this.$store.dispatch(\"loading\", false);\n        });\n      } catch (error) {\n        this.$store.dispatch(\"loading\", false);\n        this.notify(error, \"#1d262d\");\n      }\n    },\n    onPaginationClick: function onPaginationClick(page) {\n      this.page = page;\n      this.initialize();\n    },\n    notify: function notify(text, color) {\n      this.$store.commit(\"showMessage\", {\n        text: text,\n        color: color\n      });\n    }\n  })\n};","map":{"version":3,"mappings":";AAwDA;AACA;AACA;AACA;AACA;AAEA,SACAA,yDACAC,mDACA;AAEA;IACAC;IACAC;EACA;EAHAC;AAKA;EACAC;EACAC;IACAC;EACA;EACAC;IACAC;IACAC;EACA;EAEAC;IAAA;MACAC;MACAC;MAEAC;MACAC;MAEAC,UACA;QACAC;QACAC;QACAC;QACAC;MACA,GACA;QACAH;QACAC;QACAC;QACAC;MACA,GACA;QACAH;QACAC;QACAC;QACAC;MACA,GACA;QACAH;QACAC;QACAC;QACAC;MACA,GACA;QACAH;QACAC;QACAC;QACAC;MACA,GACA;QACAH;QACAC;QACAC;QACAC;MACA,GACA;QAAAH;QAAAC;QAAAC;QAAAC;MAAA,EACA;MAEAC;MACAC;MAEAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAT;MACA;IACA;EAAA;EAEAU;IACA;EACA;EAEAC,4BACA7B;IACA8B;IACAC;EACA,GACA;EAEAC,yCACAC;IACAC,eACA;EACA;IAEAC;MACA;MACA;IACA;IACAvC;MACA;IACA;IAEAC;MACA;IACA;IAEAuC;MACA;MACA;MACA;IACA;IAEAC;MACA;MACA;IACA;IAEAC;MAAA;MACA;QACA;QACA;QACA,oCACAC;UACA;UACA;QACA,GACAC;UACA;UACA;QACA;MACA;QACA;QACA;MACA;IACA;IAEAC;MACA;MACA;IACA;IAEAC;MACA;QAAA7B;QAAA8B;MAAA;IACA;EAAA;AAEA","names":["UserTypeStateToTextPublic","LogActionTypeToText","getterType","mutationType","mapFields","name","props","source","components","LogDetailsComponent","SearchInsideLogComponent","data","userPermasstion","userTypes","itemToDisplayOnDetailsDialog","detailsDialog","headers","text","value","sortable","align","page","pageSize","filterData","userName","branchNo","branchName","eventType","userType","from","to","pageNo","created","computed","grids","pageCount","methods","mapActions","GetLogsAction","showDetails","searchData","colseDetailsDialog","initialize","then","catch","onPaginationClick","notify","color"],"sourceRoot":"src/views/Logging/Page","sources":["index.vue"],"sourcesContent":["<template>\r\n    <div>\r\n\r\n        <LogDetailsComponent :data-prop=\"itemToDisplayOnDetailsDialog\" :dialog-prop=\"detailsDialog\"\r\n            @details-dialog=\"colseDetailsDialog\">\r\n        </LogDetailsComponent>\r\n\r\n        <v-card min-height=\"40rem\" color=\"transparent\" elevation=\"0\" height=\"auto\" style=\"padding:30px; \">\r\n\r\n            <SearchInsideLogComponent @search-data=\"searchData\"></SearchInsideLogComponent>\r\n\r\n            <v-data-table :headers=\"headers\" :disable-pagination=\"true\" :items=\"grids\" hide-default-footer\r\n                class=\"elevation-5 pa-5\">\r\n                <template v-slot:top>\r\n                    <v-toolbar flat color=\"white\">\r\n                        <v-toolbar-title><v-icon>mdi-newspaper-plus</v-icon> سجل النظام\r\n                        </v-toolbar-title>\r\n                        <v-divider class=\"mx-4\" inset vertical></v-divider>\r\n                        <v-spacer />\r\n                    </v-toolbar>\r\n                </template>\r\n\r\n                <template v-slot:[`item.userType`]=\"{ item }\">\r\n                    {{ UserTypeStateToTextPublic(item.userType) }}\r\n                </template>\r\n\r\n                <template v-slot:[`item.eventType`]=\"{ item }\">\r\n                    {{ LogActionTypeToText(item.eventType) }}\r\n                </template>\r\n                <template v-slot:[`item.createAt`]=\"{ item }\">\r\n                    {{ item.createAt.substring(0, 10) }}\r\n                </template>\r\n\r\n                <template v-slot:[`item.action`]=\"{ item }\">\r\n                    <v-btn x-small fab color=\"#536DFE\" @click=\"showDetails(item)\">\r\n                        <v-icon color=\"#fff\">mdi-television</v-icon>\r\n                    </v-btn>\r\n                </template>\r\n\r\n                <template v-slot:no-data>\r\n                    <v-btn color=\"#081D38\" class=\"white--text\" @click=\"initialize\">عرض البيانات</v-btn>\r\n                </template>\r\n\r\n            </v-data-table>\r\n\r\n            <template class=\"mt-5\">\r\n                <div class=\"text-center mt-3\">\r\n                    <v-pagination v-model=\"page\" :length=\"pageSize\" circle color=\"#081D38\" @input=\"onPaginationClick\"\r\n                        :total-visible=\"7\"></v-pagination>\r\n                </div>\r\n            </template>\r\n        </v-card>\r\n    </div>\r\n</template>\r\n  \r\n<script>\r\nimport { mapActions } from \"vuex\";\r\nimport { createHelpers } from \"vuex-map-fields\";\r\nimport { UserTypeStateList } from \"../../../models/enum\";\r\nimport LogDetailsComponent from \"../Components/LogDetailsComponent.vue\";\r\nimport SearchInsideLogComponent from \"../Components/SearchInsideLogComponent.vue\";\r\n\r\nimport {\r\n    UserTypeStateToTextPublic,\r\n    LogActionTypeToText,\r\n} from \"../../../models/mothedPublic.js\";\r\n\r\nconst { mapFields } = createHelpers({\r\n    getterType: \"getDataFields\",\r\n    mutationType: \"updateDataField\",\r\n});\r\n\r\nexport default {\r\n    name: \"\",\r\n    props: {\r\n        source: String,\r\n    },\r\n    components: {\r\n        LogDetailsComponent,\r\n        SearchInsideLogComponent,\r\n    },\r\n\r\n    data: () => ({\r\n        userPermasstion: [],\r\n        userTypes: UserTypeStateList,\r\n\r\n        itemToDisplayOnDetailsDialog: null,\r\n        detailsDialog: false,\r\n\r\n        headers: [\r\n            {\r\n                text: \"رقم الفرع\",\r\n                value: \"branchNumber\",\r\n                sortable: false,\r\n                align: \"center\",\r\n            },\r\n            {\r\n                text: \"اسم المستخدم\",\r\n                value: \"userName\",\r\n                sortable: false,\r\n                align: \"center\",\r\n            },\r\n            {\r\n                text: \"نوع المستخدم\",\r\n                value: \"userType\",\r\n                sortable: false,\r\n                align: \"center\",\r\n            },\r\n            {\r\n                text: \"نوع العملية \",\r\n                value: \"eventType\",\r\n                sortable: false,\r\n                align: \"center\",\r\n            },\r\n            {\r\n                text: \"Messages\",\r\n                value: \"messages\",\r\n                sortable: false,\r\n                align: \"center\",\r\n            },\r\n            {\r\n                text: \"الوقت\",\r\n                value: \"createAt\",\r\n                sortable: false,\r\n                align: \"center\",\r\n            },\r\n            { text: \"عرض التفاصيل\", value: \"action\", sortable: false, align: \"center\" },\r\n        ],\r\n\r\n        page: 1,\r\n        pageSize: 1,\r\n\r\n        filterData: {\r\n            userName: null,\r\n            branchNo: null,\r\n            branchName: null,\r\n            eventType: null,\r\n            userType: null,\r\n            from: null,\r\n            to: null,\r\n            pageNo: 1,\r\n            pageSize: 30,\r\n        },\r\n    }),\r\n\r\n    created() {\r\n        this.initialize();\r\n    },\r\n\r\n    computed: {\r\n        ...mapFields(\"loggingStore\", {\r\n            grids: \"grids\",\r\n            pageCount: \"pageCount\",\r\n        }),\r\n    },\r\n\r\n    methods: {\r\n        ...mapActions({\r\n            GetLogsAction:\r\n                \"loggingStore/GetLogs\",\r\n        }),\r\n\r\n        showDetails(item) {\r\n            this.itemToDisplayOnDetailsDialog = item;\r\n            this.detailsDialog = true;\r\n        },\r\n        UserTypeStateToTextPublic(orderRequestType) {\r\n            return UserTypeStateToTextPublic(orderRequestType);\r\n        },\r\n\r\n        LogActionTypeToText(logAction) {\r\n            return LogActionTypeToText(logAction);\r\n        },\r\n\r\n        searchData(filter) {\r\n            this.page = 1;\r\n            this.filterData = filter;\r\n            this.initialize();\r\n        },\r\n\r\n        colseDetailsDialog() {\r\n            this.itemToDisplayOnDetailsDialog = null;\r\n            this.detailsDialog = false;\r\n        },\r\n\r\n        initialize() {\r\n            try {\r\n                this.filterData.pageNo = this.page;\r\n                this.$store.dispatch(\"loading\", true);\r\n                this.GetLogsAction(this.filterData)\r\n                    .then(() => {\r\n                        this.$store.dispatch(\"loading\", false);\r\n                        this.pageSize = this.pageCount;\r\n                    })\r\n                    .catch((error) => {\r\n                        this.notify(`${error}`, \"#1d262d\");\r\n                        this.$store.dispatch(\"loading\", false);\r\n                    });\r\n            } catch (error) {\r\n                this.$store.dispatch(\"loading\", false);\r\n                this.notify(error, \"#1d262d\");\r\n            }\r\n        },\r\n\r\n        onPaginationClick(page) {\r\n            this.page = page;\r\n            this.initialize();\r\n        },\r\n\r\n        notify(text, color) {\r\n            this.$store.commit(\"showMessage\", { text: text, color: color });\r\n        },\r\n    },\r\n};\r\n</script>\r\n  \r\n<style scoped>\r\n/* delete and edit icon disable color */\r\n.theme--dark.v-icon--disabled {\r\n    color: rgba(221, 59, 59, 0.5) !important;\r\n}\r\n\r\n/* Activate icon disable color */\r\n.theme--light.v-icon--disabled {\r\n    color: rgba(221, 59, 59, 0.5) !important;\r\n}\r\n</style>\r\n  "]},"metadata":{},"sourceType":"module"}