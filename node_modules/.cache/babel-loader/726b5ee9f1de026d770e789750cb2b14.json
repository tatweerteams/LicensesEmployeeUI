{"ast":null,"code":"import _objectSpread from \"D:/repo Tatweer/tatweerteams/CheckbooksOrderingUI/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport { routes } from \"../../../router\";\nimport { login as _login, getInfoUser } from \"../api\";\nimport { getToken, setToken, removeToken, setUserName, getUserName, setUserInfo, getUserInfo } from \"../../../util/session\";\nfunction hasPermission(group, route) {\n  if (route.meta && route.meta.group) {\n    return route.meta.group.some(function (g) {\n      return g == group;\n    });\n  } else {\n    return true;\n  }\n}\nexport function filterAsyncRoutes(authBaseRoutes, group) {\n  var res = [];\n  authBaseRoutes.forEach(function (route) {\n    var tmp = _objectSpread({}, route);\n    if (hasPermission(group, tmp)) {\n      if (tmp.children) {\n        tmp.children = filterAsyncRoutes(tmp.children, group);\n      }\n      res.push(tmp);\n    }\n  });\n  return res;\n}\nexport default {\n  namespaced: true,\n  state: {\n    routes: [],\n    userData: null,\n    tokenId: getToken(),\n    roles: [],\n    group: [],\n    routesLoaded: false,\n    userInfo: {},\n    user_Name: \"\"\n  },\n  getters: {\n    isAuthenticated: function isAuthenticated(state) {\n      return state.tokenId !== null;\n    },\n    getToken: function getToken(state) {\n      return state.tokenId;\n    },\n    getUserName: function getUserName(state) {\n      return state.user_Name;\n    },\n    getRole: function getRole(state) {\n      var _state$roles;\n      return (_state$roles = state.roles) !== null && _state$roles !== void 0 ? _state$roles : [];\n    },\n    getRoutes: function getRoutes(state) {\n      return state.routes;\n    },\n    getUserData: function getUserData(state) {\n      return state.userData;\n    },\n    getUserInfo: function getUserInfo(state) {\n      return state.userInfo;\n    },\n    getRoutesLoaded: function getRoutesLoaded(state) {\n      return state.routesLoaded;\n    }\n  },\n  mutations: {\n    SET_TOKEN: function SET_TOKEN(state, token) {\n      state.tokenId = token;\n    },\n    SET_ROLES: function SET_ROLES(state, roles) {\n      state.roles = roles;\n    },\n    SET_RoutesLoaded: function SET_RoutesLoaded(state, status) {\n      state.routesLoaded = status;\n    },\n    SET_USER_INFO: function SET_USER_INFO(state, userinfo) {\n      state.userInfo = userinfo;\n    },\n    authUser: function authUser(state, userData) {\n      state.tokenId = userData.token;\n    },\n    SET_UserName: function SET_UserName(state, userName) {\n      state.user_Name = userName;\n    },\n    setUserData: function setUserData(state, userData) {\n      state.userData = userData;\n    },\n    SET_ROUTES: function SET_ROUTES(state) {\n      state.routes = JSON.parse(JSON.stringify(routes));\n    },\n    clearAuthData: function clearAuthData(state) {\n      state.tokenId = null;\n      state.routes = [];\n      state.userData = null;\n    }\n  },\n  actions: {\n    set_UserName: function set_UserName(_ref) {\n      var commit = _ref.commit;\n      commit(\"SET_UserName\", getUserName());\n    },\n    set_routers: function set_routers(_ref2) {\n      var commit = _ref2.commit;\n      commit(\"SET_ROUTES\");\n    },\n    login: function login(_ref3, authData) {\n      var commit = _ref3.commit;\n      var email = authData.email,\n        password = authData.password;\n      return new Promise(function (resolve, reject) {\n        _login({\n          UserName: email,\n          PasswordHash: password\n        }).then(function (response) {\n          commit(\"setUserData\", response.result);\n          commit(\"authUser\", response.result.accessToken);\n          commit(\"SET_ROLES\", response.result.permisstions);\n          commit(\"SET_USER_INFO\", response.result);\n          setToken(response.result.accessToken);\n          setUserName(response.result);\n          setUserInfo(response.result);\n          resolve();\n        }).catch(function (error) {\n          reject(error);\n        });\n      });\n    },\n    getUserInfoSesstion: function getUserInfoSesstion(_ref4) {\n      var commit = _ref4.commit;\n      getUserInfo().then(function (response) {\n        commit(\"SET_USER_INFO\", response);\n        commit(\"SET_ROLES\", response === null || response === void 0 ? void 0 : response.permisstions);\n      });\n    },\n    getInfo: function getInfo(_ref5) {\n      var commit = _ref5.commit;\n      return new Promise(function (resolve, reject) {\n        getInfoUser().then(function (response) {\n          var result = response.result;\n          if (!result) {\n            reject(\"Verification failed, please Login again.\");\n          }\n\n          // const { permisstions, moduleName} = result\n          var permisstions = result.permisstions;\n\n          // roles must be a non-empty array\n          if (!permisstions || permisstions.length <= 0) {\n            reject(\"getInfo: roles must be a non-null array!\");\n          }\n          commit(\"SET_ROLES\", permisstions);\n          commit(\"SET_USER_INFO\", result);\n          resolve(result);\n        }).catch(function (error) {\n          reject(error);\n        });\n      });\n    },\n    logout: function logout(_ref6) {\n      var commit = _ref6.commit;\n      commit(\"clearAuthData\");\n      removeToken();\n      //router.replace(\"/signin\");\n    },\n    resetToken: function resetToken(_ref7) {\n      var commit = _ref7.commit;\n      commit(\"clearAuthData\");\n      removeToken();\n    },\n    generateRoutes: function generateRoutes(_ref8, group) {\n      var commit = _ref8.commit;\n      return new Promise(function (resolve) {\n        var accessedRoutes;\n        if (group == \"superAdmin\") {\n          // accessedRoutes = authoraizeRoutes || [];\n          accessedRoutes = [];\n        } else {\n          accessedRoutes = filterAsyncRoutes([], group);\n        }\n        commit(\"SET_ROUTES\", accessedRoutes);\n        resolve(accessedRoutes);\n      });\n    },\n    RoutesLoaded: function RoutesLoaded(_ref9, status) {\n      var commit = _ref9.commit;\n      commit(\"SET_RoutesLoaded\", status);\n    },\n    tryAutoLogin: function tryAutoLogin(_ref10) {\n      var commit = _ref10.commit;\n      var token = getToken();\n      if (!token) {\n        return Promise.reject(\"no token\");\n      }\n      commit(\"authUser\", {\n        token: token\n      });\n      return Promise.resolve(true);\n    },\n    tryAutoLoginAndCheckSelectedKyc: function tryAutoLoginAndCheckSelectedKyc(_ref11) {\n      var commit = _ref11.commit;\n      console.log(commit);\n      return new Promise(function (resolve, reject) {\n        getUserInfo().then(function (response) {\n          if (response && response.kycTypeId) {\n            resolve(true);\n          }\n          reject(false);\n        }).catch(function (error) {\n          reject(error);\n        });\n      });\n\n      // const info = getUserInfo().then();\n      // console.log(info);\n\n      // alert(\"true\")\n\n      // return Promise.resolve(true);\n    }\n  }\n};","map":{"version":3,"names":["routes","login","getInfoUser","getToken","setToken","removeToken","setUserName","getUserName","setUserInfo","getUserInfo","hasPermission","group","route","meta","some","g","filterAsyncRoutes","authBaseRoutes","res","forEach","tmp","children","push","namespaced","state","userData","tokenId","roles","routesLoaded","userInfo","user_Name","getters","isAuthenticated","getRole","getRoutes","getUserData","getRoutesLoaded","mutations","SET_TOKEN","token","SET_ROLES","SET_RoutesLoaded","status","SET_USER_INFO","userinfo","authUser","SET_UserName","userName","setUserData","SET_ROUTES","JSON","parse","stringify","clearAuthData","actions","set_UserName","commit","set_routers","authData","email","password","Promise","resolve","reject","UserName","PasswordHash","then","response","result","accessToken","permisstions","catch","error","getUserInfoSesstion","getInfo","length","logout","resetToken","generateRoutes","accessedRoutes","RoutesLoaded","tryAutoLogin","tryAutoLoginAndCheckSelectedKyc","console","log","kycTypeId"],"sources":["D:/repo Tatweer/tatweerteams/CheckbooksOrderingUI/src/views/login/store/index.js"],"sourcesContent":["import { routes } from \"../../../router\";\r\n\r\nimport { login, getInfoUser } from \"../api\";\r\nimport {\r\n  getToken,\r\n  setToken,\r\n  removeToken,\r\n  setUserName,\r\n  getUserName,\r\n  setUserInfo,\r\n  getUserInfo,\r\n} from \"../../../util/session\";\r\n\r\nfunction hasPermission(group, route) {\r\n  if (route.meta && route.meta.group) {\r\n    return route.meta.group.some((g) => g == group);\r\n  } else {\r\n    return true;\r\n  }\r\n}\r\n\r\nexport function filterAsyncRoutes(authBaseRoutes, group) {\r\n  const res = [];\r\n\r\n  authBaseRoutes.forEach((route) => {\r\n    const tmp = { ...route };\r\n\r\n    if (hasPermission(group, tmp)) {\r\n      if (tmp.children) {\r\n        tmp.children = filterAsyncRoutes(tmp.children, group);\r\n      }\r\n      res.push(tmp);\r\n    }\r\n  });\r\n  return res;\r\n}\r\n\r\nexport default {\r\n  namespaced: true,\r\n  state: {\r\n    routes: [],\r\n    userData: null,\r\n    tokenId: getToken(),\r\n    roles: [],\r\n    group: [],\r\n    routesLoaded: false,\r\n    userInfo: {},\r\n    user_Name: \"\",\r\n  },\r\n\r\n  getters: {\r\n    isAuthenticated(state) {\r\n      return state.tokenId !== null;\r\n    },\r\n    getToken(state) {\r\n      return state.tokenId;\r\n    },\r\n    getUserName(state) {\r\n      return state.user_Name;\r\n    },\r\n\r\n    getRole(state) {\r\n      return state.roles ?? [];\r\n    },\r\n\r\n    getRoutes(state) {\r\n      return state.routes;\r\n    },\r\n    getUserData(state) {\r\n      return state.userData;\r\n    },\r\n    getUserInfo(state) {\r\n      return state.userInfo;\r\n    },\r\n    \r\n    getRoutesLoaded(state) {\r\n      return state.routesLoaded;\r\n    },\r\n  },\r\n\r\n  mutations: {\r\n    SET_TOKEN: (state, token) => {\r\n      state.tokenId = token;\r\n    },\r\n    SET_ROLES: (state, roles) => {\r\n      state.roles = roles;\r\n    },\r\n    SET_RoutesLoaded: (state, status) => {\r\n      state.routesLoaded = status;\r\n    },\r\n    SET_USER_INFO(state, userinfo) {\r\n      state.userInfo = userinfo;\r\n    },\r\n\r\n    authUser(state, userData) {\r\n      state.tokenId = userData.token;\r\n    },\r\n\r\n    SET_UserName(state, userName) {\r\n      state.user_Name = userName;\r\n    },\r\n\r\n    setUserData(state, userData) {\r\n      state.userData = userData;\r\n    },\r\n\r\n    SET_ROUTES(state) {\r\n      state.routes = JSON.parse(JSON.stringify(routes));\r\n    },\r\n    clearAuthData(state) {\r\n      state.tokenId = null;\r\n      state.routes = [];\r\n      state.userData = null;\r\n    },\r\n  },\r\n\r\n  actions: {\r\n    set_UserName({ commit }) {\r\n      commit(\"SET_UserName\", getUserName());\r\n    },\r\n\r\n    set_routers({ commit }) {\r\n      commit(\"SET_ROUTES\");\r\n    },\r\n    login({ commit }, authData) {\r\n      const { email, password } = authData;\r\n      return new Promise((resolve, reject) => {\r\n        login({ UserName: email, PasswordHash: password })\r\n          .then((response) => {\r\n            commit(\"setUserData\", response.result);\r\n            commit(\"authUser\", response.result.accessToken);\r\n            commit(\"SET_ROLES\", response.result.permisstions);\r\n            commit(\"SET_USER_INFO\", response.result);\r\n            setToken(response.result.accessToken);\r\n            setUserName(response.result);\r\n            setUserInfo(response.result);\r\n\r\n            resolve();\r\n          })\r\n          .catch((error) => {\r\n            reject(error);\r\n          });\r\n      });\r\n    },\r\n\r\n    getUserInfoSesstion({ commit }) {\r\n      getUserInfo().then((response) => {\r\n        commit(\"SET_USER_INFO\", response);\r\n        commit(\"SET_ROLES\", response?.permisstions);\r\n      });\r\n    },\r\n    getInfo({ commit }) {\r\n      return new Promise((resolve, reject) => {\r\n        getInfoUser()\r\n          .then((response) => {\r\n            const { result } = response;\r\n\r\n            if (!result) {\r\n              reject(\"Verification failed, please Login again.\");\r\n            }\r\n\r\n            // const { permisstions, moduleName} = result\r\n            const { permisstions } = result;\r\n\r\n            // roles must be a non-empty array\r\n            if (!permisstions || permisstions.length <= 0) {\r\n              reject(\"getInfo: roles must be a non-null array!\");\r\n            }\r\n\r\n            commit(\"SET_ROLES\", permisstions);\r\n            commit(\"SET_USER_INFO\", result);\r\n\r\n            resolve(result);\r\n          })\r\n          .catch((error) => {\r\n            reject(error);\r\n          });\r\n      });\r\n    },\r\n\r\n    logout({ commit }) {\r\n      commit(\"clearAuthData\");\r\n      removeToken();\r\n      //router.replace(\"/signin\");\r\n    },\r\n    resetToken({ commit }) {\r\n      commit(\"clearAuthData\");\r\n      removeToken();\r\n    },\r\n    generateRoutes({ commit }, group) {\r\n      return new Promise((resolve) => {\r\n        let accessedRoutes;\r\n\r\n        if (group == \"superAdmin\") {\r\n          // accessedRoutes = authoraizeRoutes || [];\r\n          accessedRoutes = [];\r\n        } else {\r\n          accessedRoutes = filterAsyncRoutes([], group);\r\n        }\r\n        commit(\"SET_ROUTES\", accessedRoutes);\r\n        resolve(accessedRoutes);\r\n      });\r\n    },\r\n    RoutesLoaded({ commit }, status) {\r\n      commit(\"SET_RoutesLoaded\", status);\r\n    },\r\n    tryAutoLogin({ commit }) {\r\n      const token = getToken();\r\n      if (!token) {\r\n        return Promise.reject(\"no token\");\r\n      }\r\n      commit(\"authUser\", {\r\n        token: token,\r\n      });\r\n      return Promise.resolve(true);\r\n    },\r\n\r\n    tryAutoLoginAndCheckSelectedKyc({ commit }) {\r\n      console.log(commit);\r\n      return new Promise((resolve, reject) => {\r\n        getUserInfo()\r\n          .then((response) => {\r\n            if (response && response.kycTypeId ) {\r\n              resolve(true);\r\n            }\r\n            reject(false);\r\n          })\r\n          .catch((error) => {\r\n            reject(error);\r\n          });\r\n      });\r\n   \r\n      // const info = getUserInfo().then();\r\n      // console.log(info);\r\n      \r\n      // alert(\"true\")\r\n\r\n      // return Promise.resolve(true);\r\n    },\r\n  },\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}