{"ast":null,"code":"import _objectSpread from \"D:/repo Tatweer/tatweerteams/CheckbooksOrderingUI/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.string.trim.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport { EventBus } from \"../../../eventBus.js\";\nimport { mapActions } from \"vuex\";\nimport { createHelpers } from \"vuex-map-fields\";\nimport { validationInput } from \"../../../models/validationInput.js\";\nvar _createHelpers = createHelpers({\n    getterType: \"getDataFields\",\n    mutationType: \"updateDataField\"\n  }),\n  mapFields = _createHelpers.mapFields;\nexport default {\n  name: \"insert-Or-Update\",\n  props: {\n    updateItemProp: {},\n    dialogProp: {}\n  },\n  data: function data() {\n    return {\n      dialog: false,\n      valid: false,\n      validationInput: validationInput,\n      regionRules: [function (v) {\n        return v.length > 0 || \"الرجاء اختيار منطقة\";\n      }],\n      bankNameRule: [function (v) {\n        return !!(v !== null && v !== void 0 && v.trim()) || \"يجب إدخال اسم المصرف\";\n      }, function (v) {\n        return /^[\\u0621-\\u064A ]*$/.test(v) || \"الرجاء إدخال باللغة العربية\";\n      }, function (v) {\n        return !!v && !(v !== null && v !== void 0 && v.includes(\"ـ\")) || \"يجب إدخال بطريقة الصحيحة\";\n      }],\n      bankNoRule: [function (v) {\n        return !!(v !== null && v !== void 0 && v.trim()) || \"يجب إدخال رقم المصرف\";\n      }, function (v) {\n        return /^[0-9]*$/.test(v) || \"يجب إدخال أرقام فقط\";\n      }],\n      searchRegion: null,\n      filterDataRegion: {\n        regionName: null\n      }\n    };\n  },\n  computed: _objectSpread(_objectSpread(_objectSpread({}, mapFields(\"bankStore\", {\n    bankNo: \"editedItem.bankNo\",\n    bankId: \"editedItem.id\",\n    bankName: \"editedItem.name\",\n    bankRegions: \"editedItem.bankRegions\"\n  })), mapFields(\"regionStore\", {\n    regions: \"regions\"\n  })), {}, {\n    formTitle: function formTitle() {\n      return this.bankId ? \"تعديل بيانات المصرف\" : \"إضافة مصرف جديد\";\n    },\n    isInsert: function isInsert() {\n      return !this.bankId;\n    }\n  }),\n  watch: {\n    dialogProp: {\n      handler: function handler(data) {\n        this.dialog = data;\n      },\n      immediate: true\n    },\n    updateItemProp: {\n      handler: function handler(data) {\n        if (data) this.editSelected(data);\n      },\n      immediate: true\n    },\n    searchRegion: function searchRegion(data) {\n      this.filterDataRegion.regionName = data;\n    }\n  },\n  methods: _objectSpread(_objectSpread({}, mapActions({\n    InsertBankStore: \"bankStore/InsertBank\",\n    ClearDataItemStore: \"bankStore/ClearDataItem\",\n    UpdateBankStore: \"bankStore/UpdateBank\",\n    SetDataUpdateStore: \"bankStore/SetDataUpdate\",\n    GetRegionStore: \"regionStore/GetRegions\"\n  })), {}, {\n    openDialog: function openDialog() {\n      this.dialog = true;\n      this.getRegions();\n    },\n    getRegions: function getRegions() {\n      var _this = this;\n      this.GetRegionStore(this.filterDataRegion).then(function () {}).catch(function (error) {\n        _this.notify(\"\".concat(error), \"#1d262d\");\n      });\n    },\n    editSelected: function editSelected(item) {\n      this.SetDataUpdateStore(item);\n      this.dialog = true;\n    },\n    close: function close() {\n      var _this2 = this;\n      this.dialog = false;\n      setTimeout(function () {\n        _this2.ClearDataItemStore();\n        _this2.resetValidation();\n      }, 300);\n      EventBus.$emit(\"closeDialogUpdateBank\");\n    },\n    save: function save() {\n      if (this.bankId) {\n        this.updateBank();\n      } else {\n        this.insertBank();\n      }\n    },\n    insertBank: function insertBank() {\n      var _this3 = this;\n      this.$store.dispatch(\"loading\", true);\n      this.InsertBankStore().then(function (res) {\n        _this3.notify(\"\".concat(res), \"#1d262d\");\n        EventBus.$emit(\"refreshData\");\n        _this3.close();\n      }).catch(function (error) {\n        _this3.notify(\"\".concat(error), \"#1d262d\");\n        _this3.$store.dispatch(\"loading\", false);\n      });\n    },\n    updateBank: function updateBank() {\n      var _this4 = this;\n      this.$store.dispatch(\"loading\", true);\n      this.UpdateBankStore().then(function (res) {\n        _this4.notify(\"\".concat(res), \"#1d262d\");\n        EventBus.$emit(\"refreshData\");\n        _this4.close();\n      }).catch(function (error) {\n        _this4.notify(\"\".concat(error), \"#1d262d\");\n        _this4.$store.dispatch(\"loading\", false);\n      });\n    },\n    resetValidation: function resetValidation() {\n      var _this$$refs$formBank;\n      (_this$$refs$formBank = this.$refs.formBank) === null || _this$$refs$formBank === void 0 ? void 0 : _this$$refs$formBank.reset();\n    },\n    notify: function notify(text, color) {\n      this.$store.commit(\"showMessage\", {\n        text: text,\n        color: color\n      });\n    }\n  })\n};","map":{"version":3,"mappings":";;;;;;AA8FA;AACA;AACA;AACA;AACA;IACAA;IACAC;EACA;EAHAC;AAIA;EACAC;EACAC;IACAC;IACAC;EACA;EAEAC;IAAA;MACAC;MACAC;MAEAC;MAEAC;QAAA;MAAA;MACAC,eACA;QAAA;MAAA,GACA;QAAA;MAAA,GACA;QAAA;MAAA,EACA;MAEAC,aACA;QAAA;MAAA,GACA;QAAA;MAAA,EACA;MAEAC;MACAC;QACAC;MACA;IACA;EAAA;EAEAC,wDACAf;IACAgB;IACAC;IACAC;IACAC;EACA,KAEAnB;IACAoB;EACA;IAEAC;MACA;IACA;IAEAC;MACA;IACA;EAAA,EACA;EAEAC;IACAnB;MACAoB;QACA;MACA;MACAC;IACA;IAEAtB;MACAqB;QACA;MACA;MACAC;IACA;IACAb;MACA;IACA;EACA;EACAc,yCACAC;IACAC;IACAC;IACAC;IACAC;IACAC;EACA;IACAC;MACA;MACA;IACA;IAEAC;MAAA;MACA,2CACAC,qBACAC;QACA;MACA;IACA;IAEAC;MACA;MACA;IACA;IAEAC;MAAA;MACA;MACAC;QACA;QACA;MACA;MAEAC;IACA;IAEAC;MACA;QACA;MACA;QACA;MACA;IACA;IAEAC;MAAA;MACA;MACA,uBACAP;QACA;QACAK;QACA;MACA,GACAJ;QACA;QACA;MACA;IACA;IACAO;MAAA;MACA;MACA,uBACAR;QACA;QACAK;QACA;MACA,GACAJ;QACA;QACA;MACA;IACA;IAEAQ;MAAA;MACA;IACA;IAEAC;MACA;QAAAC;QAAAC;MAAA;IACA;EAAA;AAEA","names":["getterType","mutationType","mapFields","name","props","updateItemProp","dialogProp","data","dialog","valid","validationInput","regionRules","bankNameRule","bankNoRule","searchRegion","filterDataRegion","regionName","computed","bankNo","bankId","bankName","bankRegions","regions","formTitle","isInsert","watch","handler","immediate","methods","mapActions","InsertBankStore","ClearDataItemStore","UpdateBankStore","SetDataUpdateStore","GetRegionStore","openDialog","getRegions","then","catch","editSelected","close","setTimeout","EventBus","save","insertBank","updateBank","resetValidation","notify","text","color"],"sourceRoot":"src/views/Bank/Components","sources":["InsertOrUpdateComponent.vue"],"sourcesContent":["<template>\r\n  <v-dialog v-model=\"dialog\" max-width=\"600px\" persistent>\r\n    <template v-slot:activator=\"{ on }\">\r\n      <template>\r\n        <v-btn\r\n          color=\"#536DFE\"\r\n          class=\"white--text \"\r\n          @click=\"openDialog\"\r\n          v-on=\"on\"\r\n          elevation=\"5\"\r\n        >\r\n          <v-icon class=\"ml-2\">mdi-plus-circle</v-icon><span> إضافة مصرف</span>\r\n        </v-btn>\r\n      </template>\r\n    </template>\r\n    <v-card>\r\n      <v-card-title>\r\n        <span class=\"headline\">{{ formTitle }}</span>\r\n      </v-card-title>\r\n\r\n      <v-divider></v-divider>\r\n\r\n      <v-card-text>\r\n        <v-container>\r\n          <v-form ref=\"formBank\" v-model=\"valid\">\r\n            <v-row>\r\n              <v-col cols=\"6\">\r\n                <v-text-field\r\n                  prepend-icon=\"location_city\"\r\n                  v-model=\"bankNo\"\r\n                  label=\"رقم المصرف\"\r\n                  :rules=\"[validationInput.selectedValidation]\"\r\n                  required\r\n                ></v-text-field>\r\n              </v-col>\r\n              <v-col cols=\"6\">\r\n                <v-text-field\r\n                  prepend-icon=\"location_city\"\r\n                  v-model=\"bankName\"\r\n                  label=\"إسم المصرف\"\r\n                  :rules=\"[\r\n                    validationInput.isEmpty,\r\n                    validationInput.isArabic,\r\n                    validationInput.currectInput,\r\n                  ]\"\r\n                  required\r\n                ></v-text-field>\r\n              </v-col>\r\n              <v-col cols=\"12\" v-if=\"isInsert\">\r\n                <v-select\r\n                  v-model=\"bankRegions\"\r\n                  :items=\"regions\"\r\n                  label=\"اختر المنطقة\"\r\n                  placeholder=\"اختار مناطق للمصرف\"\r\n                  :rules=\"[validationInput.selectedValidation]\"\r\n                  required\r\n                  item-text=\"regionName\"\r\n                  item-value=\"regionId\"\r\n                  multiple\r\n                  :search-input.sync=\"searchRegion\"\r\n                  @keyup=\"getRegions\"\r\n                  dense\r\n                  chips\r\n                  return-object\r\n                  persistent-hint\r\n                ></v-select>\r\n              </v-col>\r\n            </v-row>\r\n          </v-form>\r\n        </v-container>\r\n      </v-card-text>\r\n\r\n      <v-card-actions>\r\n        <div style=\"width: 100%;text-align: center;\">\r\n          <v-btn\r\n            @click=\"save\"\r\n            class=\"mx-2 white--text\"\r\n            :disabled=\"!valid\"\r\n            color=\"#536DFE\"\r\n          >\r\n            <v-icon>save</v-icon>\r\n            <span>حفظ البيانات</span>\r\n          </v-btn>\r\n          <v-btn class=\"mx-2 white--text\" @click=\"close\" color=\"#E91D62\">\r\n            <v-icon dark>clear</v-icon>\r\n            <span>إلغاء</span>\r\n          </v-btn>\r\n        </div>\r\n      </v-card-actions>\r\n    </v-card>\r\n  </v-dialog>\r\n</template>\r\n\r\n<script>\r\nimport { EventBus } from \"../../../eventBus.js\";\r\nimport { mapActions } from \"vuex\";\r\nimport { createHelpers } from \"vuex-map-fields\";\r\nimport { validationInput } from \"../../../models/validationInput.js\";\r\nconst { mapFields } = createHelpers({\r\n  getterType: \"getDataFields\",\r\n  mutationType: \"updateDataField\",\r\n});\r\nexport default {\r\n  name: \"insert-Or-Update\",\r\n  props: {\r\n    updateItemProp: {},\r\n    dialogProp: {},\r\n  },\r\n\r\n  data: () => ({\r\n    dialog: false,\r\n    valid: false,\r\n\r\n    validationInput: validationInput,\r\n\r\n    regionRules: [(v) => v.length > 0 || \"الرجاء اختيار منطقة\"],\r\n    bankNameRule: [\r\n      (v) => !!v?.trim() || \"يجب إدخال اسم المصرف\",\r\n      (v) => /^[\\u0621-\\u064A ]*$/.test(v) || \"الرجاء إدخال باللغة العربية\",\r\n      (v) => (!!v && !v?.includes(\"ـ\")) || \"يجب إدخال بطريقة الصحيحة\",\r\n    ],\r\n\r\n    bankNoRule: [\r\n      (v) => !!v?.trim() || \"يجب إدخال رقم المصرف\",\r\n      (v) => /^[0-9]*$/.test(v) || \"يجب إدخال أرقام فقط\",\r\n    ],\r\n\r\n    searchRegion: null,\r\n    filterDataRegion: {\r\n      regionName: null,\r\n    },\r\n  }),\r\n\r\n  computed: {\r\n    ...mapFields(\"bankStore\", {\r\n      bankNo: \"editedItem.bankNo\",\r\n      bankId: \"editedItem.id\",\r\n      bankName: \"editedItem.name\",\r\n      bankRegions: \"editedItem.bankRegions\",\r\n    }),\r\n\r\n    ...mapFields(\"regionStore\", {\r\n      regions: \"regions\",\r\n    }),\r\n\r\n    formTitle() {\r\n      return this.bankId ? \"تعديل بيانات المصرف\" : \"إضافة مصرف جديد\";\r\n    },\r\n\r\n    isInsert() {\r\n      return !this.bankId;\r\n    },\r\n  },\r\n\r\n  watch: {\r\n    dialogProp: {\r\n      handler(data) {\r\n        this.dialog = data;\r\n      },\r\n      immediate: true,\r\n    },\r\n\r\n    updateItemProp: {\r\n      handler(data) {\r\n        if (data) this.editSelected(data);\r\n      },\r\n      immediate: true,\r\n    },\r\n    searchRegion(data) {\r\n      this.filterDataRegion.regionName = data;\r\n    },\r\n  },\r\n  methods: {\r\n    ...mapActions({\r\n      InsertBankStore: \"bankStore/InsertBank\",\r\n      ClearDataItemStore: \"bankStore/ClearDataItem\",\r\n      UpdateBankStore: \"bankStore/UpdateBank\",\r\n      SetDataUpdateStore: \"bankStore/SetDataUpdate\",\r\n      GetRegionStore: \"regionStore/GetRegions\",\r\n    }),\r\n    openDialog() {\r\n      this.dialog = true;\r\n      this.getRegions();\r\n    },\r\n\r\n    getRegions() {\r\n      this.GetRegionStore(this.filterDataRegion)\r\n        .then(() => {})\r\n        .catch((error) => {\r\n          this.notify(`${error}`, \"#1d262d\");\r\n        });\r\n    },\r\n\r\n    editSelected(item) {\r\n      this.SetDataUpdateStore(item);\r\n      this.dialog = true;\r\n    },\r\n\r\n    close() {\r\n      this.dialog = false;\r\n      setTimeout(() => {\r\n        this.ClearDataItemStore();\r\n        this.resetValidation();\r\n      }, 300);\r\n\r\n      EventBus.$emit(\"closeDialogUpdateBank\");\r\n    },\r\n\r\n    save() {\r\n      if (this.bankId) {\r\n        this.updateBank();\r\n      } else {\r\n        this.insertBank();\r\n      }\r\n    },\r\n\r\n    insertBank() {\r\n      this.$store.dispatch(\"loading\", true);\r\n      this.InsertBankStore()\r\n        .then((res) => {\r\n          this.notify(`${res}`, \"#1d262d\");\r\n          EventBus.$emit(\"refreshData\");\r\n          this.close();\r\n        })\r\n        .catch((error) => {\r\n          this.notify(`${error}`, \"#1d262d\");\r\n          this.$store.dispatch(\"loading\", false);\r\n        });\r\n    },\r\n    updateBank() {\r\n      this.$store.dispatch(\"loading\", true);\r\n      this.UpdateBankStore()\r\n        .then((res) => {\r\n          this.notify(`${res}`, \"#1d262d\");\r\n          EventBus.$emit(\"refreshData\");\r\n          this.close();\r\n        })\r\n        .catch((error) => {\r\n          this.notify(`${error}`, \"#1d262d\");\r\n          this.$store.dispatch(\"loading\", false);\r\n        });\r\n    },\r\n\r\n    resetValidation() {\r\n      this.$refs.formBank?.reset();\r\n    },\r\n\r\n    notify(text, color) {\r\n      this.$store.commit(\"showMessage\", { text: text, color: color });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style></style>\r\n"]},"metadata":{},"sourceType":"module"}