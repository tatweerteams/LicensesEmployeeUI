{"ast":null,"code":"import { mapActions } from \"vuex\";\nimport { createHelpers } from \"vuex-map-fields\";\nconst {\n  mapFields,\n  mapMultiRowFields\n} = createHelpers({\n  getterType: \"getDataFields\",\n  mutationType: \"updateDataField\"\n});\nimport { aesDencrypt } from \"../../../models/secretData.js\";\nimport { EventBus } from \"../../../eventBus.js\";\nimport { OrderItemState, OrderRequestState } from \"../../../models/enum.js\";\nimport { OrderRequestTypeToTextPublic, OrderItemStateToTextPublic } from \"../../../models/mothedPublic.js\";\nimport SerachComponent from \"../../OrderRequestItem/components/searchComponent.vue\";\nimport ApprovedOrderItemComponent from \"../components/approvedOrderRequestComponent.vue\";\nimport RejectOrderItemComponent from \"../components/rejectOrderRequestComponent.vue\";\nimport UpdateOrderItemComponent from \"../../OrderRequestItem/components/updateOrderItemComponent.vue\";\nexport default {\n  components: {\n    SerachComponent,\n    ApprovedOrderItemComponent,\n    RejectOrderItemComponent,\n    UpdateOrderItemComponent\n  },\n  created() {\n    this.filterData.orderRequestId = aesDencrypt(this.$route.params.id);\n    this.initialize();\n    EventBus.$on(\"refreshDataOrderItem\", () => {\n      this.initialize();\n    });\n    EventBus.$on(\"closeDialogUpdateOrderItem\", () => {\n      this.updateOrderItem = null;\n    });\n  },\n  data: () => ({\n    headers: [{\n      text: \"رقم الحساب\",\n      value: \"accountNo\",\n      sortable: false,\n      align: \"center\"\n    }, {\n      text: \"إسم صاحب الحساب\",\n      value: \"accountName\",\n      sortable: false,\n      align: \"center\"\n    }, {\n      text: \"رقم التسلسل\",\n      value: \"serialFrom\",\n      sortable: false,\n      align: \"center\"\n    }, {\n      text: \"حالة الطـلب\",\n      value: \"state\",\n      sortable: false,\n      align: \"center\"\n    }, {\n      text: \"كمية الدفاتر\",\n      value: \"countChekBook\",\n      sortable: false,\n      align: \"center\"\n    }, {\n      text: \"تعديل الطلبية\",\n      value: \"action\",\n      sortable: false,\n      align: \"center\"\n    }, {\n      text: \"تجميد / مقبول\",\n      value: \"activation\",\n      sortable: false,\n      align: \"center\"\n    }],\n    page: 1,\n    pageSize: 1,\n    filterData: {\n      orderRequestId: null,\n      accounNoOrName: null,\n      serialFrom: null,\n      quentity: null,\n      orderItemState: null,\n      pageNo: 1,\n      pageSize: 30\n    },\n    updateOrderItem: null,\n    approvedItem: null,\n    rejectItem: null,\n    orderItemState: OrderItemState\n  }),\n  computed: {\n    ...mapFields(\"orderItemStore\", {\n      orderRequest: \"orderRequest\",\n      pageCount: \"pageCount\"\n    }),\n    ...mapMultiRowFields(\"orderItemStore\", {\n      grids: \"orderItems\"\n    }),\n    titleOrder() {\n      return `بيانات الطلبية  ${OrderRequestTypeToTextPublic(this.orderRequest?.orderRequestType)} ${this.orderRequest?.branchName ?? \"\"}`;\n    },\n    checkReject() {\n      return this.orderRequest?.orderRequestState == OrderRequestState.RejectRequest;\n    }\n  },\n  methods: {\n    hasPermassion(crrentUser) {\n      this.userPermasstion = this.$store.getters[\"auth/getRole\"];\n      var result = this.userPermasstion.some(item => crrentUser.includes(item));\n      return result;\n    },\n    backPage() {\n      this.$router.back();\n    },\n    refreshDataComponent() {\n      this.approvedItem = null;\n      this.backPage();\n    },\n    closeDialogComponent() {\n      this.approvedItem = null;\n      this.rejectItem = null;\n    },\n    ...mapActions({\n      GetOrderItems: \"orderItemStore/GetOrderItems\",\n      ChangeItemState: \"orderPindingItemStore/ChangeItemState\"\n    }),\n    initialize() {\n      try {\n        this.$store.dispatch(\"loading\", true);\n        this.GetOrderItems(this.filterData).then(() => {\n          this.$store.dispatch(\"loading\", false);\n          this.pageSize = this.pageCount;\n          console.log(this.orderRequest);\n        }).catch(error => {\n          this.$store.dispatch(\"loading\", false);\n          this.notify(`${error}`, \"#1d262d\");\n        });\n      } catch (error) {\n        this.$store.dispatch(\"loading\", false);\n        this.notify(error, \"#1d262d\");\n      }\n    },\n    approvedOrderRequest() {\n      const sendItem = {\n        orderRequestId: this.filterData.orderRequestId\n      };\n      this.approvedItem = sendItem;\n    },\n    rejectOrderRequest() {\n      const sendItem = {\n        orderRequestId: this.filterData.orderRequestId\n      };\n      this.rejectItem = sendItem;\n    },\n    searchData(filter) {\n      this.page = 1;\n      this.filterData.accounNoOrName = filter.accounNoOrName;\n      this.filterData.serialFrom = filter.serialFrom;\n      this.filterData.quentity = filter.quentity;\n      this.filterData.requestState = filter.requestState;\n      this.filterData.pageNo = filter.pageNo;\n      this.filterData.pageSize = filter.pageSize;\n      this.initialize();\n    },\n    onPaginationClick(page) {\n      if (this.page == page) return;\n      this.page = page;\n      this.initialize();\n    },\n    orderItemStateToText(item) {\n      return OrderItemStateToTextPublic(item);\n    },\n    editOrderItem(item) {\n      this.updateOrderItem = item;\n    },\n    activationItem(item) {\n      const editItme = {\n        orderItemId: item.id\n      };\n      this.$store.dispatch(\"loading\", true);\n      try {\n        this.$store.dispatch(\"loading\", true);\n        this.ChangeItemState(editItme).then(res => {\n          this.notify(`${res}`, \"#1d262d\");\n          item.state = item.state == this.orderItemState.Success ? this.orderItemState.IsSuspended : this.orderItemState.Success;\n          this.$store.dispatch(\"loading\", false);\n        }).catch(error => {\n          this.notify(`${error}`, \"#1d262d\");\n          this.$store.dispatch(\"loading\", false);\n        });\n      } catch (error) {\n        this.$store.dispatch(\"loading\", false);\n        this.notify(error, \"#1d262d\");\n      }\n    },\n    notify(text, color) {\n      this.$store.commit(\"showMessage\", {\n        text: text,\n        color: color\n      });\n    }\n  },\n  watch: {}\n};","map":{"version":3,"mappings":"AA6JA;AACA;AACA;EAAAA;EAAAC;AAAA;EACAC;EACAC;AACA;AAEA;AACA;AAEA;AACA,SACAC,8BACAC,kCACA;AAEA;AAEA;AACA;AACA;AAEA;EACAC;IACAC;IACAC;IACAC;IACAC;EACA;EAEAC;IACA;IACA;IAEAC;MACA;IACA;IAEAA;MACA;IACA;EACA;EAEAC;IACAC,UACA;MACAC;MACAC;MACAC;MACAC;IACA,GAEA;MACAH;MACAC;MACAC;MACAC;IACA,GAEA;MACAH;MACAC;MACAC;MACAC;IACA,GAEA;MACAH;MACAC;MACAC;MACAC;IACA,GACA;MACAH;MACAC;MACAC;MACAC;IACA,GACA;MACAH;MACAC;MACAC;MACAC;IACA,GACA;MACAH;MACAC;MACAC;MACAC;IACA,EACA;IAEAC;IACAC;IAEAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAP;IACA;IAEAQ;IACAC;IACAC;IAEAJ;EACA;EAEAK;IACA;MACAC;MACAC;IACA;IAEA;MACAC;IACA;IAEAC;MACA,uDACA,oCACA;IACA;IAEAC;MACA,OACA;IAEA;EACA;EAEAC;IACAC;MACA;MACA,+CACAC,0BACA;MACA;IACA;IACAC;MACA;IACA;IAEAC;MACA;MACA;IACA;IAEAC;MACA;MACA;IACA;IAEA;MACAC;MACAC;IACA;IAEAC;MACA;QACA;QACA,oCACAC;UACA;UACA;UACAC;QACA,GACAC;UACA;UACA;QACA;MACA;QACA;QACA;MACA;IACA;IAEAC;MACA;QACA3B;MACA;MAEA;IACA;IAEA4B;MACA;QACA5B;MACA;MACA;IACA;IAEA6B;MACA;MAEA;MACA;MACA;MACA;MACA;MACA;MAEA;IACA;IAEAC;MACA;MACA;MACA;IACA;IAEAC;MACA;IACA;IAEAC;MACA;IACA;IAEAC;MACA;QACAC;MACA;MACA;MACA;QACA;QACA,+BACAV;UACA;UACAW,aACAA,4CACA,kCACA;UACA;QACA,GACAT;UACA;UACA;QACA;MACA;QACA;QACA;MACA;IACA;IAEAU;MACA;QAAA3C;QAAA4C;MAAA;IACA;EACA;EAEAC;AACA","names":["mapFields","mapMultiRowFields","getterType","mutationType","OrderRequestTypeToTextPublic","OrderItemStateToTextPublic","components","SerachComponent","ApprovedOrderItemComponent","RejectOrderItemComponent","UpdateOrderItemComponent","created","EventBus","data","headers","text","value","sortable","align","page","pageSize","filterData","orderRequestId","accounNoOrName","serialFrom","quentity","orderItemState","pageNo","updateOrderItem","approvedItem","rejectItem","computed","orderRequest","pageCount","grids","titleOrder","checkReject","methods","hasPermassion","crrentUser","backPage","refreshDataComponent","closeDialogComponent","GetOrderItems","ChangeItemState","initialize","then","console","catch","approvedOrderRequest","rejectOrderRequest","searchData","onPaginationClick","orderItemStateToText","editOrderItem","activationItem","orderItemId","item","notify","color","watch"],"sourceRoot":"src/views/orderRequestPinding/components","sources":["orderRequestItemComonent.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <template v-if=\"approvedItem\">\r\n      <ApprovedOrderItemComponent\r\n        :approvedItemProp=\"approvedItem\"\r\n        @refresh-data=\"refreshDataComponent\"\r\n        @close-dialog=\"closeDialogComponent\"\r\n      ></ApprovedOrderItemComponent>\r\n    </template>\r\n    <template v-if=\"updateOrderItem\">\r\n      <updateOrderItemComponent\r\n        :updateItemProp=\"updateOrderItem\"\r\n        @refresh-data-update=\"initialize\"\r\n      ></updateOrderItemComponent>\r\n    </template>\r\n\r\n    <template v-if=\"rejectItem\">\r\n      <RejectOrderItemComponent\r\n        :rejectRequestItemProp=\"rejectItem\"\r\n        @refresh-data=\"refreshDataComponent\"\r\n        @close-dialog=\"closeDialogComponent\"\r\n      ></RejectOrderItemComponent>\r\n    </template>\r\n\r\n    <v-card\r\n      min-height=\"40rem\"\r\n      color=\"transparent\"\r\n      elevation=\"0\"\r\n      height=\"auto\"\r\n      style=\"padding:30px; \"\r\n    >\r\n      <SerachComponent @search-data=\"searchData\"></SerachComponent>\r\n      <v-btn class=\"my-5\" @click=\"backPage\" color=\"#03213d\" elevation=\"0\" text>\r\n        <v-icon>mdi-arrow-right-thick</v-icon> رجوع للقائمة الطلبات\r\n      </v-btn>\r\n      <v-data-table\r\n        :headers=\"headers\"\r\n        :disable-pagination=\"true\"\r\n        :items=\"grids\"\r\n        hide-default-footer\r\n        class=\"elevation-5 pa-5\"\r\n      >\r\n        <template v-slot:top>\r\n          <v-toolbar flat color=\"white\">\r\n            <v-toolbar-title\r\n              ><v-icon>mdi-newspaper-plus</v-icon> {{ titleOrder }}\r\n            </v-toolbar-title>\r\n            <v-divider class=\"mx-4\" inset vertical></v-divider>\r\n\r\n            <v-spacer />\r\n          </v-toolbar>\r\n        </template>\r\n\r\n        <template v-slot:[`item.serialFrom`]=\"{ item }\">\r\n          <v-chip\r\n            v-if=\"!item.serialFrom\"\r\n            small\r\n            color=\"#E91D62\"\r\n            text-color=\"white\"\r\n          >\r\n            لم يتم الإصدار\r\n          </v-chip>\r\n          <template v-else>\r\n            {{ item.serialFrom }}\r\n          </template>\r\n        </template>\r\n\r\n        <template v-slot:[`item.state`]=\"{ item }\">\r\n          <v-chip\r\n            small\r\n            :color=\"item.state == orderItemState.Success ? '#E91D62' : 'red'\"\r\n            text-color=\"white\"\r\n          >\r\n            {{ orderItemStateToText(item.state) }}\r\n          </v-chip>\r\n        </template>\r\n\r\n        <template v-slot:[`item.countChekBook`]=\"{ item }\">\r\n          <v-chip small color=\"#081D38\" text-color=\"white\">\r\n            {{ item.countChekBook }}\r\n          </v-chip>\r\n        </template>\r\n\r\n        <template v-slot:[`item.action`]=\"{ item }\">\r\n          <v-btn\r\n            x-small\r\n            class=\"mx-2\"\r\n            fab\r\n            color=\"#536DFE\"\r\n            :disabled=\"checkReject\"\r\n            @click=\"editOrderItem(item)\"\r\n          >\r\n            <v-icon color=\"#fff\">mdi-text-box-edit</v-icon>\r\n          </v-btn>\r\n        </template>\r\n\r\n        <template v-slot:[`item.activation`]=\"{ item }\">\r\n          <v-switch\r\n            dense\r\n            color=\"#E91D62\"\r\n            hide-details\r\n            class=\"justify-center text-center mr-4 mb-4 d-inline-block\"\r\n            :input-value=\"item.state == orderItemState.Success\"\r\n            @click=\"activationItem(item)\"\r\n            :disabled=\"checkReject\"\r\n          ></v-switch>\r\n        </template>\r\n\r\n        <template v-slot:no-data>\r\n          <v-btn color=\"#081D38\" class=\"white--text\" @click=\"initialize\"\r\n            >عرض البيانات</v-btn\r\n          >\r\n        </template>\r\n      </v-data-table>\r\n\r\n      <template class=\"mt-5\">\r\n        <div class=\"text-center mt-3\">\r\n          <v-pagination\r\n            v-model=\"page\"\r\n            :length=\"pageSize\"\r\n            circle\r\n            color=\"#081D38\"\r\n            @input=\"onPaginationClick\"\r\n          ></v-pagination>\r\n        </div>\r\n      </template>\r\n      <v-row class=\"my-5\" v-if=\"!checkReject\">\r\n        <v-col cols=\"12\" class=\"justify-center text-center\">\r\n          <v-btn\r\n            @click=\"approvedOrderRequest\"\r\n            color=\"#536DFE\"\r\n            class=\"white--text\"\r\n            elevation=\"10\"\r\n            v-if=\"hasPermassion(['ApprovidRequest','AdminSystem'])\"\r\n          >\r\n            <v-icon>mdi-arrow-right-thick</v-icon> قبول الطلب\r\n          </v-btn>\r\n          <v-btn\r\n            class=\"mx-5 white--text\"\r\n            @click=\"rejectOrderRequest\"\r\n            color=\"red\"\r\n            elevation=\"10\"\r\n            v-if=\"hasPermassion(['RejectRequest','AdminSystem'])\"\r\n          >\r\n            <v-icon>mdi-arrow-right-thick</v-icon> رفض الطلب\r\n          </v-btn>\r\n        </v-col>\r\n      </v-row>\r\n\r\n      <v-btn @click=\"backPage\" color=\"#03213d\" elevation=\"0\" text>\r\n        <v-icon>mdi-arrow-right-thick</v-icon> رجوع للقائمة الطلبات\r\n      </v-btn>\r\n    </v-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapActions } from \"vuex\";\r\nimport { createHelpers } from \"vuex-map-fields\";\r\nconst { mapFields, mapMultiRowFields } = createHelpers({\r\n  getterType: \"getDataFields\",\r\n  mutationType: \"updateDataField\",\r\n});\r\n\r\nimport { aesDencrypt } from \"../../../models/secretData.js\";\r\nimport { EventBus } from \"../../../eventBus.js\";\r\n\r\nimport { OrderItemState, OrderRequestState } from \"../../../models/enum.js\";\r\nimport {\r\n  OrderRequestTypeToTextPublic,\r\n  OrderItemStateToTextPublic,\r\n} from \"../../../models/mothedPublic.js\";\r\n\r\nimport SerachComponent from \"../../OrderRequestItem/components/searchComponent.vue\";\r\n\r\nimport ApprovedOrderItemComponent from \"../components/approvedOrderRequestComponent.vue\";\r\nimport RejectOrderItemComponent from \"../components/rejectOrderRequestComponent.vue\";\r\nimport UpdateOrderItemComponent from \"../../OrderRequestItem/components/updateOrderItemComponent.vue\";\r\n\r\nexport default {\r\n  components: {\r\n    SerachComponent,\r\n    ApprovedOrderItemComponent,\r\n    RejectOrderItemComponent,\r\n    UpdateOrderItemComponent,\r\n  },\r\n\r\n  created() {\r\n    this.filterData.orderRequestId = aesDencrypt(this.$route.params.id);\r\n    this.initialize();\r\n\r\n    EventBus.$on(\"refreshDataOrderItem\", () => {\r\n      this.initialize();\r\n    });\r\n\r\n    EventBus.$on(\"closeDialogUpdateOrderItem\", () => {\r\n      this.updateOrderItem = null;\r\n    });\r\n  },\r\n\r\n  data: () => ({\r\n    headers: [\r\n      {\r\n        text: \"رقم الحساب\",\r\n        value: \"accountNo\",\r\n        sortable: false,\r\n        align: \"center\",\r\n      },\r\n\r\n      {\r\n        text: \"إسم صاحب الحساب\",\r\n        value: \"accountName\",\r\n        sortable: false,\r\n        align: \"center\",\r\n      },\r\n\r\n      {\r\n        text: \"رقم التسلسل\",\r\n        value: \"serialFrom\",\r\n        sortable: false,\r\n        align: \"center\",\r\n      },\r\n\r\n      {\r\n        text: \"حالة الطـلب\",\r\n        value: \"state\",\r\n        sortable: false,\r\n        align: \"center\",\r\n      },\r\n      {\r\n        text: \"كمية الدفاتر\",\r\n        value: \"countChekBook\",\r\n        sortable: false,\r\n        align: \"center\",\r\n      },\r\n      {\r\n        text: \"تعديل الطلبية\",\r\n        value: \"action\",\r\n        sortable: false,\r\n        align: \"center\",\r\n      },\r\n      {\r\n        text: \"تجميد / مقبول\",\r\n        value: \"activation\",\r\n        sortable: false,\r\n        align: \"center\",\r\n      },\r\n    ],\r\n\r\n    page: 1,\r\n    pageSize: 1,\r\n\r\n    filterData: {\r\n      orderRequestId: null,\r\n      accounNoOrName: null,\r\n      serialFrom: null,\r\n      quentity: null,\r\n      orderItemState: null,\r\n      pageNo: 1,\r\n      pageSize: 30,\r\n    },\r\n\r\n    updateOrderItem: null,\r\n    approvedItem: null,\r\n    rejectItem: null,\r\n\r\n    orderItemState: OrderItemState,\r\n  }),\r\n\r\n  computed: {\r\n    ...mapFields(\"orderItemStore\", {\r\n      orderRequest: \"orderRequest\",\r\n      pageCount: \"pageCount\",\r\n    }),\r\n\r\n    ...mapMultiRowFields(\"orderItemStore\", {\r\n      grids: \"orderItems\",\r\n    }),\r\n\r\n    titleOrder() {\r\n      return `بيانات الطلبية  ${OrderRequestTypeToTextPublic(\r\n        this.orderRequest?.orderRequestType\r\n      )} ${this.orderRequest?.branchName ?? \"\"}`;\r\n    },\r\n\r\n    checkReject() {\r\n      return (\r\n        this.orderRequest?.orderRequestState == OrderRequestState.RejectRequest\r\n      );\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    hasPermassion(crrentUser) {\r\n      this.userPermasstion = this.$store.getters[\"auth/getRole\"];\r\n      var result = this.userPermasstion.some((item) =>\r\n        crrentUser.includes(item)\r\n      );\r\n      return result;\r\n    },\r\n    backPage() {\r\n      this.$router.back();\r\n    },\r\n\r\n    refreshDataComponent() {\r\n      this.approvedItem = null;\r\n      this.backPage();\r\n    },\r\n\r\n    closeDialogComponent() {\r\n      this.approvedItem = null;\r\n      this.rejectItem = null;\r\n    },\r\n\r\n    ...mapActions({\r\n      GetOrderItems: \"orderItemStore/GetOrderItems\",\r\n      ChangeItemState: \"orderPindingItemStore/ChangeItemState\",\r\n    }),\r\n\r\n    initialize() {\r\n      try {\r\n        this.$store.dispatch(\"loading\", true);\r\n        this.GetOrderItems(this.filterData)\r\n          .then(() => {\r\n            this.$store.dispatch(\"loading\", false);\r\n            this.pageSize = this.pageCount;\r\n            console.log(this.orderRequest);\r\n          })\r\n          .catch((error) => {\r\n            this.$store.dispatch(\"loading\", false);\r\n            this.notify(`${error}`, \"#1d262d\");\r\n          });\r\n      } catch (error) {\r\n        this.$store.dispatch(\"loading\", false);\r\n        this.notify(error, \"#1d262d\");\r\n      }\r\n    },\r\n\r\n    approvedOrderRequest() {\r\n      const sendItem = {\r\n        orderRequestId: this.filterData.orderRequestId,\r\n      };\r\n\r\n      this.approvedItem = sendItem;\r\n    },\r\n\r\n    rejectOrderRequest() {\r\n      const sendItem = {\r\n        orderRequestId: this.filterData.orderRequestId,\r\n      };\r\n      this.rejectItem = sendItem;\r\n    },\r\n\r\n    searchData(filter) {\r\n      this.page = 1;\r\n\r\n      this.filterData.accounNoOrName = filter.accounNoOrName;\r\n      this.filterData.serialFrom = filter.serialFrom;\r\n      this.filterData.quentity = filter.quentity;\r\n      this.filterData.requestState = filter.requestState;\r\n      this.filterData.pageNo = filter.pageNo;\r\n      this.filterData.pageSize = filter.pageSize;\r\n\r\n      this.initialize();\r\n    },\r\n\r\n    onPaginationClick(page) {\r\n      if (this.page == page) return;\r\n      this.page = page;\r\n      this.initialize();\r\n    },\r\n\r\n    orderItemStateToText(item) {\r\n      return OrderItemStateToTextPublic(item);\r\n    },\r\n\r\n    editOrderItem(item) {\r\n      this.updateOrderItem = item;\r\n    },\r\n\r\n    activationItem(item) {\r\n      const editItme = {\r\n        orderItemId: item.id,\r\n      };\r\n      this.$store.dispatch(\"loading\", true);\r\n      try {\r\n        this.$store.dispatch(\"loading\", true);\r\n        this.ChangeItemState(editItme)\r\n          .then((res) => {\r\n            this.notify(`${res}`, \"#1d262d\");\r\n            item.state =\r\n              item.state == this.orderItemState.Success\r\n                ? this.orderItemState.IsSuspended\r\n                : this.orderItemState.Success;\r\n            this.$store.dispatch(\"loading\", false);\r\n          })\r\n          .catch((error) => {\r\n            this.notify(`${error}`, \"#1d262d\");\r\n            this.$store.dispatch(\"loading\", false);\r\n          });\r\n      } catch (error) {\r\n        this.$store.dispatch(\"loading\", false);\r\n        this.notify(error, \"#1d262d\");\r\n      }\r\n    },\r\n\r\n    notify(text, color) {\r\n      this.$store.commit(\"showMessage\", { text: text, color: color });\r\n    },\r\n  },\r\n\r\n  watch: {},\r\n};\r\n</script>\r\n\r\n<style></style>\r\n"]},"metadata":{},"sourceType":"module"}