{"ast":null,"code":"import \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport * as enums from \"./enum.js\";\nexport function OrderRequestTypeToTextPublic(orderRequestType) {\n  var _enums$OrderRequestTy;\n  return (_enums$OrderRequestTy = enums.OrderRequestTypeList.find(function (pred) {\n    return pred.id == orderRequestType;\n  })) === null || _enums$OrderRequestTy === void 0 ? void 0 : _enums$OrderRequestTy.name;\n}\nexport function InputTypeToTextPublic(inputType) {\n  var _enums$InputTypeList$;\n  return (_enums$InputTypeList$ = enums.InputTypeList.find(function (pred) {\n    return pred.id == inputType;\n  })) === null || _enums$InputTypeList$ === void 0 ? void 0 : _enums$InputTypeList$.name;\n}\nexport function OrderItemStateToTextPublic(orderItemState) {\n  var _enums$OrderItemState;\n  return (_enums$OrderItemState = enums.OrderItemStateList.find(function (pred) {\n    return pred.id == orderItemState;\n  })) === null || _enums$OrderItemState === void 0 ? void 0 : _enums$OrderItemState.name;\n}\nexport function OrderRequestStateToTextPublic(orderRequestState) {\n  var _enums$OrderRequestSt;\n  return (_enums$OrderRequestSt = enums.OrderRequestStateList.find(function (pred) {\n    return pred.id == orderRequestState;\n  })) === null || _enums$OrderRequestSt === void 0 ? void 0 : _enums$OrderRequestSt.name;\n}\nexport function ChangeColorOrderRequestTypePublic(orderRequestType) {\n  var color = \"\";\n  switch (orderRequestType) {\n    case enums.OrderRequestType.Individual:\n      color = \"indigo\";\n      break;\n    case enums.OrderRequestType.Companies:\n      color = \"green\";\n      break;\n    case enums.OrderRequestType.Certified:\n      color = \"orange\";\n      break;\n    default:\n      break;\n  }\n  return color;\n}\nexport function ValidateAccountCountWithMinBranchCountPublic(item) {\n  return (item === null || item === void 0 ? void 0 : item.accountCount) < (item === null || item === void 0 ? void 0 : item.minOrderItemBranch);\n}\nexport function ValidateOrderRequestStatePublic(item) {\n  return (item === null || item === void 0 ? void 0 : item.orderRequestState) != enums.OrderRequestState.Process;\n}\nexport function OrderRequestStateColorPublic(orderRequestState) {\n  var color = \"\";\n  switch (orderRequestState) {\n    case enums.OrderRequestState.Process:\n      color = \"orange\";\n      break;\n    case enums.OrderRequestState.Pinding:\n      color = \"#E91D62\";\n      break;\n    case enums.OrderRequestState.GeneretedCode:\n      color = \"indigo\";\n      break;\n    case enums.OrderRequestState.SendRequestBranch:\n      color = \"green\";\n      break;\n    case enums.OrderRequestState.RejectRequest:\n      color = \"error\";\n      break;\n    case enums.OrderRequestState.PrintOutCenter:\n      color = \"indigo\";\n      break;\n    case enums.OrderRequestState.OrderRequestPrinting:\n      color = \"indigo\";\n      break;\n    case enums.OrderRequestState.OrderRequestIsPrintDone:\n      color = \"green\";\n      break;\n    default:\n      break;\n  }\n  return color;\n}\nexport function UserTypeStateToTextPublic(userType) {\n  var _enums$UserTypeStateL;\n  return (_enums$UserTypeStateL = enums.UserTypeStateList.find(function (pred) {\n    return pred.id == userType;\n  })) === null || _enums$UserTypeStateL === void 0 ? void 0 : _enums$UserTypeStateL.name;\n}\nexport function HasPermassion() {\n  var userPermasstions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var isAccess = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  return userPermasstions.some(function (item) {\n    return isAccess.includes(item);\n  });\n}\nexport function AccountStatusToText(status) {\n  var message = \"\";\n  switch (status) {\n    case enums.AccountState.IsActive:\n      message = true;\n      break;\n    case enums.AccountState.IsSuspended:\n      message = false;\n      break;\n  }\n  return message;\n}","map":{"version":3,"names":["enums","OrderRequestTypeToTextPublic","orderRequestType","OrderRequestTypeList","find","pred","id","name","InputTypeToTextPublic","inputType","InputTypeList","OrderItemStateToTextPublic","orderItemState","OrderItemStateList","OrderRequestStateToTextPublic","orderRequestState","OrderRequestStateList","ChangeColorOrderRequestTypePublic","color","OrderRequestType","Individual","Companies","Certified","ValidateAccountCountWithMinBranchCountPublic","item","accountCount","minOrderItemBranch","ValidateOrderRequestStatePublic","OrderRequestState","Process","OrderRequestStateColorPublic","Pinding","GeneretedCode","SendRequestBranch","RejectRequest","PrintOutCenter","OrderRequestPrinting","OrderRequestIsPrintDone","UserTypeStateToTextPublic","userType","UserTypeStateList","HasPermassion","userPermasstions","isAccess","some","includes","AccountStatusToText","status","message","AccountState","IsActive","IsSuspended"],"sources":["D:/repo Tatweer/tatweerteams/CheckbooksOrderingUI/src/models/mothedPublic.js"],"sourcesContent":["import * as enums from \"./enum.js\";\r\n\r\nexport function OrderRequestTypeToTextPublic(orderRequestType) {\r\n  return enums.OrderRequestTypeList.find((pred) => pred.id == orderRequestType)\r\n    ?.name;\r\n}\r\n\r\nexport function InputTypeToTextPublic(inputType) {\r\n  return enums.InputTypeList.find((pred) => pred.id == inputType)?.name;\r\n}\r\nexport function OrderItemStateToTextPublic(orderItemState) {\r\n  return enums.OrderItemStateList.find((pred) => pred.id == orderItemState)\r\n    ?.name;\r\n}\r\n\r\nexport function OrderRequestStateToTextPublic(orderRequestState) {\r\n  return enums.OrderRequestStateList.find(\r\n    (pred) => pred.id == orderRequestState\r\n  )?.name;\r\n}\r\n \r\n\r\nexport function ChangeColorOrderRequestTypePublic(orderRequestType) {\r\n  let color = \"\";\r\n  switch (orderRequestType) {\r\n    case enums.OrderRequestType.Individual:\r\n      color = \"indigo\";\r\n      break;\r\n    case enums.OrderRequestType.Companies:\r\n      color = \"green\";\r\n      break;\r\n    case enums.OrderRequestType.Certified:\r\n      color = \"orange\";\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n  return color;\r\n}\r\n\r\nexport function ValidateAccountCountWithMinBranchCountPublic(item) {\r\n  return item?.accountCount < item?.minOrderItemBranch;\r\n}\r\n\r\nexport function ValidateOrderRequestStatePublic(item) {\r\n  return item?.orderRequestState != enums.OrderRequestState.Process;\r\n}\r\n\r\nexport function OrderRequestStateColorPublic(orderRequestState) {\r\n  let color = \"\";\r\n  switch (orderRequestState) {\r\n    case enums.OrderRequestState.Process:\r\n      color = \"orange\";\r\n      break;\r\n    case enums.OrderRequestState.Pinding:\r\n      color = \"#E91D62\";\r\n      break;\r\n    case enums.OrderRequestState.GeneretedCode:\r\n      color = \"indigo\";\r\n      break;\r\n    case enums.OrderRequestState.SendRequestBranch:\r\n      color = \"green\";\r\n      break;\r\n    case enums.OrderRequestState.RejectRequest:\r\n      color = \"error\";\r\n      break;\r\n    case enums.OrderRequestState.PrintOutCenter:\r\n      color = \"indigo\";\r\n      break;\r\n    case enums.OrderRequestState.OrderRequestPrinting:\r\n      color = \"indigo\";\r\n      break;\r\n    case enums.OrderRequestState.OrderRequestIsPrintDone:\r\n      color = \"green\";\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n\r\n  return color;\r\n}\r\n\r\nexport function UserTypeStateToTextPublic(userType) {\r\n  return enums.UserTypeStateList.find((pred) => pred.id == userType)?.name;\r\n}\r\n\r\nexport function HasPermassion(userPermasstions = [], isAccess = []) {\r\n  return userPermasstions.some((item) => isAccess.includes(item));\r\n}\r\n\r\nexport function AccountStatusToText(status) {\r\n  let message = \"\";\r\n  switch (status) {\r\n    case enums.AccountState.IsActive:\r\n      message = true;\r\n      break;\r\n    case enums.AccountState.IsSuspended:\r\n      message = false;\r\n      break;\r\n  }\r\n\r\n  return message;\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}