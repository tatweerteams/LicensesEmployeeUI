{"ast":null,"code":"import _toConsumableArray from \"D:/repo Tatweer/tatweerteams/CheckbooksOrderingUI/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"D:/repo Tatweer/tatweerteams/CheckbooksOrderingUI/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectSpread from \"D:/repo Tatweer/tatweerteams/CheckbooksOrderingUI/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.string.pad-start.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport { mapActions } from \"vuex\";\nimport * as enums from \"../../../models/enum.js\";\nimport { validationInput } from \"../../../models/validationInput.js\";\nimport { createHelpers } from \"vuex-map-fields\";\nvar _createHelpers = createHelpers({\n    getterType: \"getDataFields\",\n    mutationType: \"updateDataField\"\n  }),\n  mapFields = _createHelpers.mapFields;\nexport default {\n  name: \"Serach-compnent\",\n  props: {\n    otherProcess: {}\n  },\n  data: function data() {\n    return {\n      menu1: false,\n      menu2: false,\n      valid: false,\n      validationInput: validationInput,\n      filterData: {\n        branchId: null,\n        bankId: null,\n        identityNo: null,\n        orderRequestState: null,\n        orderRequestType: null,\n        inputType: null,\n        from: null,\n        to: null,\n        pageNo: 1,\n        pageSize: 30\n      },\n      defaultFilterData: {\n        branchId: null,\n        identityNo: null,\n        orderRequestState: null,\n        orderRequestType: null,\n        inputType: null,\n        from: null,\n        to: null,\n        pageNo: 1,\n        pageSize: 30\n      },\n      enumModel: enums,\n      isSearchData: false,\n      selectOrderRequestState: null,\n      selectInputType: null,\n      selectOrderRequestType: null,\n      isLoading: false,\n      selectedBank: null,\n      searchBank: null,\n      filterBankData: {\n        bankName: null\n      },\n      regions: [],\n      isLoadingRegion: false,\n      selectedRegion: null,\n      searchRegion: null,\n      filterRegionData: {\n        bankId: null,\n        regionName: null\n      },\n      branchs: [],\n      isLoadingBranch: false,\n      selectedBranch: null,\n      searchBranch: null,\n      filterBranchData: {\n        branchRegionId: null,\n        nameOrNumber: null\n      },\n      searchName: \"\"\n    };\n  },\n  watch: {\n    searchName: function searchName(val) {\n      this.filterData.identityNo = val;\n    },\n    searchRegion: function searchRegion(val) {\n      this.filterRegionData.regionName = val;\n    },\n    searchBranch: function searchBranch(val) {\n      this.filterBranchData.nameOrNumber = val;\n    },\n    selectedRegion: function selectedRegion(val) {\n      if (!val) this.clearBranchData();\n    },\n    searchBank: function searchBank(val) {\n      if (this.isLoading) return;\n      this.filterBankData.bankName = val;\n    },\n    selectedBank: function selectedBank(val) {\n      if (!val) this.clearRegionData();\n    }\n  },\n  computed: _objectSpread({\n    filterIsSelected: function filterIsSelected() {\n      if (this.filterData.identityNo || this.selectedBranch || this.selectOrderRequestState || this.selectOrderRequestType || this.selectInputType || this.filterData.from && this.filterData.to) return true;else return false;\n    },\n    dateFormattedFrom: function dateFormattedFrom() {\n      return this.formatDate(this.filterData.from);\n    },\n    dateFormattedTo: function dateFormattedTo() {\n      return this.formatDate(this.filterData.to);\n    },\n    filterOrderRequestStateList: function filterOrderRequestStateList() {\n      return this.enumModel.OrderRequestStateList.filter(function (pred) {\n        return pred.id != enums.OrderRequestState.PrintOutCenter;\n      });\n    }\n  }, mapFields(\"bankStore\", {\n    banks: \"grids\"\n  })),\n  methods: _objectSpread(_objectSpread({\n    formatDate: function formatDate(date) {\n      if (!date) return null;\n      var _date$split = date.split(\"-\"),\n        _date$split2 = _slicedToArray(_date$split, 3),\n        year = _date$split2[0],\n        month = _date$split2[1],\n        day = _date$split2[2];\n      return \"\".concat(month, \"/\").concat(day, \"/\").concat(year);\n    },\n    parseDate: function parseDate(date) {\n      if (!date) return null;\n      var _date$split3 = date.split(\"/\"),\n        _date$split4 = _slicedToArray(_date$split3, 3),\n        month = _date$split4[0],\n        day = _date$split4[1],\n        year = _date$split4[2];\n      return \"\".concat(year, \"-\").concat(month.padStart(2, \"0\"), \"-\").concat(day.padStart(2, \"0\"));\n    }\n  }, mapActions({\n    GetActiveBankRegions: \"bankRegionStore/GetActiveBankRegions\",\n    GetActiveBranchs: \"branchStore/GetActiveBranchs\",\n    GetBankStore: \"bankStore/GetBanks\"\n  })), {}, {\n    hasPermassion: function hasPermassion(crrentUser) {\n      this.userPermasstion = this.$store.getters[\"auth/getRole\"];\n      var result = this.userPermasstion.some(function (item) {\n        return crrentUser.includes(item);\n      });\n      return result;\n    },\n    searchData: function searchData() {\n      var _this$selectedBranch$, _this$selectedBranch, _this$selectOrderRequ, _this$selectInputType, _this$selectOrderRequ2;\n      this.filterData.branchId = (_this$selectedBranch$ = (_this$selectedBranch = this.selectedBranch) === null || _this$selectedBranch === void 0 ? void 0 : _this$selectedBranch.id) !== null && _this$selectedBranch$ !== void 0 ? _this$selectedBranch$ : null;\n      this.filterData.orderRequestState = (_this$selectOrderRequ = this.selectOrderRequestState) !== null && _this$selectOrderRequ !== void 0 ? _this$selectOrderRequ : null;\n      this.filterData.inputType = (_this$selectInputType = this.selectInputType) !== null && _this$selectInputType !== void 0 ? _this$selectInputType : null;\n      this.filterData.orderRequestType = (_this$selectOrderRequ2 = this.selectOrderRequestType) !== null && _this$selectOrderRequ2 !== void 0 ? _this$selectOrderRequ2 : null;\n      this.isSearchData = true;\n      this.$emit(\"search-data\", this.filterData);\n    },\n    clearFilterData: function clearFilterData() {\n      this.clearData();\n      this.isSearchData = false;\n      this.$emit(\"search-data\", this.filterData);\n    },\n    clearData: function clearData() {\n      this.filterData = Object.assign({}, this.defaultFilterData);\n      this.selectOrderRequestState = null;\n      this.selectInputType = null;\n      this.selectOrderRequestType = null;\n      this.clearRegionData();\n      this.clearBranchData();\n      this.clearBankData();\n    },\n    getRegionByBankId: function getRegionByBankId() {\n      var _this$selectedBank;\n      if (!this.selectedBank) return;\n      this.clearRegionData();\n      this.filterRegionData.bankId = (_this$selectedBank = this.selectedBank) === null || _this$selectedBank === void 0 ? void 0 : _this$selectedBank.bankId;\n      this.getBankRegions();\n    },\n    clearBankData: function clearBankData() {\n      this.isLoading = false;\n      this.banks = [];\n      this.selectedBank = null;\n      this.searchBank = null;\n      this.filterBankData.bankName = null;\n    },\n    getBanks: function getBanks() {\n      var _this = this;\n      try {\n        this.isLoading = true;\n        this.GetBankStore(this.filterBankData).then(function () {\n          _this.banks = _toConsumableArray(_this.$store.getters[\"bankStore/GET_ACTIVE_BANKS\"]);\n          _this.isLoading = false;\n        }).catch(function (error) {\n          _this.notify(\"\".concat(error), \"#1d262d\");\n          _this.isLoading = false;\n        });\n      } catch (error) {\n        this.isLoading = false;\n        this.notify(error, \"#1d262d\");\n      }\n    },\n    getBranchByRegionId: function getBranchByRegionId() {\n      var _this$selectedRegion;\n      this.clearBranchData();\n      if (!this.selectedRegion) {\n        return;\n      }\n      this.filterBranchData.branchRegionId = (_this$selectedRegion = this.selectedRegion) === null || _this$selectedRegion === void 0 ? void 0 : _this$selectedRegion.bankRegionId;\n      this.getBranchs();\n    },\n    getBankRegions: function getBankRegions() {\n      var _this2 = this;\n      this.isLoadingRegion = true;\n      this.GetActiveBankRegions(this.filterRegionData).then(function () {\n        _this2.regions = _toConsumableArray(_this2.$store.getters[\"bankRegionStore/GET_ACTIVE_BANKREGIONS\"]);\n        _this2.isLoadingRegion = false;\n      }).catch(function () {\n        // this.notify(`${error}`, \"#1d262d\");\n        _this2.isLoadingRegion = false;\n      });\n    },\n    getBranchs: function getBranchs() {\n      var _this3 = this;\n      if (!this.selectedRegion) return;\n      this.isLoadingBranch = true;\n      this.GetActiveBranchs(this.filterBranchData).then(function () {\n        _this3.branchs = _toConsumableArray(_this3.$store.getters[\"branchStore/GET_ACTIVE_BRANCHS\"]);\n        _this3.isLoadingBranch = false;\n      }).catch(function () {\n        // this.notify(`${error}`, \"#1d262d\");\n        _this3.isLoadingBranch = false;\n      });\n    },\n    clearRegionData: function clearRegionData() {\n      this.clearBranchData();\n      this.isLoadingRegion = false;\n      this.regions = [];\n      this.selectedRegion = null;\n      this.searchRegion = null;\n      this.filterRegionData.bankId = null;\n      this.filterRegionData.regionName = null;\n    },\n    clearBranchData: function clearBranchData() {\n      this.isLoadingBranch = false;\n      this.branchs = [];\n      this.selectedBranch = null;\n      this.searchBranch = null;\n      this.filterBranchData.branchRegionId = null;\n      this.filterBranchData.nameOrNumber = null;\n    },\n    notify: function notify(text, color) {\n      this.$store.commit(\"showMessage\", {\n        text: text,\n        color: color\n      });\n    }\n  })\n};","map":{"version":3,"mappings":";;;;;;;;;AAiOA;AAEA;AACA;AAEA;AACA;IACAA;IACAC;EACA;EAHAC;AAKA;EACAC;EACAC;IACAC;EACA;EACAC;IAAA;MACAC;MACAC;MACAC;MACAC;MAEAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;MACA;MAEAC;QACAV;QACAE;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;MACA;MAEAE;MAEAC;MACAC;MACAC;MACAC;MAEAC;MACAC;MACAC;MACAC;QACAC;MACA;MAEAC;MACAC;MACAC;MACAC;MACAC;QACAxB;QACAyB;MACA;MAEAC;MACAC;MACAC;MACAC;MACAC;QACAC;QACAC;MACA;MAEAC;IACA;EAAA;EAEAC;IACAD;MACA;IACA;IAEAV;MACA;IACA;IAEAM;MACA;IACA;IACAP;MACA;IACA;IACAL;MACA;MAEA;IACA;IACAD;MACA;IACA;EACA;EAEAmB;IACAC;MACA,IACA,8BACA,uBACA,gCACA,+BACA,wBACA,4CAEA,iBACA;IACA;IAEAC;MACA;IACA;IACAC;MACA;IACA;IAEAC;MACA,mDACA;QAAA;MAAA,EACA;IACA;EAAA,GAEAlD;IACAmD;EACA,GACA;EACAC;IACAC;MACA;MAEA;QAAA;QAAAC;QAAAC;QAAAC;MACA;IACA;IACAC;MACA;MAEA;QAAA;QAAAF;QAAAC;QAAAF;MACA;IACA;EAAA,GAEAI;IACAC;IACAC;IACAC;EACA;IACAC;MACA;MACA;QAAA,OACAC;MAAA,EACA;MACA;IACA;IAEAC;MAAA;MACA;MACA;MACA;MACA;MAEA;MACA;IACA;IAEAC;MACA;MACA;MACA;IACA;IAEAC;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACA;IAEAC;MAAA;MACA;MACA;MACA;MACA;IACA;IAEAC;MACA;MACA;MACA;MACA;MACA;IACA;IAEAC;MAAA;MACA;QACA;QACA,uCACAC;UACA;UACA;QACA,GACAC;UACA;UACA;QACA;MACA;QACA;QACA;MACA;IACA;IAEAC;MAAA;MACA;MACA;QACA;MACA;MACA;MACA;IACA;IAEAC;MAAA;MACA;MACA,iDACAH;QACA,oCACA,gEACA;QACA;MACA,GACAC;QACA;QACA;MACA;IACA;IAEAG;MAAA;MACA;MAEA;MACA,6CACAJ;QACA,oCACA,wDACA;QACA;MACA,GACAC;QACA;QACA;MACA;IACA;IAEAI;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACA;IAEAC;MACA;MACA;MACA;MACA;MACA;MACA;IACA;IAEAC;MACA;QAAAC;QAAAC;MAAA;IACA;EAAA;AAEA","names":["getterType","mutationType","mapFields","name","props","otherProcess","data","menu1","menu2","valid","validationInput","filterData","branchId","bankId","identityNo","orderRequestState","orderRequestType","inputType","from","to","pageNo","pageSize","defaultFilterData","enumModel","isSearchData","selectOrderRequestState","selectInputType","selectOrderRequestType","isLoading","selectedBank","searchBank","filterBankData","bankName","regions","isLoadingRegion","selectedRegion","searchRegion","filterRegionData","regionName","branchs","isLoadingBranch","selectedBranch","searchBranch","filterBranchData","branchRegionId","nameOrNumber","searchName","watch","computed","filterIsSelected","dateFormattedFrom","dateFormattedTo","filterOrderRequestStateList","banks","methods","formatDate","year","month","day","parseDate","mapActions","GetActiveBankRegions","GetActiveBranchs","GetBankStore","hasPermassion","crrentUser","searchData","clearFilterData","clearData","getRegionByBankId","clearBankData","getBanks","then","catch","getBranchByRegionId","getBankRegions","getBranchs","clearRegionData","clearBranchData","notify","text","color"],"sourceRoot":"src/views/reports/components","sources":["searchBranhcReportComponent.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <v-card elevation=\"3\" height=\"auto\" class=\"px-5\">\r\n      <v-row>\r\n        <v-subheader>\r\n          <v-icon class=\"mx-2\">search</v-icon>\r\n          بحث علي طلب دفتر صكوك\r\n        </v-subheader>\r\n      </v-row>\r\n      <v-form ref=\"formSearch\" v-model=\"valid\">\r\n        <v-row dense class=\"px-5\">\r\n          <v-col dense cols=\"12\" sm=\"6\" md=\"4\">\r\n            <v-text-field\r\n              v-model=\"searchName\"\r\n              label=\"رقم الإشاري\"\r\n              clearable\r\n              :rules=\"\r\n                searchName\r\n                  ? [\r\n                      validationInput.isEmpty,\r\n                      validationInput.numberAndEng,\r\n                    ]\r\n                  : []\r\n              \"\r\n              dense\r\n              prepend-icon=\"mdi-ticket-confirmation\"\r\n              persistent-hint\r\n            ></v-text-field>\r\n          </v-col>\r\n\r\n          <v-col cols=\"12\" sm=\"6\" md=\"4\" v-if=\"hasPermassion(['AdminSystem'])\">\r\n            <v-autocomplete\r\n              v-model=\"selectedBank\"\r\n              :items=\"banks\"\r\n              dense\r\n              :loading=\"isLoading\"\r\n              single-line\r\n              :search-input.sync=\"searchBank\"\r\n              @keyup=\"getBanks\"\r\n              item-text=\"name\"\r\n              item-value=\"bankId\"\r\n              label=\"اختر المصرف\"\r\n              placeholder=\"يجب إختيار المصرف\"\r\n              return-object\r\n              no-data-text=\"قم بالبحث عن اسم المصرف\"\r\n              clearable\r\n              :rules=\"[validationInput.selectedValidation]\"\r\n              required\r\n              prepend-icon=\"mdi-bank\"\r\n              @change=\"getRegionByBankId\"\r\n            ></v-autocomplete>\r\n          </v-col>\r\n\r\n          <v-col cols=\"12\" sm=\"6\" md=\"4\" v-if=\"hasPermassion(['AdminSystem','BranchAllReport'])\">\r\n            <v-autocomplete\r\n              v-model=\"selectedRegion\"\r\n              :items=\"regions\"\r\n              :loading=\"isLoadingRegion\"\r\n              single-line\r\n              :search-input.sync=\"searchRegion\"\r\n              item-text=\"regionName\"\r\n              item-value=\"bankRegionId\"\r\n              label=\"اختر المنطقة\"\r\n              placeholder=\"بحث عن طريق المنطفة\"\r\n              return-object\r\n              no-data-text=\"قم بالبحث عن منطقة\"\r\n              clearable\r\n              @keyup=\"getBankRegions\"\r\n              @change=\"getBranchByRegionId\"\r\n              dense\r\n              prepend-icon=\"mdi-map-marker\"\r\n            ></v-autocomplete>\r\n          </v-col>\r\n\r\n          <v-col cols=\"12\" sm=\"6\" md=\"4\" v-if=\"hasPermassion(['AdminSystem','BranchAllReport'])\">\r\n            <v-autocomplete\r\n              v-model=\"selectedBranch\"\r\n              :items=\"branchs\"\r\n              :loading=\"isLoadingBranch\"\r\n              single-line\r\n              :search-input.sync=\"searchBranch\"\r\n              item-text=\"name\"\r\n              item-value=\"id\"\r\n              label=\"اختر الفرع\"\r\n              placeholder=\"بحث عن طريق الفرع\"\r\n              return-object\r\n              no-data-text=\"لايوجد بيانات\"\r\n              clearable\r\n              @keyup=\"getBranchs\"\r\n              prepend-icon=\"mdi-bank\"\r\n              dense\r\n            ></v-autocomplete>\r\n          </v-col>\r\n\r\n          <v-col cols=\"12\" sm=\"6\" md=\"4\">\r\n            <v-select\r\n              v-model=\"selectOrderRequestType\"\r\n              :items=\"enumModel.OrderRequestTypeList\"\r\n              label=\"بحث عن طريق نوع الطلب\"\r\n              item-text=\"name\"\r\n              item-value=\"id\"\r\n              dense\r\n              clearable\r\n              persistent-hint\r\n              prepend-icon=\"mdi-account-search\"\r\n            ></v-select>\r\n          </v-col>\r\n          <v-col cols=\"12\" sm=\"6\" md=\"4\">\r\n            <v-select\r\n              v-model=\"selectOrderRequestState\"\r\n              :items=\"filterOrderRequestStateList\"\r\n              label=\"بحث عن طريق حالة الطلب\"\r\n              item-text=\"name\"\r\n              item-value=\"id\"\r\n              dense\r\n              clearable\r\n              persistent-hint\r\n              prepend-icon=\"mdi-account-search\"\r\n            ></v-select>\r\n          </v-col>\r\n          <v-col cols=\"12\" sm=\"6\" md=\"4\">\r\n            <v-select\r\n              v-model=\"selectInputType\"\r\n              :items=\"enumModel.InputTypeList\"\r\n              label=\"بحث بطريقة الطلب\"\r\n              item-text=\"name\"\r\n              item-value=\"id\"\r\n              dense\r\n              clearable\r\n              persistent-hint\r\n              prepend-icon=\"mdi-account-search\"\r\n            ></v-select>\r\n          </v-col>\r\n          <v-col cols=\"12\" sm=\"6\" md=\"4\">\r\n            <v-menu\r\n              ref=\"menu1\"\r\n              v-model=\"menu1\"\r\n              :close-on-content-click=\"false\"\r\n              transition=\"scale-transition\"\r\n              offset-y\r\n              dense\r\n              max-width=\"290px\"\r\n              min-width=\"auto\"\r\n            >\r\n              <template v-slot:activator=\"{ on, attrs }\">\r\n                <v-text-field\r\n                  v-model=\"filterData.from\"\r\n                  label=\"من تاريخ\"\r\n                  hint=\"YYYY-MM-DD\"\r\n                  persistent-hint\r\n                  dense\r\n                  prepend-icon=\"mdi-calendar\"\r\n                  v-bind=\"attrs\"\r\n                  @blur=\"filterData.from = parseDate(dateFormattedFrom)\"\r\n                  readonly\r\n                  v-on=\"on\"\r\n                  clearable\r\n                ></v-text-field>\r\n              </template>\r\n              <v-date-picker\r\n                v-model=\"filterData.from\"\r\n                no-title\r\n                @input=\"menu1 = false\"\r\n              ></v-date-picker>\r\n            </v-menu>\r\n          </v-col>\r\n          <v-col cols=\"12\" sm=\"6\" md=\"4\">\r\n            <v-menu\r\n              ref=\"menu2\"\r\n              v-model=\"menu2\"\r\n              :close-on-content-click=\"false\"\r\n              transition=\"scale-transition\"\r\n              offset-y\r\n              dense\r\n              max-width=\"290px\"\r\n              min-width=\"auto\"\r\n            >\r\n              <template v-slot:activator=\"{ on, attrs }\">\r\n                <v-text-field\r\n                  v-model=\"filterData.to\"\r\n                  label=\"إلي تاريخ\"\r\n                  hint=\"YYYY-MM-DD\"\r\n                  persistent-hint\r\n                  dense\r\n                  prepend-icon=\"mdi-calendar\"\r\n                  v-bind=\"attrs\"\r\n                  @blur=\"filterData.to = parseDate(dateFormattedTo)\"\r\n                  readonly\r\n                  v-on=\"on\"\r\n                  clearable\r\n                ></v-text-field>\r\n              </template>\r\n              <v-date-picker\r\n                v-model=\"filterData.to\"\r\n                no-title\r\n                @input=\"menu2 = false\"\r\n              ></v-date-picker>\r\n            </v-menu>\r\n          </v-col>\r\n\r\n          <v-col cols=\"12\" class=\"text-center mb-3\">\r\n            <v-btn\r\n              v-if=\"filterIsSelected\"\r\n              color=\"#081D38\"\r\n              class=\"white--text\"\r\n              @click=\"searchData\"\r\n              :disabled=\"!valid\"\r\n              >بــحــث</v-btn\r\n            >\r\n            <v-btn\r\n              v-if=\"isSearchData\"\r\n              color=\"red\"\r\n              class=\"white--text mx-3\"\r\n              @click=\"clearFilterData\"\r\n              :disabled=\"!valid\"\r\n              >إلغاء البحث</v-btn\r\n            >\r\n          </v-col>\r\n        </v-row>\r\n      </v-form>\r\n    </v-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapActions } from \"vuex\";\r\n\r\nimport * as enums from \"../../../models/enum.js\";\r\nimport { validationInput } from \"../../../models/validationInput.js\";\r\n\r\nimport { createHelpers } from \"vuex-map-fields\";\r\nconst { mapFields } = createHelpers({\r\n  getterType: \"getDataFields\",\r\n  mutationType: \"updateDataField\",\r\n});\r\n\r\nexport default {\r\n  name: \"Serach-compnent\",\r\n  props: {\r\n    otherProcess: {},\r\n  },\r\n  data: () => ({\r\n    menu1: false,\r\n    menu2: false,\r\n    valid: false,\r\n    validationInput: validationInput,\r\n\r\n    filterData: {\r\n      branchId: null,\r\n      bankId: null,\r\n      identityNo: null,\r\n      orderRequestState: null,\r\n      orderRequestType: null,\r\n      inputType: null,\r\n      from: null,\r\n      to: null,\r\n      pageNo: 1,\r\n      pageSize: 30,\r\n    },\r\n\r\n    defaultFilterData: {\r\n      branchId: null,\r\n      identityNo: null,\r\n      orderRequestState: null,\r\n      orderRequestType: null,\r\n      inputType: null,\r\n      from: null,\r\n      to: null,\r\n      pageNo: 1,\r\n      pageSize: 30,\r\n    },\r\n\r\n    enumModel: enums,\r\n\r\n    isSearchData: false,\r\n    selectOrderRequestState: null,\r\n    selectInputType: null,\r\n    selectOrderRequestType: null,\r\n\r\n    isLoading: false,\r\n    selectedBank: null,\r\n    searchBank: null,\r\n    filterBankData: {\r\n      bankName: null,\r\n    },\r\n\r\n    regions: [],\r\n    isLoadingRegion: false,\r\n    selectedRegion: null,\r\n    searchRegion: null,\r\n    filterRegionData: {\r\n      bankId: null,\r\n      regionName: null,\r\n    },\r\n\r\n    branchs: [],\r\n    isLoadingBranch: false,\r\n    selectedBranch: null,\r\n    searchBranch: null,\r\n    filterBranchData: {\r\n      branchRegionId: null,\r\n      nameOrNumber: null,\r\n    },\r\n\r\n    searchName: \"\",\r\n  }),\r\n\r\n  watch: {\r\n    searchName(val) {\r\n      this.filterData.identityNo = val;\r\n    },\r\n\r\n    searchRegion(val) {\r\n      this.filterRegionData.regionName = val;\r\n    },\r\n\r\n    searchBranch(val) {\r\n      this.filterBranchData.nameOrNumber = val;\r\n    },\r\n    selectedRegion(val) {\r\n      if (!val) this.clearBranchData();\r\n    },\r\n    searchBank(val) {\r\n      if (this.isLoading) return;\r\n\r\n      this.filterBankData.bankName = val;\r\n    },\r\n    selectedBank(val) {\r\n      if (!val) this.clearRegionData();\r\n    },\r\n  },\r\n\r\n  computed: {\r\n    filterIsSelected() {\r\n      if (\r\n        this.filterData.identityNo ||\r\n        this.selectedBranch ||\r\n        this.selectOrderRequestState ||\r\n        this.selectOrderRequestType ||\r\n        this.selectInputType ||\r\n        (this.filterData.from && this.filterData.to)\r\n      )\r\n        return true;\r\n      else return false;\r\n    },\r\n\r\n    dateFormattedFrom() {\r\n      return this.formatDate(this.filterData.from);\r\n    },\r\n    dateFormattedTo() {\r\n      return this.formatDate(this.filterData.to);\r\n    },\r\n\r\n    filterOrderRequestStateList() {\r\n      return this.enumModel.OrderRequestStateList.filter(\r\n        (pred) => pred.id != enums.OrderRequestState.PrintOutCenter\r\n      );\r\n    },\r\n\r\n    ...mapFields(\"bankStore\", {\r\n      banks: \"grids\",\r\n    }),\r\n  },\r\n  methods: {\r\n    formatDate(date) {\r\n      if (!date) return null;\r\n\r\n      const [year, month, day] = date.split(\"-\");\r\n      return `${month}/${day}/${year}`;\r\n    },\r\n    parseDate(date) {\r\n      if (!date) return null;\r\n\r\n      const [month, day, year] = date.split(\"/\");\r\n      return `${year}-${month.padStart(2, \"0\")}-${day.padStart(2, \"0\")}`;\r\n    },\r\n\r\n    ...mapActions({\r\n      GetActiveBankRegions: \"bankRegionStore/GetActiveBankRegions\",\r\n      GetActiveBranchs: \"branchStore/GetActiveBranchs\",\r\n      GetBankStore: \"bankStore/GetBanks\",\r\n    }),\r\n    hasPermassion(crrentUser) {\r\n      this.userPermasstion = this.$store.getters[\"auth/getRole\"];\r\n      var result = this.userPermasstion.some((item) =>\r\n        crrentUser.includes(item)\r\n      );\r\n      return result;\r\n    },\r\n\r\n    searchData() {\r\n      this.filterData.branchId = this.selectedBranch?.id ?? null;\r\n      this.filterData.orderRequestState = this.selectOrderRequestState ?? null;\r\n      this.filterData.inputType = this.selectInputType ?? null;\r\n      this.filterData.orderRequestType = this.selectOrderRequestType ?? null;\r\n\r\n      this.isSearchData = true;\r\n      this.$emit(\"search-data\", this.filterData);\r\n    },\r\n\r\n    clearFilterData() {\r\n      this.clearData();\r\n      this.isSearchData = false;\r\n      this.$emit(\"search-data\", this.filterData);\r\n    },\r\n\r\n    clearData() {\r\n      this.filterData = Object.assign({}, this.defaultFilterData);\r\n      this.selectOrderRequestState = null;\r\n      this.selectInputType = null;\r\n      this.selectOrderRequestType = null;\r\n      this.clearRegionData();\r\n      this.clearBranchData();\r\n      this.clearBankData();\r\n    },\r\n\r\n    getRegionByBankId() {\r\n      if (!this.selectedBank) return;\r\n      this.clearRegionData();\r\n      this.filterRegionData.bankId = this.selectedBank?.bankId;\r\n      this.getBankRegions();\r\n    },\r\n\r\n    clearBankData() {\r\n      this.isLoading = false;\r\n      this.banks = [];\r\n      this.selectedBank = null;\r\n      this.searchBank = null;\r\n      this.filterBankData.bankName = null;\r\n    },\r\n\r\n    getBanks() {\r\n      try {\r\n        this.isLoading = true;\r\n        this.GetBankStore(this.filterBankData)\r\n          .then(() => {\r\n            this.banks = [...this.$store.getters[\"bankStore/GET_ACTIVE_BANKS\"]];\r\n            this.isLoading = false;\r\n          })\r\n          .catch((error) => {\r\n            this.notify(`${error}`, \"#1d262d\");\r\n            this.isLoading = false;\r\n          });\r\n      } catch (error) {\r\n        this.isLoading = false;\r\n        this.notify(error, \"#1d262d\");\r\n      }\r\n    },\r\n\r\n    getBranchByRegionId() {\r\n      this.clearBranchData();\r\n      if (!this.selectedRegion) {\r\n        return;\r\n      }\r\n      this.filterBranchData.branchRegionId = this.selectedRegion?.bankRegionId;\r\n      this.getBranchs();\r\n    },\r\n\r\n    getBankRegions() {\r\n      this.isLoadingRegion = true;\r\n      this.GetActiveBankRegions(this.filterRegionData)\r\n        .then(() => {\r\n          this.regions = [\r\n            ...this.$store.getters[\"bankRegionStore/GET_ACTIVE_BANKREGIONS\"],\r\n          ];\r\n          this.isLoadingRegion = false;\r\n        })\r\n        .catch(() => {\r\n          // this.notify(`${error}`, \"#1d262d\");\r\n          this.isLoadingRegion = false;\r\n        });\r\n    },\r\n\r\n    getBranchs() {\r\n      if (!this.selectedRegion) return;\r\n\r\n      this.isLoadingBranch = true;\r\n      this.GetActiveBranchs(this.filterBranchData)\r\n        .then(() => {\r\n          this.branchs = [\r\n            ...this.$store.getters[\"branchStore/GET_ACTIVE_BRANCHS\"],\r\n          ];\r\n          this.isLoadingBranch = false;\r\n        })\r\n        .catch(() => {\r\n          // this.notify(`${error}`, \"#1d262d\");\r\n          this.isLoadingBranch = false;\r\n        });\r\n    },\r\n\r\n    clearRegionData() {\r\n      this.clearBranchData();\r\n      this.isLoadingRegion = false;\r\n      this.regions = [];\r\n      this.selectedRegion = null;\r\n      this.searchRegion = null;\r\n      this.filterRegionData.bankId = null;\r\n      this.filterRegionData.regionName = null;\r\n    },\r\n\r\n    clearBranchData() {\r\n      this.isLoadingBranch = false;\r\n      this.branchs = [];\r\n      this.selectedBranch = null;\r\n      this.searchBranch = null;\r\n      this.filterBranchData.branchRegionId = null;\r\n      this.filterBranchData.nameOrNumber = null;\r\n    },\r\n\r\n    notify(text, color) {\r\n      this.$store.commit(\"showMessage\", { text: text, color: color });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style></style>\r\n"]},"metadata":{},"sourceType":"module"}