{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport CryptoJS from \"crypto-js\";\nvar key = \"82f2ceed4c503896c8a291e560bd4326\";\nvar iv = \"tatweerDev\";\nexport function aesEncrypt(txt) {\n  var cipher = CryptoJS.AES.encrypt(txt, CryptoJS.enc.Utf8.parse(key), {\n    iv: CryptoJS.enc.Utf8.parse(iv),\n    mode: CryptoJS.mode.CBC\n  });\n  return cipher.toString();\n}\nexport function aesDencrypt(txt) {\n  var cipher = CryptoJS.AES.decrypt(txt, CryptoJS.enc.Utf8.parse(key), {\n    iv: CryptoJS.enc.Utf8.parse(iv),\n    mode: CryptoJS.mode.CBC\n  });\n  return CryptoJS.enc.Utf8.stringify(cipher).toString();\n}\nexport function HasPermassion() {\n  var userPermasstions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var isAccess = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  return userPermasstions.some(function (item) {\n    return isAccess.includes(item);\n  });\n}","map":{"version":3,"names":["CryptoJS","key","iv","aesEncrypt","txt","cipher","AES","encrypt","enc","Utf8","parse","mode","CBC","toString","aesDencrypt","decrypt","stringify","HasPermassion","userPermasstions","isAccess","some","item","includes"],"sources":["D:/repo Tatweer/tatweerteams/CheckbooksOrderingUI/src/models/secretData.js"],"sourcesContent":["import CryptoJS from \"crypto-js\";\r\n\r\nconst key = \"82f2ceed4c503896c8a291e560bd4326\";\r\nconst iv = \"tatweerDev\";\r\n\r\nexport function aesEncrypt(txt) {\r\n  const cipher = CryptoJS.AES.encrypt(txt, CryptoJS.enc.Utf8.parse(key), {\r\n    iv: CryptoJS.enc.Utf8.parse(iv),\r\n    mode: CryptoJS.mode.CBC,\r\n  });\r\n\r\n  return cipher.toString();\r\n}\r\n\r\nexport function aesDencrypt(txt) {\r\n  const cipher = CryptoJS.AES.decrypt(txt, CryptoJS.enc.Utf8.parse(key), {\r\n    iv: CryptoJS.enc.Utf8.parse(iv),\r\n    mode: CryptoJS.mode.CBC,\r\n  });\r\n\r\n  return CryptoJS.enc.Utf8.stringify(cipher).toString();\r\n}\r\n\r\nexport function HasPermassion(\r\n  userPermasstions = [],\r\n  isAccess = []\r\n) {\r\n  return userPermasstions.some((item) => isAccess.includes(item));\r\n}\r\n"],"mappings":";;;;AAAA,OAAOA,QAAQ,MAAM,WAAW;AAEhC,IAAMC,GAAG,GAAG,kCAAkC;AAC9C,IAAMC,EAAE,GAAG,YAAY;AAEvB,OAAO,SAASC,UAAU,CAACC,GAAG,EAAE;EAC9B,IAAMC,MAAM,GAAGL,QAAQ,CAACM,GAAG,CAACC,OAAO,CAACH,GAAG,EAAEJ,QAAQ,CAACQ,GAAG,CAACC,IAAI,CAACC,KAAK,CAACT,GAAG,CAAC,EAAE;IACrEC,EAAE,EAAEF,QAAQ,CAACQ,GAAG,CAACC,IAAI,CAACC,KAAK,CAACR,EAAE,CAAC;IAC/BS,IAAI,EAAEX,QAAQ,CAACW,IAAI,CAACC;EACtB,CAAC,CAAC;EAEF,OAAOP,MAAM,CAACQ,QAAQ,EAAE;AAC1B;AAEA,OAAO,SAASC,WAAW,CAACV,GAAG,EAAE;EAC/B,IAAMC,MAAM,GAAGL,QAAQ,CAACM,GAAG,CAACS,OAAO,CAACX,GAAG,EAAEJ,QAAQ,CAACQ,GAAG,CAACC,IAAI,CAACC,KAAK,CAACT,GAAG,CAAC,EAAE;IACrEC,EAAE,EAAEF,QAAQ,CAACQ,GAAG,CAACC,IAAI,CAACC,KAAK,CAACR,EAAE,CAAC;IAC/BS,IAAI,EAAEX,QAAQ,CAACW,IAAI,CAACC;EACtB,CAAC,CAAC;EAEF,OAAOZ,QAAQ,CAACQ,GAAG,CAACC,IAAI,CAACO,SAAS,CAACX,MAAM,CAAC,CAACQ,QAAQ,EAAE;AACvD;AAEA,OAAO,SAASI,aAAa,GAG3B;EAAA,IAFAC,gBAAgB,uEAAG,EAAE;EAAA,IACrBC,QAAQ,uEAAG,EAAE;EAEb,OAAOD,gBAAgB,CAACE,IAAI,CAAC,UAACC,IAAI;IAAA,OAAKF,QAAQ,CAACG,QAAQ,CAACD,IAAI,CAAC;EAAA,EAAC;AACjE"},"metadata":{},"sourceType":"module"}