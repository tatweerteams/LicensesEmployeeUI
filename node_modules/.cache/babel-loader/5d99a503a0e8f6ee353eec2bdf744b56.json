{"ast":null,"code":"export const validationInput = {\n  isEmpty: v => v && !!v?.trim() || \"الرجاء إدخال هذا الحقل\",\n  numberOnly: v => /^[0-9]*$/.test(v) || \"الرجاء ادخال أرقام فقط\",\n  numberNotZero: v => !isNaN(parseInt(v)) && v >= 1 || \"يجب إدخال بطريقة صحيحة\",\n  currectInput: v => !!v && !v?.includes(\"ـ\") || \"يجب ادخال بطريقة الصحيحة\",\n  isArabic: v => /^[\\u0621-\\u064A ]*$/.test(v) || \"الرجاء إدخال باللغة العربية\",\n  numberAndArabic: v => /^[\\u0621-\\u064A0-9\\s]*$/.test(v) || \"الرجاء إدخال بطريقة الصحيحة\",\n  phoneLength: v => v?.length == 10 || \"رقم الهاتف يجب ان يتكون من 10 أرقام\",\n  phoneNumber: v => v?.startsWith(\"092\", 0) || v?.startsWith(\"091\", 0) || v?.startsWith(\"094\", 0) || v?.startsWith(\"095\", 0) || v?.startsWith(\"021\", 0) || v?.startsWith(\"023\", 0) || v?.startsWith(\"025\", 0) || v?.startsWith(\"024\", 0) || v?.startsWith(\"053\", 0) || v?.startsWith(\"051\", 0) || v?.startsWith(\"054\", 0) || v?.startsWith(\"057\", 0) || v?.startsWith(\"064\", 0) || v?.startsWith(\"061\", 0) || v?.startsWith(\"067\", 0) || v?.startsWith(\"069\", 0) || v?.startsWith(\"063\", 0) || v?.startsWith(\"062\", 0) || v?.startsWith(\"071\", 0) || \"يجب إدخال رقم الهاتف بطريقة الصحيحة \",\n  phoneNumberNotZero: v => !isNaN(parseInt(v)) && parseInt(v?.substring(3, v?.length)) >= 1 || \"يجب إدخال رقم الهاتف بطريقة الصحيحة \",\n  selectedValidation: v => !!v || \"الرجاء إختيار هذا الحقل\",\n  selectedListValidation: v => !!v.length > 0 || \"الرجاء إختيار هذا الحقل\",\n  minLength: v => v && v.trim().length >= 3 || \"الرجاء إدخال 3 خانات\",\n  minLengthAccount: v => v && (v.trim().length == 14 || v.trim().length == 15) || \"الرجاء إدخال 14 او 15 خانة\",\n  numberAndEng: v => /^[a-zA-z0-9]*$/.test(v) || \"يجب ان يتكون من أرقام وحروف لاتينية فقط\",\n  englishOnly: v => /^[a-zA-Z\\s]*$/.test(v) || \"يجب ان يتكون من حروف لاتينية فقط\",\n  maxNumberCheckBook: v => !isNaN(parseInt(v)) && v <= 99 || \"يجب ان تكون الكمية الدفاتر أقل من 99 دفتر \",\n  numEngAr: v => /^[a-zA-z0-9-\\u0621-\\u064A]*$/.test(v) || \"يجب ان لا يتحوي علي رموز \"\n};","map":{"version":3,"names":["validationInput","isEmpty","v","trim","numberOnly","test","numberNotZero","isNaN","parseInt","currectInput","includes","isArabic","numberAndArabic","phoneLength","length","phoneNumber","startsWith","phoneNumberNotZero","substring","selectedValidation","selectedListValidation","minLength","minLengthAccount","numberAndEng","englishOnly","maxNumberCheckBook","numEngAr"],"sources":["D:/repo Tatweer/tatweerteams/CheckbooksOrderingUI/src/models/validationInput.js"],"sourcesContent":["export const validationInput = {\r\n  isEmpty: (v) => (v && !!v?.trim()) || \"الرجاء إدخال هذا الحقل\",\r\n  numberOnly: (v) => /^[0-9]*$/.test(v) || \"الرجاء ادخال أرقام فقط\",\r\n  numberNotZero: (v) =>\r\n    (!isNaN(parseInt(v)) && v >= 1) || \"يجب إدخال بطريقة صحيحة\",\r\n  currectInput: (v) => (!!v && !v?.includes(\"ـ\")) || \"يجب ادخال بطريقة الصحيحة\",\r\n  isArabic: (v) =>\r\n    /^[\\u0621-\\u064A ]*$/.test(v) || \"الرجاء إدخال باللغة العربية\",\r\n  numberAndArabic: (v) =>\r\n    /^[\\u0621-\\u064A0-9\\s]*$/.test(v) || \"الرجاء إدخال بطريقة الصحيحة\",\r\n  phoneLength: (v) => v?.length == 10 || \"رقم الهاتف يجب ان يتكون من 10 أرقام\",\r\n  phoneNumber: (v) =>\r\n    v?.startsWith(\"092\", 0) ||\r\n    v?.startsWith(\"091\", 0) ||\r\n    v?.startsWith(\"094\", 0) ||\r\n    v?.startsWith(\"095\", 0) ||\r\n    v?.startsWith(\"021\", 0) ||\r\n    v?.startsWith(\"023\", 0) ||\r\n    v?.startsWith(\"025\", 0) ||\r\n    v?.startsWith(\"024\", 0) ||\r\n    v?.startsWith(\"053\", 0) ||\r\n    v?.startsWith(\"051\", 0) ||\r\n    v?.startsWith(\"054\", 0) ||\r\n    v?.startsWith(\"057\", 0) ||\r\n    v?.startsWith(\"064\", 0) ||\r\n    v?.startsWith(\"061\", 0) ||\r\n    v?.startsWith(\"067\", 0) ||\r\n    v?.startsWith(\"069\", 0) ||\r\n    v?.startsWith(\"063\", 0) ||\r\n    v?.startsWith(\"062\", 0) ||\r\n    v?.startsWith(\"071\", 0) ||\r\n    \"يجب إدخال رقم الهاتف بطريقة الصحيحة \",\r\n\r\n  phoneNumberNotZero: (v) =>\r\n    (!isNaN(parseInt(v)) && parseInt(v?.substring(3, v?.length)) >= 1) ||\r\n    \"يجب إدخال رقم الهاتف بطريقة الصحيحة \",\r\n\r\n  selectedValidation: (v) => !!v || \"الرجاء إختيار هذا الحقل\",\r\n  selectedListValidation: (v) => !!v.length > 0 || \"الرجاء إختيار هذا الحقل\",\r\n  minLength: (v) => (v && v.trim().length >= 3) || \"الرجاء إدخال 3 خانات\",\r\n\r\n  minLengthAccount: (v) =>\r\n    (v && (v.trim().length == 14 || v.trim().length == 15)) ||\r\n    \"الرجاء إدخال 14 او 15 خانة\",\r\n\r\n  numberAndEng: (v) =>\r\n    /^[a-zA-z0-9]*$/.test(v) || \"يجب ان يتكون من أرقام وحروف لاتينية فقط\",\r\n\r\n  englishOnly: (v) =>\r\n    /^[a-zA-Z\\s]*$/.test(v) || \"يجب ان يتكون من حروف لاتينية فقط\",\r\n\r\n  maxNumberCheckBook: (v) =>\r\n    (!isNaN(parseInt(v)) && v <= 99) ||\r\n    \"يجب ان تكون الكمية الدفاتر أقل من 99 دفتر \",\r\n    \r\n  numEngAr: (v) =>\r\n    /^[a-zA-z0-9-\\u0621-\\u064A]*$/.test(v) || \"يجب ان لا يتحوي علي رموز \",\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}