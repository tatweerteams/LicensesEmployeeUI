{"ast":null,"code":"import { mapActions } from \"vuex\";\nimport { createHelpers } from \"vuex-map-fields\";\nconst {\n  mapFields\n} = createHelpers({\n  getterType: \"getDataFields\",\n  mutationType: \"updateDataField\"\n});\nimport { aesDencrypt } from \"../../../models/secretData.js\";\nimport { EventBus } from \"../../../eventBus.js\";\nimport { OrderRequestState } from \"../../../models/enum.js\";\nimport { OrderRequestTypeToTextPublic, OrderItemStateToTextPublic, ValidateAccountCountWithMinBranchCountPublic, ValidateOrderRequestStatePublic } from \"../../../models/mothedPublic.js\";\nimport SerachComponent from \"../components/searchComponent.vue\";\nimport InsertOrderItemComponent from \"../components/insertOrderItemComponent.vue\";\nimport DeleteOrderItemComponent from \"../components/deleteOrderItemComponent.vue\";\nimport updateOrderItemComponent from \"../components/updateOrderItemComponent.vue\";\nexport default {\n  components: {\n    SerachComponent,\n    InsertOrderItemComponent,\n    DeleteOrderItemComponent,\n    updateOrderItemComponent\n  },\n  created() {\n    this.filterData.orderRequestId = aesDencrypt(this.$route.params.id);\n    this.initialize();\n    EventBus.$on(\"closeDialogInsertOrderRequestItem\", isInsertData => {\n      if (isInsertData) this.initialize();\n    });\n    EventBus.$on(\"closeDeleteDialogOrderItem\", () => {\n      this.itemDelete = null;\n    });\n    EventBus.$on(\"closeDialogUpdateOrderItem\", () => {\n      this.updateOrderItem = null;\n    });\n    EventBus.$on(\"refreshDataOrderItem\", () => {\n      this.initialize();\n    });\n  },\n  data: () => ({\n    headers: [{\n      text: \"#\",\n      value: \"increment\",\n      sortable: false,\n      align: \"center\"\n    }, {\n      text: \"رقم الحساب\",\n      value: \"accountNo\",\n      sortable: false,\n      align: \"center\"\n    }, {\n      text: \"إسم صاحب الحساب\",\n      value: \"accountName\",\n      sortable: false,\n      align: \"center\"\n    }, {\n      text: \"رقم التسلسل\",\n      value: \"serialFrom\",\n      sortable: false,\n      align: \"center\"\n    }, {\n      text: \"حالة الطـلب\",\n      value: \"state\",\n      sortable: false,\n      align: \"center\"\n    }, {\n      text: \"كمية الدفاتر\",\n      value: \"countChekBook\",\n      sortable: false,\n      align: \"center\"\n    }, {\n      text: \"الإجراءات\",\n      value: \"action\",\n      sortable: false,\n      align: \"center\"\n    }],\n    page: 1,\n    pageSize: 1,\n    filterData: {\n      orderRequestId: null,\n      accounNoOrName: null,\n      serialFrom: null,\n      quentity: null,\n      orderItemState: null,\n      pageNo: 1,\n      pageSize: 30\n    },\n    itemDelete: null,\n    updateOrderItem: null\n  }),\n  computed: {\n    ...mapFields(\"orderItemStore\", {\n      grids: \"orderItems\",\n      orderRequest: \"orderRequest\",\n      pageCount: \"pageCount\"\n    }),\n    titleOrder() {\n      return `بيانات الطلبية  ${OrderRequestTypeToTextPublic(this.orderRequest?.orderRequestType)} ${this.orderRequest?.branchName ?? \"\"}`;\n    },\n    checkCanInsertAccount() {\n      return this.orderRequest?.orderRequestState == OrderRequestState.Process;\n    },\n    checkCanSendRequest() {\n      return ValidateAccountCountWithMinBranchCountPublic(this.orderRequest) || ValidateOrderRequestStatePublic(this.orderRequest);\n    }\n  },\n  methods: {\n    getIncrement(item) {\n      var index = this.grids.indexOf(item);\n      var valuePage = (this.page - 1) * this.filterData.pageSize;\n      return valuePage + index + 1;\n    },\n    backPage() {\n      this.$router.back();\n    },\n    ...mapActions({\n      GetOrderItems: \"orderItemStore/GetOrderItems\",\n      SendOrderRequest: \"orderRequestStore/SendOrderRequest\"\n    }),\n    initialize() {\n      try {\n        this.filterData.pageNo = this.page;\n        this.$store.dispatch(\"loading\", true);\n        this.GetOrderItems(this.filterData).then(() => {\n          this.$store.dispatch(\"loading\", false);\n          this.pageSize = this.pageCount;\n        }).catch(error => {\n          this.$store.dispatch(\"loading\", false);\n          this.notify(`${error}`, \"#1d262d\");\n        });\n      } catch (error) {\n        this.$store.dispatch(\"loading\", false);\n        this.notify(error, \"#1d262d\");\n      }\n    },\n    sendRequestItem() {\n      const sendItem = {\n        orderRequestId: this.filterData.orderRequestId\n      };\n      try {\n        this.$store.dispatch(\"loading\", true);\n        this.SendOrderRequest(sendItem).then(res => {\n          this.notify(`${res}`, \"#1d262d\");\n          this.backPage();\n        }).catch(error => {\n          this.notify(`${error}`, \"#1d262d\");\n          this.$store.dispatch(\"loading\", false);\n        });\n      } catch (error) {\n        this.$store.dispatch(\"loading\", false);\n        this.notify(error, \"#1d262d\");\n      }\n    },\n    searchData(filter) {\n      this.page = 1;\n      this.filterData.accounNoOrName = filter.accounNoOrName;\n      this.filterData.serialFrom = filter.serialFrom;\n      this.filterData.quentity = filter.quentity;\n      this.filterData.requestState = filter.requestState;\n      this.initialize();\n    },\n    onPaginationClick(page) {\n      this.page = page;\n      this.initialize();\n    },\n    orderItemStateToText(item) {\n      return OrderItemStateToTextPublic(item);\n    },\n    deleteOrderItem(item) {\n      this.itemDelete = item;\n    },\n    editOrderItem(item) {\n      this.updateOrderItem = item;\n    },\n    notify(text, color) {\n      this.$store.commit(\"showMessage\", {\n        text: text,\n        color: color\n      });\n    }\n  },\n  watch: {}\n};","map":{"version":3,"mappings":"AA2JA;AACA;AACA;EAAAA;AAAA;EACAC;EACAC;AACA;AAEA;AACA;AAEA;AACA,SACAC,8BACAC,4BACAC,8CACAC,uCACA;AAEA;AACA;AACA;AACA;AACA;EACAC;IACAC;IACAC;IACAC;IACAC;EACA;EAEAC;IACA;IACA;IAEAC;MACA;IACA;IAEAA;MACA;IACA;IAEAA;MACA;IACA;IAEAA;MACA;IACA;EACA;EAEAC;IACAC,UACA;MACAC;MACAC;MACAC;MACAC;IACA,GACA;MACAH;MACAC;MACAC;MACAC;IACA,GAEA;MACAH;MACAC;MACAC;MACAC;IACA,GAEA;MACAH;MACAC;MACAC;MACAC;IACA,GAEA;MACAH;MACAC;MACAC;MACAC;IACA,GACA;MACAH;MACAC;MACAC;MACAC;IACA,GACA;MACAH;MACAC;MACAC;MACAC;IACA,EACA;IAEAC;IACAC;IAEAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAP;IACA;IAEAQ;IACAC;EACA;EAEAC;IACA;MACAC;MACAC;MACAC;IACA;IAIAC;MACA,uDACA,oCACA;IACA;IAEAC;MACA;IACA;IACAC;MACA,OACAhC,mEACAC;IAEA;EACA;EAEAgC;IACAC,mBACA;MACA;MACA;MACA;IACA;IACAC;MACA;IACA;IAEA;MACAC;MACAC;IACA;IAEAC;MACA;QACA;QACA;QACA,oCACAC;UACA;UACA;QACA,GACAC;UACA;UACA;QACA;MACA;QACA;QACA;MACA;IACA;IAEAC;MACA;QACAvB;MACA;MACA;QACA;QACA,gCACAqB;UACA;UACA;QACA,GACAC;UACA;UACA;QACA;MACA;QACA;QACA;MACA;IACA;IAEAE;MACA;MAEA;MACA;MACA;MACA;MAEA;IACA;IAEAC;MACA;MACA;IACA;IAEAC;MACA;IACA;IAIAC;MACA;IACA;IAEAC;MACA;IACA;IAEAC;MACA;QAAApC;QAAAqC;MAAA;IACA;EACA;EAEAC;AACA","names":["mapFields","getterType","mutationType","OrderRequestTypeToTextPublic","OrderItemStateToTextPublic","ValidateAccountCountWithMinBranchCountPublic","ValidateOrderRequestStatePublic","components","SerachComponent","InsertOrderItemComponent","DeleteOrderItemComponent","updateOrderItemComponent","created","EventBus","data","headers","text","value","sortable","align","page","pageSize","filterData","orderRequestId","accounNoOrName","serialFrom","quentity","orderItemState","pageNo","itemDelete","updateOrderItem","computed","grids","orderRequest","pageCount","titleOrder","checkCanInsertAccount","checkCanSendRequest","methods","getIncrement","backPage","GetOrderItems","SendOrderRequest","initialize","then","catch","sendRequestItem","searchData","onPaginationClick","orderItemStateToText","deleteOrderItem","editOrderItem","notify","color","watch"],"sourceRoot":"src/views/OrderRequestItem/pages","sources":["index.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <template v-if=\"itemDelete\">\r\n      <DeleteOrderItemComponent\r\n        :deleteItemProp=\"itemDelete\"\r\n        @refresh-data-delete=\"initialize\"\r\n      ></DeleteOrderItemComponent>\r\n    </template>\r\n    <template v-if=\"updateOrderItem\">\r\n      <updateOrderItemComponent\r\n        :updateItemProp=\"updateOrderItem\"\r\n        @refresh-data-update=\"initialize\"\r\n      ></updateOrderItemComponent>\r\n    </template>\r\n    <v-card\r\n      min-height=\"40rem\"\r\n      color=\"transparent\"\r\n      elevation=\"0\"\r\n      height=\"auto\"\r\n      style=\"padding:30px; \"\r\n    >\r\n      <SerachComponent @search-data=\"searchData\"></SerachComponent>\r\n      <v-btn class=\"my-5\" @click=\"backPage\" color=\"#03213d\" elevation=\"0\" text>\r\n        <v-icon>mdi-arrow-right-thick</v-icon> رجوع للقائمة الطلبات\r\n      </v-btn>\r\n      <v-data-table\r\n        :headers=\"headers\"\r\n        :disable-pagination=\"true\"\r\n        :items=\"grids\"\r\n        hide-default-footer\r\n        class=\"elevation-5 pa-5\"\r\n      >\r\n        <template v-slot:top>\r\n          <v-toolbar flat color=\"white\">\r\n            <v-toolbar-title\r\n              ><v-icon>mdi-newspaper-plus</v-icon> {{ titleOrder }}\r\n            </v-toolbar-title>\r\n            <v-divider class=\"mx-4\" inset vertical></v-divider>\r\n\r\n            <v-spacer />\r\n\r\n            <InsertOrderItemComponent\r\n              v-if=\"checkCanInsertAccount\"\r\n              :orderRequestIdProp=\"filterData.orderRequestId\"\r\n              @refresh-data=\"initialize\"\r\n            ></InsertOrderItemComponent>\r\n          </v-toolbar>\r\n        </template>\r\n\r\n        <template v-slot:[`item.serialFrom`]=\"{ item }\">\r\n          <v-chip\r\n            v-if=\"!item.serialFrom\"\r\n            small\r\n            color=\"#E91D62\"\r\n            text-color=\"white\"\r\n          >\r\n            لم يتم الإصدار\r\n          </v-chip>\r\n          <template v-else>\r\n            {{ item.serialFrom }}\r\n          </template>\r\n        </template>\r\n\r\n        <template v-slot:[`item.state`]=\"{ item }\">\r\n          <v-chip small color=\"#E91D62\" text-color=\"white\">\r\n            {{ orderItemStateToText(item.state) }}\r\n          </v-chip>\r\n        </template>\r\n\r\n        <template v-slot:[`item.countChekBook`]=\"{ item }\">\r\n          <v-chip small color=\"#081D38\" text-color=\"white\">\r\n            {{ item.countChekBook }}\r\n          </v-chip>\r\n        </template>\r\n        <template v-slot:[`item.increment`]=\"{ item }\">\r\n          {{ getIncrement(item) }}\r\n        </template>\r\n\r\n        <template v-slot:[`item.action`]=\"{ item }\">\r\n          <v-tooltip bottom>\r\n            <template v-slot:activator=\"{ on, attrs }\">\r\n              <v-btn\r\n                x-small\r\n                :disabled=\"!checkCanInsertAccount\"\r\n                class=\"mx-2\"\r\n                fab\r\n                v-bind=\"attrs\"\r\n                v-on=\"on\"\r\n                color=\"#536DFE\"\r\n                @click=\"editOrderItem(item)\"\r\n              >\r\n                <v-icon color=\"#fff\">mdi-text-box-edit</v-icon>\r\n              </v-btn>\r\n            </template>\r\n            <span>تعديل عدد الدفاتر</span>\r\n          </v-tooltip>\r\n\r\n          <v-tooltip bottom>\r\n            <template v-slot:activator=\"{ on, attrs }\">\r\n              <v-btn\r\n                :disabled=\"!checkCanInsertAccount\"\r\n                x-small\r\n                fab\r\n                v-bind=\"attrs\"\r\n                v-on=\"on\"\r\n                color=\"#E91D62\"\r\n                @click=\"deleteOrderItem(item)\"\r\n              >\r\n                <v-icon color=\"#fff\">mdi-delete</v-icon>\r\n              </v-btn>\r\n            </template>\r\n            <span>إلغاء دفتر</span>\r\n          </v-tooltip>\r\n        </template>\r\n\r\n        <template v-slot:no-data>\r\n          <v-btn color=\"#081D38\" class=\"white--text\" @click=\"initialize\"\r\n            >عرض البيانات</v-btn\r\n          >\r\n        </template>\r\n      </v-data-table>\r\n\r\n      <template class=\"mt-5\">\r\n        <div class=\"text-center mt-3\">\r\n          <v-pagination\r\n            v-model=\"page\"\r\n            :length=\"pageSize\"\r\n            circle\r\n            color=\"#081D38\"\r\n            @input=\"onPaginationClick\"\r\n            :total-visible=\"7\"\r\n          ></v-pagination>\r\n        </div>\r\n      </template>\r\n      <v-row class=\"my-5\">\r\n        <v-col cols=\"12\" class=\"justify-center text-center\">\r\n          <v-btn\r\n            @click=\"sendRequestItem\"\r\n            color=\"success\"\r\n            elevation=\"10\"\r\n            :disabled=\"checkCanSendRequest\"\r\n          >\r\n            <v-icon>mdi-arrow-right-thick</v-icon> إرسال الطلبية\r\n          </v-btn>\r\n        </v-col>\r\n      </v-row>\r\n\r\n      <v-btn @click=\"backPage\" color=\"#03213d\" elevation=\"0\" text>\r\n        <v-icon>mdi-arrow-right-thick</v-icon> رجوع للقائمة الطلبات\r\n      </v-btn>\r\n    </v-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapActions } from \"vuex\";\r\nimport { createHelpers } from \"vuex-map-fields\";\r\nconst { mapFields } = createHelpers({\r\n  getterType: \"getDataFields\",\r\n  mutationType: \"updateDataField\",\r\n});\r\n\r\nimport { aesDencrypt } from \"../../../models/secretData.js\";\r\nimport { EventBus } from \"../../../eventBus.js\";\r\n\r\nimport { OrderRequestState } from \"../../../models/enum.js\";\r\nimport {\r\n  OrderRequestTypeToTextPublic,\r\n  OrderItemStateToTextPublic,\r\n  ValidateAccountCountWithMinBranchCountPublic,\r\n  ValidateOrderRequestStatePublic,\r\n} from \"../../../models/mothedPublic.js\";\r\n\r\nimport SerachComponent from \"../components/searchComponent.vue\";\r\nimport InsertOrderItemComponent from \"../components/insertOrderItemComponent.vue\";\r\nimport DeleteOrderItemComponent from \"../components/deleteOrderItemComponent.vue\";\r\nimport updateOrderItemComponent from \"../components/updateOrderItemComponent.vue\";\r\nexport default {\r\n  components: {\r\n    SerachComponent,\r\n    InsertOrderItemComponent,\r\n    DeleteOrderItemComponent,\r\n    updateOrderItemComponent,\r\n  },\r\n\r\n  created() {\r\n    this.filterData.orderRequestId = aesDencrypt(this.$route.params.id);\r\n    this.initialize();\r\n\r\n    EventBus.$on(\"closeDialogInsertOrderRequestItem\", (isInsertData) => {\r\n      if (isInsertData) this.initialize();\r\n    });\r\n\r\n    EventBus.$on(\"closeDeleteDialogOrderItem\", () => {\r\n      this.itemDelete = null;\r\n    });\r\n\r\n    EventBus.$on(\"closeDialogUpdateOrderItem\", () => {\r\n      this.updateOrderItem = null;\r\n    });\r\n\r\n    EventBus.$on(\"refreshDataOrderItem\", () => {\r\n      this.initialize();\r\n    });\r\n  },\r\n\r\n  data: () => ({\r\n    headers: [\r\n      {\r\n        text: \"#\",\r\n        value: \"increment\",\r\n        sortable: false,\r\n        align: \"center\",\r\n      },\r\n      {\r\n        text: \"رقم الحساب\",\r\n        value: \"accountNo\",\r\n        sortable: false,\r\n        align: \"center\",\r\n      },\r\n\r\n      {\r\n        text: \"إسم صاحب الحساب\",\r\n        value: \"accountName\",\r\n        sortable: false,\r\n        align: \"center\",\r\n      },\r\n\r\n      {\r\n        text: \"رقم التسلسل\",\r\n        value: \"serialFrom\",\r\n        sortable: false,\r\n        align: \"center\",\r\n      },\r\n\r\n      {\r\n        text: \"حالة الطـلب\",\r\n        value: \"state\",\r\n        sortable: false,\r\n        align: \"center\",\r\n      },\r\n      {\r\n        text: \"كمية الدفاتر\",\r\n        value: \"countChekBook\",\r\n        sortable: false,\r\n        align: \"center\",\r\n      },\r\n      {\r\n        text: \"الإجراءات\",\r\n        value: \"action\",\r\n        sortable: false,\r\n        align: \"center\",\r\n      },\r\n    ],\r\n\r\n    page: 1,\r\n    pageSize: 1,\r\n\r\n    filterData: {\r\n      orderRequestId: null,\r\n      accounNoOrName: null,\r\n      serialFrom: null,\r\n      quentity: null,\r\n      orderItemState: null,\r\n      pageNo: 1,\r\n      pageSize: 30,\r\n    },\r\n\r\n    itemDelete: null,\r\n    updateOrderItem: null,\r\n  }),\r\n\r\n  computed: {\r\n    ...mapFields(\"orderItemStore\", {\r\n      grids: \"orderItems\",\r\n      orderRequest: \"orderRequest\",\r\n      pageCount: \"pageCount\",\r\n    }),\r\n\r\n    \r\n\r\n    titleOrder() {\r\n      return `بيانات الطلبية  ${OrderRequestTypeToTextPublic(\r\n        this.orderRequest?.orderRequestType\r\n      )} ${this.orderRequest?.branchName ?? \"\"}`;\r\n    },\r\n\r\n    checkCanInsertAccount() {\r\n      return this.orderRequest?.orderRequestState == OrderRequestState.Process;\r\n    },\r\n    checkCanSendRequest() {\r\n      return (\r\n        ValidateAccountCountWithMinBranchCountPublic(this.orderRequest) ||\r\n        ValidateOrderRequestStatePublic(this.orderRequest)\r\n      );\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    getIncrement(item)\r\n    {\r\n      var index= this.grids.indexOf(item);\r\n      var valuePage= (this.page-1) * this.filterData.pageSize;\r\n      return valuePage + index + 1 ;\r\n    },\r\n    backPage() {\r\n      this.$router.back();\r\n    },\r\n\r\n    ...mapActions({\r\n      GetOrderItems: \"orderItemStore/GetOrderItems\",\r\n      SendOrderRequest: \"orderRequestStore/SendOrderRequest\",\r\n    }),\r\n\r\n    initialize() {\r\n      try {\r\n        this.filterData.pageNo = this.page;\r\n        this.$store.dispatch(\"loading\", true);\r\n        this.GetOrderItems(this.filterData)\r\n          .then(() => {\r\n            this.$store.dispatch(\"loading\", false);\r\n            this.pageSize = this.pageCount;\r\n          })\r\n          .catch((error) => {\r\n            this.$store.dispatch(\"loading\", false);\r\n            this.notify(`${error}`, \"#1d262d\");\r\n          });\r\n      } catch (error) {\r\n        this.$store.dispatch(\"loading\", false);\r\n        this.notify(error, \"#1d262d\");\r\n      }\r\n    },\r\n\r\n    sendRequestItem() {\r\n      const sendItem = {\r\n        orderRequestId: this.filterData.orderRequestId,\r\n      };\r\n      try {\r\n        this.$store.dispatch(\"loading\", true);\r\n        this.SendOrderRequest(sendItem)\r\n          .then((res) => {\r\n            this.notify(`${res}`, \"#1d262d\");\r\n            this.backPage();\r\n          })\r\n          .catch((error) => {\r\n            this.notify(`${error}`, \"#1d262d\");\r\n            this.$store.dispatch(\"loading\", false);\r\n          });\r\n      } catch (error) {\r\n        this.$store.dispatch(\"loading\", false);\r\n        this.notify(error, \"#1d262d\");\r\n      }\r\n    },\r\n\r\n    searchData(filter) {\r\n      this.page = 1;\r\n\r\n      this.filterData.accounNoOrName = filter.accounNoOrName;\r\n      this.filterData.serialFrom = filter.serialFrom;\r\n      this.filterData.quentity = filter.quentity;\r\n      this.filterData.requestState = filter.requestState;\r\n\r\n      this.initialize();\r\n    },\r\n\r\n    onPaginationClick(page) {\r\n      this.page = page;\r\n      this.initialize();\r\n    },\r\n\r\n    orderItemStateToText(item) {\r\n      return OrderItemStateToTextPublic(item);\r\n    },\r\n\r\n  \r\n\r\n    deleteOrderItem(item) {\r\n      this.itemDelete = item;\r\n    },\r\n\r\n    editOrderItem(item) {\r\n      this.updateOrderItem = item;\r\n    },\r\n\r\n    notify(text, color) {\r\n      this.$store.commit(\"showMessage\", { text: text, color: color });\r\n    },\r\n  },\r\n\r\n  watch: {},\r\n};\r\n</script>\r\n\r\n<style></style>\r\n"]},"metadata":{},"sourceType":"module"}