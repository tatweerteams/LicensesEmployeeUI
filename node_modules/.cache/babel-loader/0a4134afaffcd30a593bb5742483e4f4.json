{"ast":null,"code":"import _toConsumableArray from \"D:/repo Tatweer/tatweerteams/CheckbooksOrderingUI/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _objectSpread from \"D:/repo Tatweer/tatweerteams/CheckbooksOrderingUI/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport { validationInput } from \"../../../../models/validationInput.js\";\nimport { UserTypeStateList } from \"../../../../models/enum\";\nimport { mapActions } from \"vuex\";\n// import { createHelpers } from \"vuex-map-fields\";\n// const { mapMultiRowFields  } = createHelpers({\n//   getterType: \"getDataFields\",\n//   mutationType: \"updateDataField\",\n// });\nexport default {\n  name: \"insert-Or-Update\",\n  props: {\n    updateItemProp: {}\n  },\n  components: {},\n  data: function data() {\n    return {\n      dialog: false,\n      valid: false,\n      validationInput: validationInput,\n      editItem: {\n        id: null,\n        userType: 0,\n        name: null,\n        email: null,\n        roleId: null,\n        phoneNumber: null,\n        branchNumber: null,\n        employeeNumber: null,\n        branchId: null,\n        branchName: null,\n        regionId: null,\n        regionName: null,\n        bankId: null,\n        bankName: null\n      },\n      defaultItem: {\n        id: null,\n        userType: 0,\n        name: null,\n        email: null,\n        roleId: null,\n        phoneNumber: null,\n        branchNumber: null,\n        employeeNumber: null,\n        branchId: null,\n        branchName: null,\n        regionId: null,\n        regionName: null,\n        bankId: null,\n        bankName: null\n      },\n      roles: [],\n      searchRole: null,\n      selectedRole: null,\n      filterDataRole: {\n        name: null,\n        userType: 0\n      },\n      userTypes: UserTypeStateList,\n      selectUserType: null\n    };\n  },\n  computed: {\n    formTitle: function formTitle() {\n      return this.editItem.id ? \"تعديل بيانات المستخدم\" : \"إضافة مستخدم جديد\";\n    }\n  },\n  watch: {\n    updateItemProp: {\n      handler: function handler(data) {\n        if (data) this.editSelected(data);\n      },\n      immediate: true\n    },\n    searchPermisstion: function searchPermisstion(data) {\n      this.filterDataPermisstion.name = data;\n    }\n  },\n  methods: _objectSpread(_objectSpread({}, mapActions({\n    InsertUserStore: \"userStore/InsertUser\",\n    UpdateUserStore: \"userStore/UpdateUser\",\n    GetRoles: \"roleStore/GetActiveRoles\"\n  })), {}, {\n    getRoles: function getRoles() {\n      var _this = this;\n      if (!this.selectUserType) return;\n      this.filterDataRole.userType = this.selectUserType;\n      this.GetRoles(this.filterDataRole).then(function () {\n        _this.roles = _toConsumableArray(_this.$store.getters[\"roleStore/GET_ACTIVE_ROLES\"]);\n      }).catch(function (error) {\n        _this.notify(\"\".concat(error), \"#1d262d\");\n      });\n    },\n    openDialog: function openDialog() {\n      this.dialog = true;\n    },\n    editSelected: function editSelected(item) {\n      this.selectUserType = item.userType;\n      this.editItem.name = item.name;\n      this.editItem.id = item.id;\n      this.dialog = true;\n    },\n    clearRole: function clearRole() {\n      this.searchRole = null;\n      this.filterDataRole.name = null;\n      this.filterDataRole.userType = 0;\n      this.selectedRole = null;\n      this.roles = [];\n    },\n    close: function close() {\n      this.resetValidation();\n      this.editItem = Object.assign({}, this.defaultItem);\n      this.selectUserType = null;\n      this.dialog = false;\n      this.clearRole();\n      this.$emit(\"close-dialog-InsertOrUpdate\");\n    },\n    save: function save() {\n      this.editItem.userType = this.selectUserType;\n      if (this.editItem.id) {\n        this.UpdateUser();\n      } else {\n        this.InsertUser();\n      }\n    },\n    UpdateUser: function UpdateUser() {\n      var _this2 = this;\n      this.$store.dispatch(\"loading\", true);\n      this.UpdateUserStore(this.editItem).then(function (res) {\n        _this2.notify(\"\".concat(res), \"#1d262d\");\n        _this2.$emit(\"refresh-data\");\n        _this2.close();\n      }).catch(function (error) {\n        _this2.notify(\"\".concat(error), \"#1d262d\");\n        _this2.$store.dispatch(\"loading\", false);\n      });\n    },\n    InsertUser: function InsertUser() {\n      var _this3 = this;\n      this.$store.dispatch(\"loading\", true);\n      this.InsertUserStore(this.editItem).then(function (res) {\n        _this3.notify(\"\".concat(res), \"#1d262d\");\n        _this3.$emit(\"refresh-data\");\n        _this3.close();\n      }).catch(function (error) {\n        _this3.notify(\"\".concat(error), \"#1d262d\");\n        _this3.$store.dispatch(\"loading\", false);\n      });\n    },\n    resetValidation: function resetValidation() {\n      var _this$$refs$formUser;\n      (_this$$refs$formUser = this.$refs.formUser) === null || _this$$refs$formUser === void 0 ? void 0 : _this$$refs$formUser.reset();\n    },\n    notify: function notify(text, color) {\n      this.$store.commit(\"showMessage\", {\n        text: text,\n        color: color\n      });\n    }\n  })\n};","map":{"version":3,"mappings":";;;AAwIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;EACAA;EACAC;IACAC;EACA;EACAC;EAEAC;IAAA;MACAC;MACAC;MACAC;MAEAC;QACAC;QACAC;QACAV;QACAW;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;MACA;MAEAC;QACAb;QACAC;QACAV;QACAW;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;MACA;MAEAE;MAEAC;MACAC;MACAC;QACA1B;QACAU;MACA;MAEAiB;MACAC;IACA;EAAA;EAEAC;IACAC;MACA;IACA;EACA;EAEAC;IACA7B;MACA8B;QACA;MACA;MACAC;IACA;IACAC;MACA;IACA;EACA;EACAC,yCACAC;IACAC;IACAC;IACAC;EACA;IAEAC;MAAA;MACA;MACA;MACA,mCACAC;QACA;MACA,GACAC;QACA;MACA;IACA;IAEAC;MACA;IACA;IAEAC;MACA;MACA;MACA;MACA;IACA;IAEAC;MACA;MACA;MACA;MACA;MACA;IACA;IAEAC;MACA;MACA;MACA;MACA;MACA;MACA;IACA;IAEAC;MACA;MACA;QACA;MACA;QACA;MACA;IACA;IAEAC;MAAA;MACA;MACA,oCACAP;QACA;QACA;QACA;MACA,GACAC;QACA;QACA;MACA;IACA;IACAO;MAAA;MACA;MACA,oCACAR;QACA;QACA;QAEA;MACA,GACAC;QACA;QACA;MACA;IACA;IAEAQ;MAAA;MACA;IACA;IAEAC;MACA;QAAAC;QAAAC;MAAA;IACA;EAAA;AAEA","names":["name","props","updateItemProp","components","data","dialog","valid","validationInput","editItem","id","userType","email","roleId","phoneNumber","branchNumber","employeeNumber","branchId","branchName","regionId","regionName","bankId","bankName","defaultItem","roles","searchRole","selectedRole","filterDataRole","userTypes","selectUserType","computed","formTitle","watch","handler","immediate","searchPermisstion","methods","mapActions","InsertUserStore","UpdateUserStore","GetRoles","getRoles","then","catch","openDialog","editSelected","clearRole","close","save","UpdateUser","InsertUser","resetValidation","notify","text","color"],"sourceRoot":"src/views/userManagment/user/components","sources":["insertOrUpdateUserComponent.vue"],"sourcesContent":["<template>\r\n  <v-dialog v-model=\"dialog\" max-width=\"800px\" persistent>\r\n    <template v-slot:activator=\"{ on }\">\r\n      <template>\r\n        <v-btn\r\n          color=\"#536DFE\"\r\n          class=\"white--text \"\r\n          @click=\"openDialog\"\r\n          v-on=\"on\"\r\n          elevation=\"5\"\r\n        >\r\n          <v-icon class=\"ml-2\">mdi-plus-circle</v-icon\r\n          ><span> إضافة مستخدم</span>\r\n        </v-btn>\r\n      </template>\r\n    </template>\r\n    <v-card>\r\n      <v-card-title>\r\n        <span class=\"headline\">{{ formTitle }}</span>\r\n      </v-card-title>\r\n\r\n      <v-divider></v-divider>\r\n\r\n      <v-card-text>\r\n        <v-container>\r\n          <v-form ref=\"formUser\" v-model=\"valid\">\r\n            <v-row>\r\n              <v-col cols=\"12\" sm=\"6\">\r\n                <v-text-field\r\n                  v-model=\"editItem.employeeNumber\"\r\n                  prepend-icon=\"mdi-file-document-alert\"\r\n                  dense\r\n                  :rules=\"[\r\n                    validationInput.isEmpty,\r\n                    validationInput.numberOnly,\r\n                    validationInput.minLength,\r\n                  ]\"\r\n                  label=\"رقم الوظيفي\"\r\n                  required\r\n                  maxLength=\"4\"\r\n                ></v-text-field>\r\n              </v-col>\r\n              <v-col cols=\"12\" sm=\"6\">\r\n                <v-text-field\r\n                  v-model=\"editItem.name\"\r\n                  prepend-icon=\"mdi-file-document-alert\"\r\n                  dense\r\n                  :rules=\"[\r\n                    validationInput.isEmpty,\r\n                    validationInput.isArabic,\r\n                    validationInput.minLength,\r\n                    validationInput.currectInput,\r\n                  ]\"\r\n                  label=\"اسم المستخدم\"\r\n                  required\r\n                  maxLength=\"50\"\r\n                ></v-text-field>\r\n              </v-col>\r\n              <v-col cols=\"12\" sm=\"6\">\r\n                <v-text-field\r\n                  v-model=\"editItem.phoneNumber\"\r\n                  prepend-icon=\"mdi-file-document-alert\"\r\n                  dense\r\n                  :rules=\"[\r\n                    validationInput.isEmpty,\r\n                    validationInput.numberOnly,\r\n                    validationInput.phoneNumber,\r\n                    validationInput.phoneNumberNotZero,\r\n                    validationInput.phoneLength,\r\n                  ]\"\r\n                  label=\"رقم الهاتف\"\r\n                  required\r\n                  maxLength=\"50\"\r\n                ></v-text-field>\r\n              </v-col>\r\n              <v-col cols=\"12\" sm=\"6\">\r\n                <v-select\r\n                  v-model=\"selectUserType\"\r\n                  :items=\"userTypes\"\r\n                  item-text=\"name\"\r\n                  item-value=\"id\"\r\n                  clearable\r\n                  prepend-icon=\"search\"\r\n                  label=\"التبعية\"\r\n                  dense\r\n                  :rules=\"[validationInput.selectedValidation]\"\r\n                  required\r\n                  @change=\"getRoles\"\r\n                >\r\n                </v-select>\r\n              </v-col>\r\n              <v-col cols=\"12\" sm=\"6\">\r\n                <v-select\r\n                  v-model=\"selectedRole\"\r\n                  :items=\"roles\"\r\n                  label=\"الدور\"\r\n                  placeholder=\"اختر الدور\"\r\n                  :rules=\"[validationInput.selectedValidation]\"\r\n                  required\r\n                  item-text=\"name\"\r\n                  item-value=\"id\"\r\n                  :search-input.sync=\"searchRole\"\r\n                  @keyup=\"getRoles\"\r\n                  dense\r\n                  chips\r\n                  return-object\r\n                  persistent-hint\r\n                ></v-select>\r\n              </v-col>\r\n            </v-row>\r\n          </v-form>\r\n        </v-container>\r\n      </v-card-text>\r\n\r\n      <v-card-actions>\r\n        <div style=\"width: 100%;text-align: center;\">\r\n          <v-btn\r\n            @click=\"save\"\r\n            class=\"mx-2 white--text\"\r\n            :disabled=\"!valid\"\r\n            color=\"#536DFE\"\r\n          >\r\n            <v-icon>save</v-icon>\r\n            <span>حفظ البيانات</span>\r\n          </v-btn>\r\n          <v-btn class=\"mx-2 white--text\" @click=\"close\" color=\"#E91D62\">\r\n            <v-icon dark>clear</v-icon>\r\n            <span>إغلاق</span>\r\n          </v-btn>\r\n        </div>\r\n      </v-card-actions>\r\n    </v-card>\r\n  </v-dialog>\r\n</template>\r\n\r\n<script>\r\nimport { validationInput } from \"../../../../models/validationInput.js\";\r\nimport { UserTypeStateList } from \"../../../../models/enum\";\r\n\r\nimport { mapActions } from \"vuex\";\r\n// import { createHelpers } from \"vuex-map-fields\";\r\n// const { mapMultiRowFields  } = createHelpers({\r\n//   getterType: \"getDataFields\",\r\n//   mutationType: \"updateDataField\",\r\n// });\r\nexport default {\r\n  name: \"insert-Or-Update\",\r\n  props: {\r\n    updateItemProp: {},\r\n  },\r\n  components: {},\r\n\r\n  data: () => ({\r\n    dialog: false,\r\n    valid: false,\r\n    validationInput: validationInput,\r\n\r\n    editItem: {\r\n      id: null,\r\n      userType: 0,\r\n      name: null,\r\n      email: null,\r\n      roleId: null,\r\n      phoneNumber: null,\r\n      branchNumber: null,\r\n      employeeNumber: null,\r\n      branchId: null,\r\n      branchName: null,\r\n      regionId: null,\r\n      regionName: null,\r\n      bankId: null,\r\n      bankName: null,\r\n    },\r\n\r\n    defaultItem: {\r\n      id: null,\r\n      userType: 0,\r\n      name: null,\r\n      email: null,\r\n      roleId: null,\r\n      phoneNumber: null,\r\n      branchNumber: null,\r\n      employeeNumber: null,\r\n      branchId: null,\r\n      branchName: null,\r\n      regionId: null,\r\n      regionName: null,\r\n      bankId: null,\r\n      bankName: null,\r\n    },\r\n\r\n    roles: [],\r\n\r\n    searchRole: null,\r\n    selectedRole: null,\r\n    filterDataRole: {\r\n      name: null,\r\n      userType: 0,\r\n    },\r\n\r\n    userTypes: UserTypeStateList,\r\n    selectUserType: null,\r\n  }),\r\n\r\n  computed: {\r\n    formTitle() {\r\n      return this.editItem.id ? \"تعديل بيانات المستخدم\" : \"إضافة مستخدم جديد\";\r\n    },\r\n  },\r\n\r\n  watch: {\r\n    updateItemProp: {\r\n      handler(data) {\r\n        if (data) this.editSelected(data);\r\n      },\r\n      immediate: true,\r\n    },\r\n    searchPermisstion(data) {\r\n      this.filterDataPermisstion.name = data;\r\n    },\r\n  },\r\n  methods: {\r\n    ...mapActions({\r\n      InsertUserStore: \"userStore/InsertUser\",\r\n      UpdateUserStore: \"userStore/UpdateUser\",\r\n      GetRoles: \"roleStore/GetActiveRoles\",\r\n    }),\r\n\r\n    getRoles() {\r\n      if (!this.selectUserType) return;\r\n      this.filterDataRole.userType = this.selectUserType;\r\n      this.GetRoles(this.filterDataRole)\r\n        .then(() => {\r\n          this.roles = [...this.$store.getters[\"roleStore/GET_ACTIVE_ROLES\"]];\r\n        })\r\n        .catch((error) => {\r\n          this.notify(`${error}`, \"#1d262d\");\r\n        });\r\n    },\r\n\r\n    openDialog() {\r\n      this.dialog = true;\r\n    },\r\n\r\n    editSelected(item) {\r\n      this.selectUserType = item.userType;\r\n      this.editItem.name = item.name;\r\n      this.editItem.id = item.id;\r\n      this.dialog = true;\r\n    },\r\n\r\n    clearRole() {\r\n      this.searchRole = null;\r\n      this.filterDataRole.name = null;\r\n      this.filterDataRole.userType = 0;\r\n      this.selectedRole = null;\r\n      this.roles = [];\r\n    },\r\n\r\n    close() {\r\n      this.resetValidation();\r\n      this.editItem = Object.assign({}, this.defaultItem);\r\n      this.selectUserType = null;\r\n      this.dialog = false;\r\n      this.clearRole();\r\n      this.$emit(\"close-dialog-InsertOrUpdate\");\r\n    },\r\n\r\n    save() {\r\n      this.editItem.userType = this.selectUserType;\r\n      if (this.editItem.id) {\r\n        this.UpdateUser();\r\n      } else {\r\n        this.InsertUser();\r\n      }\r\n    },\r\n\r\n    UpdateUser() {\r\n      this.$store.dispatch(\"loading\", true);\r\n      this.UpdateUserStore(this.editItem)\r\n        .then((res) => {\r\n          this.notify(`${res}`, \"#1d262d\");\r\n          this.$emit(\"refresh-data\");\r\n          this.close();\r\n        })\r\n        .catch((error) => {\r\n          this.notify(`${error}`, \"#1d262d\");\r\n          this.$store.dispatch(\"loading\", false);\r\n        });\r\n    },\r\n    InsertUser() {\r\n      this.$store.dispatch(\"loading\", true);\r\n      this.InsertUserStore(this.editItem)\r\n        .then((res) => {\r\n          this.notify(`${res}`, \"#1d262d\");\r\n          this.$emit(\"refresh-data\");\r\n\r\n          this.close();\r\n        })\r\n        .catch((error) => {\r\n          this.notify(`${error}`, \"#1d262d\");\r\n          this.$store.dispatch(\"loading\", false);\r\n        });\r\n    },\r\n\r\n    resetValidation() {\r\n      this.$refs.formUser?.reset();\r\n    },\r\n\r\n    notify(text, color) {\r\n      this.$store.commit(\"showMessage\", { text: text, color: color });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style></style>\r\n"]},"metadata":{},"sourceType":"module"}