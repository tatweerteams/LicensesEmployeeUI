{"ast":null,"code":"import { EventBus } from \"../../../eventBus.js\";\nimport { mapActions } from \"vuex\";\nimport { createHelpers } from \"vuex-map-fields\";\nconst {\n  mapFields\n} = createHelpers({\n  getterType: \"getDataFields\",\n  mutationType: \"updateDataField\"\n});\nimport BranchSettingComponent from \"../../SharedComponents/branchSettingComponent.vue\";\nimport EmptyComponent from \"../../SharedComponents/EmptyComponent.vue\";\nexport default {\n  name: \"branch-setting\",\n  props: {\n    itemBranchSettingProp: {}\n  },\n  components: {\n    BranchSettingComponent,\n    EmptyComponent\n  },\n  data: () => ({\n    dialog: false,\n    valid: false,\n    isLoading: true,\n    filterBranchSettingData: {\n      branchSettingId: null\n    }\n  }),\n  computed: {\n    ...mapFields(\"branchStore\", {\n      isEmpty: \"isEmpty\",\n      branchNo: \"editedItem.branchNo\",\n      name: \"editedItem.name\"\n    }),\n    titleSetting() {\n      return `إعدادات الفرع ( ${this.name} ) رقم الفرع ( ${this.branchNo} )`;\n    }\n  },\n  watch: {\n    itemBranchSettingProp: {\n      handler(data) {\n        if (data) this.editSelected(data);\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    ...mapActions({\n      ClearDataItemStore: \"branchStore/ClearDataItem\",\n      //   SetDataUpdateStore: \"branchStore/SetDataUpdate\",\n      GetBranchSetting: \"branchStore/GetBranchSetting\",\n      UpdateBranchSetting: \"branchStore/UpdateBranchSetting\"\n    }),\n    editSelected(item) {\n      this.filterBranchSettingData.branchSettingId = item.branchSettingId;\n      this.dialog = true;\n      this.getBranchSetting();\n    },\n    getBranchSetting() {\n      try {\n        this.isLoading = true;\n        this.GetBranchSetting(this.filterBranchSettingData).then(() => {\n          this.isLoading = false;\n        }).catch(error => {\n          this.notify(`${error}`, \"#1d262d\");\n          this.isLoading = false;\n        });\n      } catch (error) {\n        this.isLoading = false;\n        this.notify(error, \"#1d262d\");\n      }\n    },\n    close() {\n      this.dialog = false;\n      setTimeout(() => {\n        this.ClearDataItemStore();\n        this.isLoading = true;\n      }, 300);\n      this.resetValidation();\n      EventBus.$emit(\"closeDialogBranchSetting\");\n    },\n    save() {\n      this.$store.dispatch(\"loading\", true);\n      this.UpdateBranchSetting().then(res => {\n        this.notify(`${res}`, \"#1d262d\");\n        EventBus.$emit(\"refreshData\");\n        this.close();\n      }).catch(error => {\n        this.notify(`${error}`, \"#1d262d\");\n        this.$store.dispatch(\"loading\", false);\n      });\n      //\n    },\n\n    resetValidation() {\n      this.$refs.formBranchSetting?.reset();\n    },\n    notify(text, color) {\n      this.$store.commit(\"showMessage\", {\n        text: text,\n        color: color\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"AA6DA;AACA;AACA;AACA;EAAAA;AAAA;EACAC;EACAC;AACA;AACA;AACA;AACA;EACAC;EACAC;IACAC;EACA;EACAC;IACAC;IACAC;EACA;EAEAC;IACAC;IACAC;IAEAC;IAEAC;MACAC;IACA;EACA;EAEAC;IACA;MACAC;MACAC;MACAd;IACA;IAEAe;MACA;IACA;EACA;EAEAC;IACAd;MACAe;QACA;MACA;MACAC;IACA;EACA;EACAC;IACA;MACAC;MACA;MACAC;MACAC;IACA;IAEAC;MACA;MACA;MACA;IACA;IAEAC;MACA;QACA;QACA,oDACAC;UACA;QACA,GACAC;UACA;UACA;QACA;MACA;QACA;QACA;MACA;IACA;IAEAC;MACA;MACAC;QACA;QACA;MACA;MACA;MACAC;IACA;IAEAC;MACA;MACA,2BACAL;QACA;QACAI;QACA;MACA,GACAH;QACA;QACA;MACA;MACA;IACA;;IAEAK;MACA;IACA;IAEAC;MACA;QAAAC;QAAAC;MAAA;IACA;EACA;AACA","names":["mapFields","getterType","mutationType","name","props","itemBranchSettingProp","components","BranchSettingComponent","EmptyComponent","data","dialog","valid","isLoading","filterBranchSettingData","branchSettingId","computed","isEmpty","branchNo","titleSetting","watch","handler","immediate","methods","ClearDataItemStore","GetBranchSetting","UpdateBranchSetting","editSelected","getBranchSetting","then","catch","close","setTimeout","EventBus","save","resetValidation","notify","text","color"],"sourceRoot":"src/views/Branch/Components","sources":["BranchSettingComponent.vue"],"sourcesContent":["<template>\r\n  <v-dialog v-model=\"dialog\" max-width=\"800px\" persistent>\r\n    <v-card>\r\n      <v-card-title>\r\n        <span class=\"headline\">{{ titleSetting }}</span>\r\n      </v-card-title>\r\n\r\n      <v-divider></v-divider>\r\n\r\n      <v-card-text>\r\n        <v-container>\r\n          <v-form ref=\"formBranchSetting\" v-model=\"valid\">\r\n            <template v-if=\"isLoading\">\r\n              <v-row>\r\n                <v-col cols=\"12\" class=\"text-center\">\r\n                  <v-progress-circular\r\n                    indeterminate\r\n                    size=\"25\"\r\n                    width=\"2\"\r\n                    color=\"#536DFE\"\r\n                  >\r\n                  </v-progress-circular>\r\n                  جاري جلب الإعدادات\r\n                </v-col>\r\n              </v-row>\r\n            </template>\r\n            <template v-else-if=\"isEmpty\">\r\n              <EmptyComponent\r\n                message=\"لايوجد إعدادات للفرع\"\r\n                iconProp=\"mdi-cog-off-outline\"\r\n              ></EmptyComponent>\r\n            </template>\r\n            <template v-else>\r\n              <BranchSettingComponent></BranchSettingComponent>\r\n            </template>\r\n          </v-form>\r\n        </v-container>\r\n      </v-card-text>\r\n\r\n      <v-card-actions>\r\n        <div style=\"width: 100%;text-align: center;\">\r\n          <v-btn\r\n            @click=\"save\"\r\n            class=\"mx-2 white--text\"\r\n            :disabled=\"!valid || isLoading || isEmpty\"\r\n            color=\"#536DFE\"\r\n          >\r\n            <v-icon>save</v-icon>\r\n            <span>حفظ الإعدادات</span>\r\n          </v-btn>\r\n          <v-btn class=\"mx-2 white--text\" @click=\"close\" color=\"#E91D62\">\r\n            <v-icon dark>clear</v-icon>\r\n            <span>إلغاء</span>\r\n          </v-btn>\r\n        </div>\r\n      </v-card-actions>\r\n    </v-card>\r\n  </v-dialog>\r\n</template>\r\n\r\n<script>\r\nimport { EventBus } from \"../../../eventBus.js\";\r\nimport { mapActions } from \"vuex\";\r\nimport { createHelpers } from \"vuex-map-fields\";\r\nconst { mapFields } = createHelpers({\r\n  getterType: \"getDataFields\",\r\n  mutationType: \"updateDataField\",\r\n});\r\nimport BranchSettingComponent from \"../../SharedComponents/branchSettingComponent.vue\";\r\nimport EmptyComponent from \"../../SharedComponents/EmptyComponent.vue\";\r\nexport default {\r\n  name: \"branch-setting\",\r\n  props: {\r\n    itemBranchSettingProp: {},\r\n  },\r\n  components: {\r\n    BranchSettingComponent,\r\n    EmptyComponent,\r\n  },\r\n\r\n  data: () => ({\r\n    dialog: false,\r\n    valid: false,\r\n\r\n    isLoading: true,\r\n\r\n    filterBranchSettingData: {\r\n      branchSettingId: null,\r\n    },\r\n  }),\r\n\r\n  computed: {\r\n    ...mapFields(\"branchStore\", {\r\n      isEmpty: \"isEmpty\",\r\n      branchNo: \"editedItem.branchNo\",\r\n      name: \"editedItem.name\",\r\n    }),\r\n\r\n    titleSetting() {\r\n      return `إعدادات الفرع ( ${this.name} ) رقم الفرع ( ${this.branchNo} )`;\r\n    },\r\n  },\r\n\r\n  watch: {\r\n    itemBranchSettingProp: {\r\n      handler(data) {\r\n        if (data) this.editSelected(data);\r\n      },\r\n      immediate: true,\r\n    },\r\n  },\r\n  methods: {\r\n    ...mapActions({\r\n      ClearDataItemStore: \"branchStore/ClearDataItem\",\r\n      //   SetDataUpdateStore: \"branchStore/SetDataUpdate\",\r\n      GetBranchSetting: \"branchStore/GetBranchSetting\",\r\n      UpdateBranchSetting: \"branchStore/UpdateBranchSetting\",\r\n    }),\r\n\r\n    editSelected(item) {\r\n      this.filterBranchSettingData.branchSettingId = item.branchSettingId;\r\n      this.dialog = true;\r\n      this.getBranchSetting();\r\n    },\r\n\r\n    getBranchSetting() {\r\n      try {\r\n        this.isLoading = true;\r\n        this.GetBranchSetting(this.filterBranchSettingData)\r\n          .then(() => {\r\n            this.isLoading = false;\r\n          })\r\n          .catch((error) => {\r\n            this.notify(`${error}`, \"#1d262d\");\r\n            this.isLoading = false;\r\n          });\r\n      } catch (error) {\r\n        this.isLoading = false;\r\n        this.notify(error, \"#1d262d\");\r\n      }\r\n    },\r\n\r\n    close() {\r\n      this.dialog = false;\r\n      setTimeout(() => {\r\n        this.ClearDataItemStore();\r\n        this.isLoading = true;\r\n      }, 300);\r\n      this.resetValidation();\r\n      EventBus.$emit(\"closeDialogBranchSetting\");\r\n    },\r\n\r\n    save() {\r\n      this.$store.dispatch(\"loading\", true);\r\n      this.UpdateBranchSetting()\r\n        .then((res) => {\r\n          this.notify(`${res}`, \"#1d262d\");\r\n          EventBus.$emit(\"refreshData\");\r\n          this.close();\r\n        })\r\n        .catch((error) => {\r\n          this.notify(`${error}`, \"#1d262d\");\r\n          this.$store.dispatch(\"loading\", false);\r\n        });\r\n      //\r\n    },\r\n\r\n    resetValidation() {\r\n      this.$refs.formBranchSetting?.reset();\r\n    },\r\n\r\n    notify(text, color) {\r\n      this.$store.commit(\"showMessage\", { text: text, color: color });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style></style>\r\n"]},"metadata":{},"sourceType":"module"}